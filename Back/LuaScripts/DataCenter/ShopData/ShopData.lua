---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 2019/2/19 16:46
---

local ShopData = BaseClass("ShopData", Singleton)
local shop_good = DataUtil.GetData("shop_goods")
local function __init(self)
    self.all_goods = {}
    self.data_state = 0  -- 0-为请求 1-请求中  2-请求结束
    self.allItemGoldData = DataUtil.GetData("global")
    self.ExchangeGoldsData = DataUtil.GetData("coins_shop")
    self.allItemData = DataUtil.GetData("item")
    self.shopData=DataUtil.GetData("shop_goods")
    self.priceArray={}

end
--请求商店信息
local function RequestShopData(self)
    local msdId = MsgIDDefine.PBITEM_GET_GOODS_REQUEST
    local msdObj = MsgIDMap[msdId]()
    self.data_state = 1
    NetManager:GetInstance():SendMessage(msdId,msdObj,function(msg_obj)
        if msg_obj.OpCode ~= 0 then
            Logger.Log("OnRecvPveStart出错了~")
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            self.data_state = 0
            return
        end
        self.data_state = 2
        self.all_goods = {}
        Logger.LogAny(msg_obj.Packages.msg,"货物信息")
        if msg_obj.Packages.goodsInfo and not msg_obj.Packages.goodsInfo._is_null then
            for i, v in ipairs(msg_obj.Packages.goodsInfo) do
                self.all_goods[v.goodsId] = {v.todayBuyNum,v.limityBuyNum}
            end
        end
        DataManager:GetInstance():Broadcast(DataMessageNames.ON_SHOP_INFO_END)
    end)
end

local function BuyItemById(self,id,num,func)
    local msdId = MsgIDDefine.PBITEM_BUY_GOODS_REQUEST
    local msdObj = MsgIDMap[msdId]()
    msdObj.goodsId = id
    msdObj.num = num
    NetManager:GetInstance():SendMessage(msdId,msdObj,function(msg_obj)
        if msg_obj.OpCode ~= 0 then
            Logger.Log("OnRecvPveStart出错了~")
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            return
        end
        local have_buy = 0
        if self.all_goods[id] ~= nil then
            have_buy = self.all_goods[id][1]
        end
        BackpackData:GetInstance():UpdateItemData(shop_good[id].CoinType, -DataUtil.GetSuperposition(shop_good[id].Price,have_buy,num))
        if self.all_goods[id] ~= nil then
            self.all_goods[id][1] = self.all_goods[id][1]+num
            self.all_goods[id][2] = self.all_goods[id][2]-num
        else
            local limtNum = 9999999
            if shop_good[id].LimitNum ~= nil then
                limtNum = shop_good[id].LimitNum
            end
            self.all_goods[id] = {num,limtNum-num}
        end
        --DataUtil.ParseDropItem(msg_obj.Packages.reward)
        if func ~= nil then
            func(msg_obj.Packages.reward)
        end
        DataManager:GetInstance():Broadcast(DataMessageNames.ON_SHOP_INFO_END)
    end)
end

--获取全部商店数据
local function GetAllShopInfo(self)
    if self.data_state == 0 then
        RequestShopData(self)
    end
    return self.all_goods;
end

local function GetShopInfoById(self,id)
    if self.data_state == 0 then
        RequestShopData(self)
    end
    return self.all_goods[id]
end

--通过ID获取globle表中属性的值
local function GetGlobleItemInfoById(self,id)
    return self.allItemGoldData[id].valueN
end
--通过购买今日兑换次数获取coins_shop表中钻石花费的值
local function GetCostDiamond(self,num,haveBuyIndex)
    self.priceTotal=0
    self.haveBuyIndex=math.floor(haveBuyIndex)
    self.j=haveBuyIndex
    for i=1, num do
        self.j= self.j+1
        if self.ExchangeGoldsData[self.j] then
            self.priceTotal=self.priceTotal+self.ExchangeGoldsData[self.j].Cost[1].Val
        end
    end
    return self.priceTotal
end
--通过兑换次数获取coins_shop表中金币获得的值
local function GetGoldsNumber(self,num,haveBuyIndex)
    self.priceTotal=0
    self.haveBuyIndex=math.floor(haveBuyIndex)
    self.j=haveBuyIndex
    for i=1, num do
        self.j= self.j+1
        if self.ExchangeGoldsData[self.j] then
            self.priceTotal=self.priceTotal+self.ExchangeGoldsData[self.j].Reward[1].Val
        end
    end
    return self.priceTotal
end

--通过购买体力药剂个数获取shop表中钻石花费属性的值
local function GetDiamondCost(self,num,haveBuyIndex)
    self.priceArray=self.shopData[1203].Price
    self.priceTotal=0
    self.haveBuyIndex=math.floor(haveBuyIndex)
    for i, v in ipairs(self.priceArray) do
        if(i>self.haveBuyIndex and i<=(self.haveBuyIndex+num)) then
            self.priceTotal=self.priceTotal+v
        end
        end
    return self.priceTotal
end

ShopData.__init = __init
ShopData.BuyItemById = BuyItemById
ShopData.GetShopInfoById = GetShopInfoById
ShopData.GetAllShopInfo=GetAllShopInfo
ShopData.GetGlobleItemInfoById=GetGlobleItemInfoById
ShopData.GetCostDiamond=GetCostDiamond
ShopData.GetGoldsNumber=GetGoldsNumber
ShopData.GetDiamondCost=GetDiamondCost
return ShopData