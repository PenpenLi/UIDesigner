---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/6/14 13:40
local UnlockData = BaseClass("UnlockData", Singleton)
local UnlockStaticData = DataUtil.GetData("unlock")
local guide_unlock = DataUtil.GetData("guide_unlock")
local BattleFieldManager = require "GameLogic.BattleNew.Logic.Manager.BattleFieldManager"
local function __init(self)
    self.state = true
    self.lockType = 1
    self.funOpenState = 0;
end
--1050101 等级
--2010102 关卡
--检查某一个ID
local function GetLockDataState(self, lockID)
    local data = UnlockStaticData[lockID]
    self.state = true
    self.lockType = data.Type
    self.lockTip = data.Desc
    local NumCond = #data.Condition
    for i = 1, NumCond do
        if data.Condition[i].id == 1050101 then
            --等级
            if UserData:GetInstance().pLevel < data.Condition[i].param1 then
                self.state = false
                return self.state, self.lockType, self.lockTip
            end
        elseif data.Condition[i].id == 2010102 and data.Condition[i].param2 then
            --关卡   冒险关卡
            local first_num = Mathf.Floor(data.Condition[i].param2 / 10000)
            if first_num == 1 or first_num == 2 then
                --普通章节
                self.state = MapData:GetInstance():CheckPassLevel(data.Condition[i].param2)
                if not self.state then
                    return self.state, self.lockType, self.lockTip
                end
            elseif first_num == 4 then
                --风花雪月
                local  type= Mathf.Floor(data.Condition[i].param2 % 40000 / 1000)
                self.state = LuHuaGuLouData:GetInstance():CheckLockData(type, data.Condition[i].param2 % 40000 % 100)
                if not self.state then
                    return self.state, self.lockType, self.lockTip
                end
            end
        elseif data.Condition[i].id == 1010505 then
            --判断是否拥有N个  守护灵
            self.state = #CardData:GetInstance().SHLData >= data.Condition[i].param1
            if not self.state then
                return self.state, self.lockType, self.lockTip
            end
        elseif data.Condition[i].id == 1040103 then
            --判断兑换过几次技能
            self.state = SkillData:GetInstance():CheckDHSkillNum() >= data.Condition[i].param1
            if not self.state then
                return self.state, self.lockType, self.lockTip
            end
        elseif data.Condition[i].id == 1060201 then
            --判断是否强化过装备
            self.state = EquipData:GetInstance():GetIsStrengthEquip()
            if not self.state then
                return self.state, self.lockType, self.lockTip
            end
        elseif data.Condition[i].id == 1060102 then
            --卡牌是否穿戴装备
            self.state = CardData:GetInstance():CheckCardDressEquip() >= data.Condition[i].param3
            if not self.state then
                return self.state, self.lockType, self.lockTip
            end
        elseif data.Condition[i].id == 5010101 then
            --地狱道等级
            self.state = UserData:GetInstance().hellLevel >= data.Condition[i].param1
            if not self.state then
                return self.state, self.lockType, self.lockTip
            end
            --50101
        else
            Logger.Log(lockID .. "解锁没有这种功能ID检测" .. data.Condition[i].id)
            return true
        end
    end
    return true
end

--登录检测  /升级 关卡检测
local function CheckInitGuideStepList(self)
    --拿到引导ID  跟 解锁表对应
    --当前等级和关卡 对应的解锁
    self.open_not_guide = {}

    self:CheckInitUnlock()

    --到主界面开始关掉 UI    然后开始打开 解锁界面 开始引导
    if #self.not_open_guide > 0 then
        --需要开启引导 ~~~~~  咋办  -- 改变 GuideBool 值
        print(#self.not_open_guide .. "几个引导")
        for i = 1, #self.not_open_guide do
            print(self.not_open_guide[i])
        end
        GuideCheckManager:GetInstance():UnlockToGuide()
    end
end
local function GetGuideUnlockGroup(self, unlock_id, in_open)
    for i, v in ipairs(guide_unlock) do
        if v.lock_id == unlock_id then
            if in_open and v.group then
                for i = 1, #v.group do
                    if table.keyof(GuideManager:GetInstance().finishGroup, v.group[i]) == nil then
                        table.insert(self.not_open_guide, v.group[i])
                    end

                end
            end
            return v.group
        end
    end
    -- Logger.LogError("没有找到unlock_id 对应引导组"..unlock_id)
    return nil
end
local function CheckHaveGuide(self, group)
    for i = 1, #group do
        if table.keyof(GuideManager:GetInstance().finishGroup, group[i]) == nil then
            --如果完成里没有
            return true
        end
    end
    return false
end
--登录检测有无引导  然后开始引导
local function CheckInitUnlock(self)
    local lv = UserData:GetInstance().pLevel
    local pass_normal,pass_difficult = MapData:GetInstance():GetLastWinLevelId()
    self.not_open_guide = {}--需要执行引导
    for i, v in pairs(UnlockStaticData) do
        local group = self:GetGuideUnlockGroup(i)
        if v.Condition and group then
            if v.Condition[1].id == 1050101 and lv >= v.Condition[1].param1 then
                --等级
                for i = 1, #group do
                    if table.keyof(GuideManager:GetInstance().finishGroup, group[i]) == nil then
                        --完成里没有   添加进去 引导组  和关闭组
                        table.insert(self.not_open_guide, group[i]);
                    end
                end
            elseif v.Condition[1].id == 2010102 then
                --冒险关卡
                local first_num = Mathf.Floor(v.Condition[1].param2 / 10000)
                if first_num == 1 or first_num == 2 then
                    --普通章节
                    local pass=  first_num == 1 and pass_normal or pass_difficult
                    if pass >= v.Condition[1].param2 then
                        for i = 1, #group do
                            if table.keyof(GuideManager:GetInstance().finishGroup, group[i]) == nil then
                                --完成里没有   添加进去 引导组  和关闭组
                                table.insert(self.not_open_guide, group[i]);
                            end
                        end
                    end
                elseif first_num == 4 then
                    --风花雪月
                    if LuHuaGuLouData:GetInstance():CheckLockData(v.System.subid, v.Condition[1].param2 % 40000 % 100) then
                        for i = 1, #group do
                            if table.keyof(GuideManager:GetInstance().finishGroup, group[i]) == nil then
                                --完成里没有   添加进去 引导组  和关闭组
                                table.insert(self.not_open_guide, group[i]);
                            end
                        end
                    end
                end
            elseif v.Condition[1].id == 1060102 and CardData:GetInstance():CheckCardDressEquip() >= v.Condition[1].param3 then
                -- 身上装备
                for i = 1, #group do
                    if table.keyof(GuideManager:GetInstance().finishGroup, group[i]) == nil then
                        --完成里没有   添加进去 引导组  和关闭组
                        table.insert(self.not_open_guide, group[i]);
                    end
                end
            elseif v.Condition[1].id == 5010101 and UserData:GetInstance().hellLevel >= v.Condition[1].param1 then
                --地狱道等级
                for i = 1, #group do
                    if table.keyof(GuideManager:GetInstance().finishGroup, group[i]) == nil then
                        --完成里没有   添加进去 引导组  和关闭组
                        table.insert(self.not_open_guide, group[i]);
                    end
                end
            end
        end
    end
    if pass_normal == 10103 and table.keyof(GuideManager:GetInstance().finishGroup, 1001) == nil then
        --强制上阵nuiLOGIN
        table.insert(self.not_open_guide, 1001);
    end
end

--升级或者过关卡  检测开启的功能列表
local function CheckNewOpenFunList(self,lv,pass,hell)
    local _level= lv and UserData:GetInstance().pLevel or 0
    local _oldLevel=lv and UserData:GetInstance().oldLv or 0
    local _passId =pass and BattleFieldManager:GetInstance().fightId or 0
    local _helllv=hell and UserData:GetInstance().hellLevel or 0
    local _oldhelllv=hell and UserData:GetInstance().old_hellLevel or 0


    self.not_open_guide = {}
    local newOpenFunList = {};
    local state = 0;--功能开启的状态 1==等级  2==关卡开启  3== 没提示 但是有引导~~~(优先判断等级开启)
    print("当前等级", _level, "之前等级", _oldLevel, "通关id", _passId.."地狱道".._helllv.."老地狱道".._oldhelllv)
    for i, v in pairs(UnlockStaticData) do
        if v.TipType == 1 and v.Condition then
            if v.Condition[1].id == 1050101 then
                --等级
                if _level >= v.Condition[1].param1 and _oldLevel < v.Condition[1].param1 then
                    self:GetGuideUnlockGroup(i, true)
                    table.insert(newOpenFunList, { id = i, data = v });
                    state = 1;
                end
            elseif v.Condition[1].id == 2010102 and v.Condition[1].param2 then
                --冒险关卡
                local first_num = Mathf.Floor(v.Condition[1].param2 / 10000)
                if first_num == 1 or first_num ==2  then
                    --普通章节
                    local is_first=MapData:GetInstance().allChapter[first_num].isNewPassLv
                    if _passId == v.Condition[1].param2 and is_first then
                        self:GetGuideUnlockGroup(i, true)
                        table.insert(newOpenFunList, { id = i, data = v });
                        state = state == 1 and 1 or 2;
                    end
                elseif first_num == 4 then
                    --风花雪月
                    if _passId == v.Condition[1].param2 and LuHuaGuLouData:GetInstance():CheckLockData(v.System.subid, v.Condition[1].param2 % 40000 % 100, true) then
                        self:GetGuideUnlockGroup(i, true)
                        table.insert(newOpenFunList, { id = i, data = v });
                        state = state == 1 and 1 or 2;
                    end
                end
            elseif v.Condition[1].id == 1060102 and CardData:GetInstance():CheckCardDressEquip() >= v.Condition[1].param3 then
                --装备
                local group = self:GetGuideUnlockGroup(i)
                if CheckHaveGuide(self, group) then
                    self:GetGuideUnlockGroup(i, true)
                    table.insert(newOpenFunList, { id = i, data = v });
                    state = state == 1 and 1 or 2;
                end
            elseif v.Condition[1].id == 5010101 and _helllv >= v.Condition[1].param1 and  _oldhelllv <v.Condition[1].param1 then
                --地狱道等级
                local group = self:GetGuideUnlockGroup(i)
                if CheckHaveGuide(self, group) then
                    self:GetGuideUnlockGroup(i, true)
                    table.insert(newOpenFunList, { id = i, data = v });
                    state = state == 1 and 1 or 2;
                end
            end
        end
        if v.TipType == 0 and self:GetGuideUnlockGroup(i) then
            if v.Condition[1].id == 1050101 then
                --等级
                if _level >= v.Condition[1].param1 and _oldLevel < v.Condition[1].param1 then
                    self:GetGuideUnlockGroup(i, true)
                    --table.insert(newOpenFunList,{id=i,data=v});
                    state = 3;
                end
            elseif v.Condition[1].id == 2010102 then
                --冒险关卡
                local first_num = Mathf.Floor(v.Condition[1].param2 / 10000)
                if first_num == 1 or first_num == 2 then
                    --普通章节
                    local is_first=MapData:GetInstance().allChapter[first_num].isNewPassLv
                    if _passId == v.Condition[1].param2 and is_first then
                        self:GetGuideUnlockGroup(i, true)
                        state = 3
                        if _passId == 10103 and table.keyof(GuideManager:GetInstance().finishGroup, 1001) == nil then
                            --强制上阵nuiLOGIN
                            table.insert(self.not_open_guide, 1001);
                        end
                    end
                elseif first_num == 4 then
                    --风花雪月
                    if _passId == v.Condition[1].param2 and LuHuaGuLouData:GetInstance():CheckLockData(v.System.subid, v.Condition[1].param2 % 40000 % 100, true) then
                        self:GetGuideUnlockGroup(i, true)
                        --table.insert(newOpenFunList, { id = i, data = v });
                        state = 3
                    end
                end

            elseif v.Condition[1].id == 1060102 and CardData:GetInstance():CheckCardDressEquip() >= v.Condition[1].param3 then
                --装备
                local group = self:GetGuideUnlockGroup(i)
                if CheckHaveGuide(self, group) then
                    self:GetGuideUnlockGroup(i, true)
                    --table.insert(newOpenFunList, { id = i, data = v });
                    state = 3
                end
            elseif v.Condition[1].id == 5010101 and _helllv >= v.Condition[1].param1 and  _oldhelllv <v.Condition[1].param1 then
                --地狱道等级
                local group = self:GetGuideUnlockGroup(i)
                if CheckHaveGuide(self, group) then
                    self:GetGuideUnlockGroup(i, true)
                   -- table.insert(newOpenFunList, { id = i, data = v });
                    state = 3
                end
            end
        end
    end

    self.funOpenState = state;
    self.newOpenFunList = newOpenFunList;
    for i, v in ipairs(newOpenFunList) do
        if v.id == 313 then
            EquipData:GetInstance():GetSerEquipData()---请求装备
        elseif v.id == 303 then
            TaskData:GetInstance():RequestGetAllDaily()				---请求任务数
        elseif v.id == 305 then
            TongLingData:GetInstance():GetTongLingData()           --请求通灵数据
        elseif v.id == 102 then
            LuHuaGuLouData:GetInstance():SendGetReedTowerRequest()--楼花鼓楼请求
        elseif v.id == 203 then
            ArtifactsData:GetInstance():RequestArtifactMessage()--请求神器(需要有背包数据来判断红点)
        elseif v.id == 107 then
            TestHoardData:GetInstance():GetAllTestHoardData();---请求失恋宝库
        elseif v.id == 319 then
            BiographyData:GetInstance():GetAllBiographyData();---请求传记
        end
    end
    return state;
end
local function RemoveNotOpenGuide(self, group)
    if self.not_open_guide then
        for i = 1, #self.not_open_guide do
            if self.not_open_guide[i] == group then
                table.remove(self.not_open_guide, i)
            end
        end
    end
end
--重置功能开启状态数据
local function RebindFunOpenState(self)
    self.funOpenState = 0;
    self.newOpenFunList = nil;
end

UnlockData.RebindFunOpenState = RebindFunOpenState;
UnlockData.CheckNewOpenFunList = CheckNewOpenFunList;
UnlockData.__init = __init
UnlockData.GetLockDataState = GetLockDataState
UnlockData.CheckInitUnlock = CheckInitUnlock
UnlockData.CheckInitGuideStepList = CheckInitGuideStepList
UnlockData.GetGuideUnlockGroup = GetGuideUnlockGroup
UnlockData.RemoveNotOpenGuide = RemoveNotOpenGuide
return UnlockData