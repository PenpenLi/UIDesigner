---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 19/7/19 16:34
---配置画面质量的类

local QualityManager = BaseClass("QualityManager", Singleton)
local QSetting = CS.QualitySetting.GraphicQualityConfigManager.Instance
local zhj_devei_huanmian_state = "zhj_huamian_quality_state"
-- 构造函数
local function __init(self)
    QSetting:RevertConfigData();
    coroutine.start(function()
        self.gpu_info =  ResourcesManager:GetInstance():CoLoadAsync("Config/GPUInfos.asset",typeof(CS.GPUInfos),nil)
    end
    )
end

local function GetHuaMianKeyState()
    return CS.UnityEngine.PlayerPrefs.GetInt(zhj_devei_huanmian_state, 1)
end


local function InitGame(self)
    coroutine.start(function()
        Logger.Log("InitGame begin")
        coroutine.waituntil(function () return self.gpu_info ~= nil end)
        if not CS.UnityEngine.PlayerPrefs.HasKey(zhj_devei_huanmian_state) then
            --第一次启动游戏
            local curdevice = self:GetDeviceQuality()
            QSetting:SetDirty()
            if curdevice < 2 then
                --低端机 默认设置流畅
                self:SetToLowQuality()
            else
                self:SetToHighQuality()
            end
        else
            Logger.Log("InitGame end key is exist")
        end
        coroutine.yieldbreak()
    end)

end

--Shadow
local function SetShadow(self,enabled)
    QSetting.Shadow = enabled;
end

local function ShadowEnabled(self)
    return QSetting.Shadow;
end
--SceneEffect
local function SetSceneEffect(self,enabled)
    QSetting.SceneEffect = enabled;
end

local function SceneEffectEnabled(self)
    return QSetting.SceneEffect;
end
--DirLM
local function SetDirLM(self,enabled)
    QSetting.DirLM = enabled;
end

local function DirLMEnabled(self)
    return QSetting.DirLM;
end
--PostProcessing
local function SetPostProcessing(self,enabled)
    QSetting.PostProcessing = enabled;
end

local function PostProcessingEnabled(self)
    return QSetting.PostProcessing;
end
--Bloom
local function SetBloom(self,enabled)
    QSetting.Bloom = enabled;
end

local function BloomEnabled(self)
    return QSetting.Bloom;
end
--AAType
local function SetAAType(self,type)
    QSetting.AAType = type;
end

local function GetAAType(self)
    return QSetting.AAType;
end
--EnabledOutline
local function SetOutline(self,enabled)
    QSetting.Outline = enabled;
end

local function OutlineEnabled(self)
    return QSetting.Outline;
end
--LOD
local function SetLOD(self,level)
    QSetting.LOD = level;
end

local function GetLOD(self)
    return QSetting.LOD;
end
--AO map
local function SetAO(self,enabled)
    QSetting.AOMap = enabled;
end

local function AOEnabled(self)
    return QSetting.AOMap;
end
--Normal map
local function SetNormalMap(self,enabled)
    QSetting.NormalMap = enabled;
end

local function NormalMapEnabled(self)
    return QSetting.NormalMap;
end
--realtime lighting
local function SetRTLit(self,enabled)
    QSetting.RTLit = enabled;
end

local function RTLitEnabled(self)
    return QSetting.RTLit;
end


local function ApplyConfig(self)
    QSetting:ApplyConfig();
end

local function RevertConfig(self)
    QSetting:RevertConfigData();
end

local function UpdateXFramParam(self)
    if self:GetLOD() > 400 then
        CS.SceneDataUtilities.SettingXFrameParam(1)
    else
        local q = 720 / CS.UnityEngine.Screen.height
        if q > 1 then
            q = 1
        end
        CS.SceneDataUtilities.SettingXFrameParam(q)
        --CS.SceneDataUtilities.SettingXFrameParam(0.6666)
    end
end


local function SetToHighQuality(self)
    Logger.Log("SetToHighQuality")
    CS.UnityEngine.PlayerPrefs.SetInt(zhj_devei_huanmian_state, 1);
    --基础设置
    self:SetPostProcessing(true)
    self:SetLOD(500)
    --self:SetAO(true)
    --self:SetNormalMap(true)
    --self:SetRTLit(true)
    self:SetDirLM(true)
    self:UpdateXFramParam()

    --显性设置
    self:SetShadow(true)
    self:SetOutline(true)

    self:SetBloom(true)
    self:SetSceneEffect(true)
    self:SetAAType(2)


    --应用设置
    self:ApplyConfig();

end


local function SetToLowQuality(self)
    Logger.Log("SetToLowQuality")
    CS.UnityEngine.PlayerPrefs.SetInt(zhj_devei_huanmian_state, 0);
    --基础设置
    self:SetPostProcessing(true)
    self:SetLOD(400)
    --self:SetAO(false)
    --self:SetNormalMap(false)
    --self:SetRTLit(false)
    self:SetDirLM(false)
    self:UpdateXFramParam()
    --显性设置
    self:SetShadow(true)
    self:SetOutline(false)

    self:SetBloom(false)
    self:SetSceneEffect(false)
    self:SetAAType(0)

    --应用设置
    self:ApplyConfig();
end

local function CalcIOSQuality(gpuQ)
    local dQ = -1;
    if gpuQ < 0 or gpuQ > 3 then
        dQ = 3;
    else
        dQ = gpuQ
    end
    return dQ
end

local function CalcAndroidQuality(gpuQ,cpuCount,cpuFreq,memSize)
    local cpuQ = -1;
    if memSize < 2400 then
        cpuQ = 0
    else
        if memSize < 3400 then
            if cpuFreq <= 1500 then
                cpuQ = 0
            else
                cpuQ = 1
            end
        else
            if cpuFreq <= 1500 then
                cpuQ = 1
            else
                cpuQ = 2
            end
        end
    end

    local dQ = -1
    if cpuQ < 1 then
        dQ = cpuQ
    else
        if gpuQ >= 1 then
            dQ = 2
        else
            dQ = 1;
        end
    end

    return dQ

end

---
---0 is Low
---1 is Middle
---2 is High
local function GetDeviceQuality(self)
    local isIOS = self.gpu_info:IsIOS()
    local isSpDevice = self.gpu_info:IsSpDeivces()

    local gpuQ = self.gpu_info:GetValue()
    local cpuCors = QSetting:GetCPUCount()
    --in MHz = 0.001GHz
    local cpuFreq = QSetting:GetCPUFrequency()
    local memSize = QSetting:GetMemorySize()

    if isSpDevice then
        return self.gpu_info:GetSpDeviceValue()
    end

    local dQ = 0;

    if isIOS then
        dQ = CalcIOSQuality(gpuQ)
    else
        local q = 720 / CS.UnityEngine.Screen.height
        if q > 1 then
            q = 1
        end
        CS.SceneDataUtilities.SettingXFrameParam(q)
        --dQ = CalcAndroidQuality(gpuQ,cpuCors,cpuFreq,memSize)
    end

    return dQ;
end


QualityManager.__init = __init
QualityManager.SetShadow                = SetShadow
QualityManager.ShadowEnabled            = ShadowEnabled
QualityManager.SetSceneEffect           = SetSceneEffect
QualityManager.SceneEffectEnabled       = SceneEffectEnabled
QualityManager.SetDirLM                 = SetDirLM
QualityManager.DirLMEnabled             = DirLMEnabled
QualityManager.SetPostProcessing        = SetPostProcessing
QualityManager.PostProcessingEnabled    = PostProcessingEnabled
QualityManager.SetBloom                 = SetBloom
QualityManager.BloomEnabled             =BloomEnabled
QualityManager.SetAAType                  = SetAAType
QualityManager.GetAAType              = GetAAType
QualityManager.SetOutline               = SetOutline
QualityManager.OutlineEnabled           = OutlineEnabled
QualityManager.SetLOD                   = SetLOD
QualityManager.GetLOD                   = GetLOD
QualityManager.SetAO                    = SetAO
QualityManager.AOEnabled                = AOEnabled
QualityManager.SetNormalMap             = SetNormalMap
QualityManager.NormalMapEnabled         = NormalMapEnabled
QualityManager.SetRTLit                 = SetRTLit
QualityManager.RTLitEnabled             = RTLitEnabled
QualityManager.ApplyConfig              = ApplyConfig
QualityManager.RevertConfig             = RevertConfig
QualityManager.SetToHighQuality         =SetToHighQuality
QualityManager.SetToLowQuality          =SetToLowQuality
QualityManager.GetDeviceQuality         =GetDeviceQuality
QualityManager.GetHuaMianKeyState       =GetHuaMianKeyState
QualityManager.InitGame                 =InitGame
QualityManager.UpdateXFramParam         =UpdateXFramParam
return QualityManager;