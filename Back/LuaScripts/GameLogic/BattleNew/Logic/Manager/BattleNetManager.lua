---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guoyu.
--- DateTime: 2018/11/7 15:55
---
local BattleNetManager=BaseClass("BattleNetManager")
local MsgIDDefine = require "Net.Config.MsgIDDefine"
local MsgIDMap = require "Net.Config.MsgIDMap"

local function __init(self)

    --事件
    self.battleMessage=nil
end


function BattleNetManager:SendPveBattleStartRequest(roles,func)
    Logger.Log("发送战斗开始请求")

    local msd_id = MsgIDDefine.PBFIGHT_PVE_START_REQUEST
    local msg = (MsgIDMap[msd_id])()
    for k,v in ipairs(roles) do
        local team=msg.team:add()
        team.host.cardId=v.host.cardId
        team.host.level = v.host.level
        team.host.star = v.host.star
        team.guardian.cardId=v.guardian.cardId
        team.guardian.level = v.guardian.level
        team.guardian.star = v.guardian.star
        team.position=v.position
    end
    NetManager:GetInstance():SendMessage(msd_id, msg,function(msg_obj)
        Logger.Log("收到战斗开始回复msg_obj.OpCode"..msg_obj.OpCode)
        if msg_obj.OpCode==0 then
            --修改地方數據  臨時
            local BattleFieldManager=require "GameLogic.BattleNew.Logic.Manager.BattleFieldManager"
            BattleFieldManager:GetInstance().battleEnemyTeam = msg_obj.Packages.enemyTeam
            if func ~= nil then
                func(msg_obj.Packages)
            end
        else
            UIManager:GetInstance():OpenOneButtonTip("提示",msg_obj.Packages.msg,"确定",function()
                UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_QUIT)
            end)
        end
    end)
    --NetManager:GetInstance():AddListener(MsgIDDefine.PBFIGHT_PVE_START_RESPONSE,self.PveBattleStartResponse,self)
end

function BattleNetManager:SendConvertCrytalsRequest(teamId,func)
    Logger.Log("发送回复水晶请求")
    local msd_id = MsgIDDefine.PBFIGHT_CONVERT_CRYTALS_REQUEST
    local msg = (MsgIDMap[msd_id])()
    msg.teamId=teamId
    NetManager:GetInstance():SendMessage(msd_id, msg,function(msg_obj)
        Logger.Log("收到回复水晶请求msg_obj"..msg_obj.OpCode)
        if msg_obj.OpCode==0 then
            if func ~= nil then
                func(msg_obj.Packages)
            end
        else
            UIManager:GetInstance():OpenOneButtonTip("提示",msg_obj.Packages.msg,"确定",function()
                UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_QUIT)
            end)
        end
    end)

end

function BattleNetManager:SendPveActionRequest(teamId,select_skills,auto,func)

    Logger.Log("发送战斗回合数据")
    local msd_id = MsgIDDefine.PBFIGHT_PVE_ACTION_REQUEST
    local msg = (MsgIDMap[msd_id])()
    msg.teamId=teamId
    if auto == 1 then
        msg.isAuto = true
    else
        msg.isAuto = false
        if select_skills ~= nil then
            for k,v in ipairs(select_skills) do
                local choos_skill=msg.skills:add()
                choos_skill.entityId=v[1]
                choos_skill.skillId=v[2]
                choos_skill.isCall=v[3]
            end
        end
    end
    GuideManager:GetInstance():SetGuideServerStep(msg)
    NetManager:GetInstance():SendMessage(msd_id, msg,function(msg_obj)
        Logger.Log("收到战斗回合数据OpCode"..msg_obj.OpCode)
        if msg_obj.OpCode==0 then
            if func ~= nil then
                func(msg_obj.Packages)
            end
        else
            UIManager:GetInstance():OpenOneButtonTip("提示",msg_obj.Packages.msg,"确定",function()
                UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_QUIT)
            end)
        end
    end)
end

BattleNetManager.__init=__init
return BattleNetManager