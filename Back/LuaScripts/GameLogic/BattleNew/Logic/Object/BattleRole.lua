---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guoyu.
--- DateTime: 2018/12/12 13:40
---
local BattleSkill = require"GameLogic.BattleNew.Logic.Object.BattleSkill"
local BattleCallSkill = require"GameLogic.BattleNew.Logic.Object.BattleCallSkill"
local BattleSkillEffect = require"GameLogic.BattleNew.Logic.Object.BattleSkillEffect"
local BattleRole=BaseClass("BattleRole")


local function __init(self)
    --阵营id
    self.teamId=0
    --角色ID
    self.entityId=0
    --最大血量
    self.maxHp=0
    --当前血量
    self.hp=0
    --当前血量百分比
    self.currentHp=0
    --敌方还是我方
    self.playerType=0
    --所在组ID111
    self.position=0
    --行动状态
    self.state=0
    --等级
    self.level=0
    --所有技能
    self.skills={}
    --所有技能效果
    self.effects={}
    --召唤技能
    self.callSkill=nil
    --所在group
    self.group=nil

    self.weaponId = 0
end

local function OnInit(self,serverRole,group)
    self.teamId=serverRole.teamId
    self.entityId=serverRole.entityId
    self.maxHp=serverRole.maxHp
    self.hp=serverRole.hp
    self.currentHp=self.hp/self.maxHp
    self.position=serverRole.position
    self.state=serverRole.state
    self.level=serverRole.level
    self.weaponId = serverRole.weapon
    self.timer=0
    self.group=group
    self.playerType=self.group.player.playerType
    --角色技能
    for k,v in ipairs(serverRole.skills) do
        local skill=BattleSkill.New()
        skill:OnInit(self,v)
        table.insert(self.skills,skill)
    end
    --角色技能效果
    for k,v in ipairs( serverRole.effects) do
        local effect=BattleSkillEffect.New()
        effect:OnInit(self,v,true)
        table.insert(self.effects,effect)
    end
    if serverRole.callSkill~=nil and serverRole.callSkill.guardianId~=0 then
        self.callSkill=BattleCallSkill.New()
        self.callSkill:OnInit(self,serverRole.callSkill)
    end
end

local function GetCryCost(self)
    if self.callSkill ~= nil then
        return self.callSkill.crytalType,self.callSkill.crytalCount,self.group.player:GetCrytalByType(self.callSkill.crytalType),self.callSkill.initCrytalCount
    else
        for k,v in ipairs(self.skills) do
            if v.crytalType > 0 and v.crytalCount > 0 then
                return v.crytalType,v.crytalCount,self.group.player:GetCrytalByType(v.crytalType),v.initCrytalCount
            end
        end
    end
    return 0,0,0,0
end

--获取护盾值
local function GetShieldVal(self)
    local val = 0
    local maxVal = 0
    for k,v in ipairs(self.effects) do
        if v.value > 0 then
            val = val + v.value
            maxVal = maxVal + v.maxValue
        end
    end
    return val,maxVal
end


--战斗中技能中变换量同步
local function SyncByServerChange(self,serverRole)
    local v1,v2 = GetShieldVal(self)
    local blood_show = {oldHp = self.hp,oldShield = v1,maxShield = v2,newHp = self.hp,finalHp = self.hp,newShield = v1,blood_show = false,shieldHurt = 0}

    if self.hp~=serverRole.hp then
        self.hp=serverRole.hp
        self.currentHp=self.hp/self.maxHp
    end
    self.state=serverRole.state
    if serverRole.skills~=nil  then
        for k,v in ipairs(serverRole.skills) do
            local skill=self:GetSkillById(v.skillId)
            skill:SyncByServer(v)
        end
    end
    local show_result = {}
    if serverRole.effects~=nil  then
        for k,v in ipairs(serverRole.effects) do
            local result =  BattleSkillEffect.ReleaseHandler(v)
            if result == nil then
                local effect=self:GetSkillEffectById(v.effectId)
                if not v.isRemove then
                    if effect==nil then
                        local effect=BattleSkillEffect.New()
                        effect:OnInit(self,v)
                        table.insert(self.effects,effect)
                    else
                        effect:SyncByServer(v)
                    end
                    result = {effectId = v.effectId,layer = v.layer,lastTime = v.lastTime,del = false,type = v.typeId, hurtType = v.hurtType}
                else
                    if effect ~= nil then
                        table.removebyvalue(self.effects,effect)
                    end
                    result = {effectId = v.effectId,del = true,layer = 0,type = v.typeId, hurtType = v.hurtType}
                end
            else
                result.del = false
                if not blood_show.blood_show and result.show then
                    blood_show.blood_show = true
                end
                if v.isRemove then
                     local effect=self:GetSkillEffectById(v.effectId)
                    if effect ~= nil then
                        table.removebyvalue(self.effects,effect)
                    end
                end
                --增加水晶
                if result.type == 3 then
                    self.group.player:OpreateCrytals(result.crytalType,result.crytalCount)
                end
                if result.type == 5 then
                    Logger.Log("--------------->开始驱散。。。。")
                end
            end
            table.insert(show_result,result)
        end
    end

    if not serverRole.callSkill._is_null and serverRole.callSkill.guardianId~=0 then
        self.callSkill:SyncByServer(serverRole.callSkill)
    end
    v1,v2 = GetShieldVal(self)
    if v2 > 0 then
        blood_show.maxShield = v2
    end

    if not blood_show.blood_show and blood_show.oldShield ~= v1 then
        blood_show.blood_show = true
    end

    if blood_show.maxShield > 0 then
        if v1 < blood_show.oldShield then
            blood_show.shieldHurt = v1 - blood_show.oldShield
        else
            blood_show.oldShield = v1
            blood_show.newShield = v1
        end
    end

    blood_show.finalHp = self.hp
    return blood_show,show_result
end


--是否是寄灵人
local function CheckIsMainRole(self)
    if self.group.mainRole == self then
        return true
    end
    return false
end

local function IsHost(self)
    return not self.callSkill==nil
end

--获取人物技能
local function GetSkillById(self,skillId)

    local skill=nil

    for k,v in pairs(self.skills) do

        if v.skillId==skillId then
            skill=v
            break
        end
    end
    return skill
end


local function GetSkillEffectById(self,effectId)
    local effect=nil
    for k,v in pairs(self.effects) do
        if v.effectId==effectId then
            effect=v
            break
        end
    end
    return effect
end

local function OnDestroy(self)
    self.skills={}
    self.effects={}
    --发送显示层销毁消息
    --self.group.player.OneBattle.battleMessage:Broadcast(BattleEnum.BattleMessage.DELETE_ROLE_VIEW,self)
    --self.group:roleFinishDestroyLogic(self)
end
BattleRole.__init=__init
BattleRole.OnInit=OnInit
BattleRole.OnDestroy=OnDestroy
BattleRole.IsHost=IsHost
BattleRole.GetSkillById=GetSkillById
BattleRole.GetSkillEffectById=GetSkillEffectById
BattleRole.SyncByServerChange=SyncByServerChange
BattleRole.CheckIsMainRole = CheckIsMainRole
BattleRole.GetShieldVal = GetShieldVal
BattleRole.GetCryCost = GetCryCost
return BattleRole