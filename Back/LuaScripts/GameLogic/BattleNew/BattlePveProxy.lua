---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guoyu.
--- DateTime: 2018/12/12 17:29
---
require "GameLogic.BattleNew.BattleEnum"

local OneBattle=require "GameLogic.BattleNew.Logic.OneBattle"
local BattleNetManager=require "GameLogic.BattleNew.Logic.Manager.BattleNetManager"
local Messenger = require "Framework.Common.Messenger"
local BattleUIManager = require "GameLogic.BattleNew.Logic.Manager.BattleUIManager"
local BattleViewContext=require"GameLogic.BattleNew.View.BattleViewContext"
local BattleFieldManager=require "GameLogic.BattleNew.Logic.Manager.BattleFieldManager"
--Pvp战斗总控
local BattlePveProxy=BaseClass("BattlePveProxy",Updatable)
local function __init(self)
    --战斗UI
    self.battleUIManager=nil
    --事件通信
    self.battleMessage=nil
    --网络模块
    self.netManager=nil
    --战斗逻辑层
    self.oneBattle=nil
    --表现层
    self.battleViewContext=nil

    --状态
    self.currentState=nil
    --本场战斗数据
    self.battlePackages=nil
    --敌方阵容
    self.enemyRoles={}
    --剧情触发器
    self.storyTrigger=nil
    --当前场景颜色值
    self.scene_mask_col= nil
end

local function OnInit(self,battlePackages,scene_mask_col,cam_time,battleCache)
    self.battlePackages=battlePackages
    self.scene_mask_col = scene_mask_col
    self.cam_time = cam_time
    self.battleCache = battleCache
    self.battleMessage=Messenger.New()
    self.battleUIManager = BattleUIManager.New()
    self.battleUIManager:OnInit(self.battleMessage)
    self.netManager=BattleNetManager.New()
end

local function OnStartGame(self,story_id)
    self.oneBattle=OneBattle.New()
    self.battleViewContext=BattleViewContext.New()
    self.battleViewContext:OnInit(self.battleMessage,self.oneBattle,self.scene_mask_col,self.ctrl_cam_trans,self.battleCache)
    --初始化剧情触发器
    local triggerType = StoryConstConfig.StoryTrigger.Battle
    self.storyTrigger = triggerType.Type.New()
    local triggerInitRes = self.storyTrigger:CreateTriggers(self.battleViewContext,story_id)
    if not triggerInitRes then
        Logger.Log("StoryConstConfig.StoryTrigger.Battle create faild")
        self.storyTrigger = nil
    end
    self.oneBattle:OnInit(self.battleMessage,BattleFieldManager:GetInstance().pve_myTeam,BattleFieldManager:GetInstance().pve_myGuard,
            self.battlePackages,self.netManager,self.storyTrigger,BattleFieldManager:GetInstance().battleEnemyTeam)
    self.battleUIManager:SetBattlePlayerManager(self.oneBattle.battlePlayerManager,self.battleViewContext.battleRoleViewManager)
end


local function Update(self)
    if self.battleViewContext ~= nil then
        self.battleViewContext:Update()
    end
end

local function OnDestroy(self)
    if self.oneBattle ~= nil then
        self.oneBattle:OnDestroy()
    end
    if self.battleMessage ~= nil then
        self.battleMessage:Cleanup()
    end
    if self.battleUIManager ~= nil then
        self.battleUIManager:OnDestroy()
    end
    if self.battleViewContext ~= nil then
        self.battleViewContext:OnDestroy()
    end
end



local function SetControlCamera(self,ctrl_trans,story_id)
    self.ctrl_cam_trans = ctrl_trans
    OnStartGame(self,story_id)
end



BattlePveProxy.__init=__init
BattlePveProxy.OnInit=OnInit
BattlePveProxy.Update=Update
BattlePveProxy.OnDestroy=OnDestroy
BattlePveProxy.OnStartGame=OnStartGame
BattlePveProxy.SetControlCamera = SetControlCamera

return BattlePveProxy