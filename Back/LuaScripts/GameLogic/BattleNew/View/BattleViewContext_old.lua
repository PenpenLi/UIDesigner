---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guoyu.
--- DateTime: 2018/12/21 10:04
---


local BattleRoleViewManager=require "GameLogic.BattleNew.View.Manager.BattleRoleViewManager"
local BattlePositionManager=require "GameLogic.BattleNew.View.Manager.BattlePositionManager"
local BattleCameraManager=require"GameLogic.BattleNew.View.Manager.BattleCameraManager"
local BattleViewContext=BaseClass("BattleViewContext")



local function __init(self)
    --角色管理
    self.battleRoleViewManager=nil
    --战场站位管理
    self.battlePositionManager=nil
    --相机管理
    self.battleCameraManager=nil
    --事件通信
    self.battleMessage=nil
    --击杀相机
    self.KillCamGo=nil
end

BattleViewContext.KillCamPath= {
    "Art/Roles/common/KillCam_0.prefab"
    ,"Art/Roles/common/KillCam_1.prefab"
    ,"Art/Roles/common/KillCam_2.prefab"
}

BattleViewContext.KillCam = {}

local function GetKillCamGo(self,index)

    if IsNull( BattleViewContext.KillCam[index] ) then
        BattleViewContext.KillCam[index] = GameObjectPool:GetInstance():CoGetGameObjectAsync(BattleViewContext.KillCamPath[index])
        if not IsNull(self.KillCamGo) then
            self.KillCamGo:SetActive(false)
        end
    end
    return  BattleViewContext.KillCam[index]
end

local function TriggerKillCam(self,roleView)
    local index = roleView.position +1
    local camGo = BattleViewContext.KillCam[index]
    if not IsNull(camGo) then
        camGo:SetActive(true);
        CS.LJ_TimelineExtension.PlayableDirectorBindingHelper.BindingCameraBrain(
                camGo
        ,self.battleCameraManager.camera.gameObject
        )
        local pD =  camGo:GetComponentInChildren(typeof(CS.UnityEngine.Playables.PlayableDirector))
        if not IsNull(pD) then
            pD:Play()
        end
    end
end

local function SetKillCam(self,target)
    local killCamGo = GetKillCamGo(self,target.entity.position + 1)
    if not IsNull(killCamGo) then
        killCamGo.transform:SetParent(target.transform,false)
        killCamGo.transform.localPosition = Vector3.zero
        killCamGo.transform.localEulerAngles = Vector3.zero
    end
end


local function PveActionCloserRole(self,func)
    self.battleCameraManager:PveActionCloserRole(func)
end

local function PveRoundSwitch(self,type)
    if type == 1 then
        self.battleCameraManager:CoverInit()
    end
    self.battleRoleViewManager:OnRolesReset(type)
end



local function AddEventListener(self)
    self.battleMessage:AddListener(BattleEnum.BattleMessage.NOTIFYClOSERBEGIN, PveActionCloserRole, self)
    self.battleMessage:AddListener(BattleEnum.BattleMessage.NOTIFYROUNDDATATOUI, PveRoundSwitch, self)
   -- self.battleMessage:AddListener(BattleEnum.BattleMessage.NOTIFYCAMERAMASK, CameraMaskAction, self)
end

local function RemoveEventListener(self)
    self.battleMessage:RemoveListener(BattleEnum.BattleMessage.NOTIFYClOSERBEGIN, PveActionCloserRole)
    self.battleMessage:RemoveListener(BattleEnum.BattleMessage.NOTIFYROUNDDATATOUI, PveRoundSwitch)
   -- self.battleMessage:RemoveListener(BattleEnum.BattleMessage.NOTIFYCAMERAMASK, CameraMaskAction)
end

local function OnInit(self,battleMessage,scene_mask_col,cam_trans,battleCache)
    self.battleMessage=battleMessage
    self.battleRoleViewManager=BattleRoleViewManager.New()
    self.battleRoleViewManager:OnInit(self)
    self.battlePositionManager=BattlePositionManager.New()
    self.battlePositionManager:OnInit(self)
    self.battleCameraManager=BattleCameraManager.New()
    self.battleCameraManager:OnInit(self,scene_mask_col,cam_trans)
    self.battleCache = battleCache
    AddEventListener(self)
end


local function GetCacheGame(self,prefab)
    if self.battleCache ~= nil then
        local list = self.battleCache[prefab]
        if list ~= nil and #list > 0 then
            return table.remove(list)
        end
    end
    return nil
end


local function Update(self)
    self.battleRoleViewManager:Update()
end


local function OnDestroy(self)
    self.battleRoleViewManager:OnDestroy()
    self.battlePositionManager:OnDestroy()
    RemoveEventListener(self)
end



BattleViewContext.__init=__init
BattleViewContext.OnInit=OnInit
BattleViewContext.Update=Update
BattleViewContext.OnDestroy=OnDestroy
BattleViewContext.SetKillCam=SetKillCam
BattleViewContext.TriggerKillCam=TriggerKillCam
BattleViewContext.GetCacheGame = GetCacheGame
return BattleViewContext