---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guoyu.
--- DateTime: 2018/12/21 10:42
---
local BattleRoleViewFactory=require"GameLogic.BattleNew.View.BattleRoleViewFactory"
local BattleRoleView=require("GameLogic.BattleNew.View.Object.BattleRoleView")
local BattleRoleViewManager=BaseClass("BattleRoleViewManager")

local function __init(self)
    --所属View层
    self.viewContext=nil
    --角色列表
    self.roles=nil
    --记录最终使用技能的角色用于结算
    self.lastMineUseSkillRole=-1
end


local function OnCreateView(self,entity,show)
    --Logger.Log("创建显示层角色"..entity.entityId)
    local role=BattleRoleViewFactory.CreateBattleRoleView(self.viewContext,entity,show)
    table.insert(self.roles,role)
end


--胜利消耗其他角色
local function WinDestroyRole(self)
    local is_win = false
    for i = #self.roles, 1,-1 do
        if self.viewContext.settlement.killEntityId == self.roles[i].entity.entityId and self.roles[i].entity.hp > 0 then
            if not is_win then
                is_win = true
                self.roles[i]:PlayWin()
            end
        else
            self.roles[i]:OnDestroy()
        end
    end
    if not is_win then
        self.viewContext.battleMessage:Broadcast(BattleEnum.BattleMessage.NOTIFYUIRESULT,self.viewContext.settlement)
    end
end

--local function OnRolesReset(self)
--    --所有角色父节点归为0 0 0,切换待机动作
--    for k,v in pairs(self.roles) do
--        v.transform.localPosition = Vector3.zero
--        v.transform.parent.localPosition=Vector3.zero
--        if v.entity.hp>0 then
--            v:Play(BattleRoleView.AnimName_Name_Idle)
--        end
--    end
--end

local function MoveNoBattleRole(self,list)
    for k,v in pairs(self.roles) do
        if list[v.entity.entityId] == nil or list[v.entity.entityId] ~= v.entity.teamId then
            v.transform.parent.localPosition = Vector3.New(-1000,-1000,-1000)
        end
    end
end

local function ResetMoveBattleRole(self,list)
    for k,v in pairs(self.roles) do
        if list[v.entity.entityId] == nil or list[v.entity.entityId] ~= v.entity.teamId then
            v.transform.parent.localPosition = Vector3.zero
            v.transform.localPosition = Vector3.zero
            v.transform.localEulerAngles = Vector3.zero
        end
    end
end

local function ResetBattleRole(self,list)
    for k,v in pairs(self.roles) do
        v:SkillPlayOverReset()
    end
end







local function OnInit(self,context)
    self.viewContext=context
    self.roles={}
end


local function Update(self)
    for k,v in pairs(self.roles) do
        v:Update()
    end
end

local function GetRoleViewById(self,teamId,entityId)
    local role=nil
    for k,v in pairs(self.roles) do
        if v.entity.teamId==teamId and v.entity.entityId==entityId then
            role=v
            break
        end
    end
    return role
end
--检测角色死亡
local function CheckRoleDead(self)
    for k,v in pairs(self.roles) do
        v:CheckDead()
    end
end

local function OnDestroy(self)
    for i = #self.roles, 1,-1 do
        self.roles[i]:OnDestroy()
    end
end



BattleRoleViewManager.__init=__init
BattleRoleViewManager.OnInit=OnInit
BattleRoleViewManager.CheckRoleDead = CheckRoleDead
BattleRoleViewManager.OnDestroy = OnDestroy
BattleRoleViewManager.Update = Update
BattleRoleViewManager.GetRoleViewById = GetRoleViewById
--BattleRoleViewManager.OnRolesReset = OnRolesReset
BattleRoleViewManager.MoveNoBattleRole = MoveNoBattleRole
BattleRoleViewManager.ResetMoveBattleRole = ResetMoveBattleRole
BattleRoleViewManager.ResetBattleRole = ResetBattleRole
BattleRoleViewManager.WinDestroyRole = WinDestroyRole
BattleRoleViewManager.OnCreateView = OnCreateView
return BattleRoleViewManager