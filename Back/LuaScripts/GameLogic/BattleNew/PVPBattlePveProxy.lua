---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by guoyu.
--- DateTime: 2018/12/12 17:29
---
require "GameLogic.BattleNew.BattleEnum"

local OneBattle=require "GameLogic.BattleNew.Logic.PVPOneBattle"
local BattleNetManager=require "GameLogic.BattleNew.Logic.Manager.PVPBattleNetManager"
local Messenger = require "Framework.Common.Messenger"
local BattleUIManager = require "GameLogic.BattleNew.Logic.Manager.BattleUIManager"
local BattleViewContext=require"GameLogic.BattleNew.View.BattleViewContext"
--Pvp战斗总控
local PVPBattlePveProxy=BaseClass("PVPBattlePveProxy",Updatable)
local function __init(self)
    --战斗UI
    self.battleUIManager=nil
    --事件通信
    self.battleMessage=nil
    --网络模块
    self.netManager=nil
    --战斗逻辑层
    self.oneBattle=nil
    --表现层
    self.battleViewContext=nil

    --状态
    self.currentState=nil
    --上阵阵容（布阵阶段可以更换）
    self.roles={}
    --敌方阵容
    self.enemyRoles={}
    --最终我方阵容
    self.myTeam={}
    self.myGuard={}
    --剧情触发器
    self.storyTrigger=nil
    --当前场景颜色值
    self.scene_mask_col= nil
    --本场战斗数据
    self.battlePackages = nil
end





local function OnInit(self,scene_mask_col,cam_time,packages,game_cache)
    self.scene_mask_col = scene_mask_col
    self.cam_time = cam_time
    self.battleMessage=Messenger.New()
    self.battleUIManager = BattleUIManager.New()
    self.battleUIManager:OnInit(self.battleMessage)
    self.netManager=BattleNetManager.New()
    self.battlePackages = packages
    self.netManager:SendPvPBattleLoadingRequest()
    self.battleCache = game_cache
end

local function ReEnter(self,scene_mask_col,cam_time)
    self.scene_mask_col = scene_mask_col
    self.cam_time = cam_time

    self.battleMessage=Messenger.New()
    self.battleUIManager = BattleUIManager.New()
    self.battleUIManager:OnInit(self.battleMessage)
    self.netManager=BattleNetManager.New()
    self.netManager:SendPvPResetBattleRequest(function(Packages)
        self.battlePackages = Packages.group
        self:ChangeState(BattleEnum.LogicState.BATTLE)
        self.oneBattle:ReEnterBattle(Packages.roundCount,Packages.crytal,Packages.defCrytal,
                Packages.entityId,Packages.defEntityId,Packages.downcount,Packages.state,Packages.isEnd)
    end)
end

local function ChangeState(self,state)
    self.currentState=state
    if self.currentState==BattleEnum.LogicState.BATTLE then
        --Logger.Log("进入战斗状态")
        self.oneBattle=OneBattle.New()
        self.battleViewContext=BattleViewContext.New()
        self.battleViewContext:OnInit(self.battleMessage,self.oneBattle,self.scene_mask_col,self.ctrl_cam_trans,self.battleCache)
        --初始化剧情触发器
        local triggerType = StoryConstConfig.StoryTrigger.Battle
        self.storyTrigger = triggerType.Type.New()
        local triggerInitRes = self.storyTrigger:CreateTriggers(self.battleViewContext)
        if not triggerInitRes then
            Logger.Log("StoryConstConfig.StoryTrigger.Battle create faild")
            self.storyTrigger = nil
        end
        self.oneBattle:OnInit(self.battleMessage,self.battlePackages,self.netManager,self.storyTrigger)
        self.battleUIManager:SetBattlePlayerManager(self.oneBattle.battlePlayerManager,self.battleViewContext.battleRoleViewManager)
    end

end


local function Update(self)
    --Logger.Log("PVPBattlePveProxy Update currentState:"..self.currentState)
    if self.currentState==BattleEnum.LogicState.BATTLE then
        self.battleViewContext:Update()
    end
end

local function OnDestroy(self)
    if self.oneBattle ~= nil then
        self.oneBattle:OnDestroy()
    end
    if self.battleMessage ~= nil then
        self.battleMessage:Cleanup()
    end
    if self.battleUIManager ~= nil then
        self.battleUIManager:OnDestroy()
    end
    if self.battleViewContext ~= nil then
        self.battleViewContext:OnDestroy()
    end
end



local function SetControlCamera(self,ctrl_trans)
    self.ctrl_cam_trans = ctrl_trans
end



PVPBattlePveProxy.__init=__init
PVPBattlePveProxy.OnInit=OnInit
PVPBattlePveProxy.Update=Update
PVPBattlePveProxy.OnDestroy=OnDestroy
PVPBattlePveProxy.ChangeState=ChangeState
PVPBattlePveProxy.SetControlCamera = SetControlCamera
PVPBattlePveProxy.ReEnter = ReEnter
return PVPBattlePveProxy