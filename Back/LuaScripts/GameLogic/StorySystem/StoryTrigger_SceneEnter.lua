---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhangshoufeng.
--- DateTime: 19/2/23 16:01
---

local StoryTrigger_SceneEnter = BaseClass("StoryTrigger_SceneEnter", BaseStoryTrigger)

--通过sendmassage返回res
local function CoInfoLoader_NormalScene(self, keyword, levelId, maxlevelId)
    --load curType
    local dataInst = StoryData:GetInstance()
    local dataType = StoryConstConfig.StoryTypeId.NormalScene
    local saveData = dataInst:CoRequireStoryInfo(dataType)
    local ret = {}
    if saveData ~= nil then
        local localInfoData = dataInst:GetInfoByIndex(dataType, saveData.index)

        if localInfoData ~= nil
            and localInfoData.Keyword == keyword
            and localInfoData.LevelId > 0
            and localInfoData.LevelId <=  maxlevelId then
        table.insert(ret , localInfoData)
    end
end
    return ret
end

local function CoInfoLoader_BattleScene(self, keyword, levelId, maxlevelId)
    -- CoInfoLoader_BattleScene:BattleScene|||10104|||10105.0
    Logger.Log("CoInfoLoader_BattleScene:" .. keyword .. "|||" .. levelId .. "|||" .. maxlevelId)

    local ret = nil
    local dataType = StoryConstConfig.StoryTypeId.BattleScene
    --当前关卡<上次保存的最大关卡，并且可重复播放为true   or 当前关卡>上次保存的最大
    if (levelId <= maxlevelId and StoryManager:GetInstance().repeatStory) or levelId > maxlevelId then
        --根据剧情ID获取剧情信息，此处决定是否存在剧情信息
        ret = StoryData:GetInstance():GetInfosByLevelId(dataType, levelId)
    end

    if #ret > 1 then
        table.sort(ret,function(a,b) return a.Index<b.Index  end);
    end
    return ret  --HomeScene在这return false
end
-------------------------------addByWbb-----------------------------
local function CoInfoLoader(self, _id)
    local ret = {}
    if (_id) then
        for i, value in pairs(_id) do
                local  res = StoryData:GetInstance():GetInfoById(value)
                table.insert(ret,res)
        end

    end

    return ret  --HomeScene在这return false
end

local LoaderSwitch = {
    ["HomeScene"] = CoInfoLoader_NormalScene,
    ["BattleScene"] = CoInfoLoader_BattleScene,
    ["StoryScene"] = CoInfoLoader_BattleScene,
}

local function CoTrigger(self, ...)
    local args = SafePack(...)
    local _id
    if args.n > 0 then
        _id = args[1]
    else
        Logger.LogError("StoryTrigger_SceneEnter:Trigger 参数错误!!!");
    end

    local ret = false
    if _id ~= nil then
        --选择用哪种方式进行处理剧情
        local storyLoader = CoInfoLoader;
        if storyLoader ~= nil then
            --返回剧情信息
            self.curInfo = storyLoader(self, _id)
            if (self.curInfo ~= nil) and (#self.curInfo > 0) then
                self.nodes = {}
                --循环预加载所有的剧情的剧情节点，放入self.nodes
                for i = 1, #self.curInfo do
                    if self.curInfo[i].Shade and (self.curInfo[i].Shade==1 or self.curInfo[i].Shade==2) then
                        CS.CamMaskUtilities.SetMaskColor(1.0,100);
                    end
                    self:CoSceneRes(self.curInfo[i].SceneName)
                    -- function CoPreloadStory(self, info, rolePosInfo, active)   return res，storyNode
                    local loadRes ,storyNode = StoryManager:GetInstance():CoPreloadStory(self.curInfo[i],nil,i==1)
                    if loadRes then
                        table.insert( self.nodes,storyNode)
                        ret = true
                    end
                end
            end
        end
    end
    return ret
end
local function CoSceneRes(self,name)

    local  scene_name = tostring(name)
    if not string.isNilOrEmpty(scene_name) then
        scene_name = SceneLoadManager.GenSceneAssetFullPath(scene_name)
        self.scene_asset = {}

        local function ProgressCallback(co, progress)
            --assert(progress <= 1.0, "What's the fuck!!!")
            return coroutine.yieldcallback(co,  progress )
        end

         table.insert(self.scene_asset, scene_name)
        SceneLoadManager:GetInstance():CoGenerateScene(scene_name,ProgressCallback,true)

    end

    return coroutine.yieldbreak()
end

local function CoPlayStory(self, ...)
    if (self.nodes ~= nil) and (#self.nodes > 0) then
        local curNode = nil
        for i, v in ipairs(self.nodes) do
            if v ~= nil then
                curNode = v
                if self.curInfo[i].Shade and (self.curInfo[i].Shade==1 or self.curInfo[i].Shade==2) then
                    CS.CamMaskUtilities.SetMaskColor(1,0)
                end
                StoryManager:GetInstance():CoPlayStoryNode(v,self.curInfo[i])
            end
        end
        StoryManager:GetInstance():ClearEntities()
    end
end

-- 离开场景
function StoryTrigger_SceneEnter:OnLeave()
    if self.scene_asset ~= nil and (#self.scene_asset > 0) then
        for i, v in ipairs(self.scene_asset) do
            --if v ~= nil then
            if string.isNilOrEmpty(v) then
                --CS.SceneDataUtilities.CleanSceneNode(v)
                SceneLoadManager:GetInstance():CleanSceneNode(v)
            end
        end
    end
    self.scene_asset = nil
    base.OnLeave(self)
end
StoryTrigger_SceneEnter.CoTrigger = CoTrigger
StoryTrigger_SceneEnter.CoPlayStory = CoPlayStory
StoryTrigger_SceneEnter.CoSceneRes = CoSceneRes
StoryTrigger_SceneEnter.CoInfoLoader = CoInfoLoader
return StoryTrigger_SceneEnter