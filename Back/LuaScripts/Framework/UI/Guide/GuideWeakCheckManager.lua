---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/4/12 14:4
--- 尝试检测是否可以触发引导  GuideCheckBase  (各种类型引导检测 1 强制  2  软  3  闲置)
local GuideWeakCheckManager = BaseClass("GuideWeakCheckManager", Singleton)
local GuideData=DataUtil.GetData("guide_weak_condition")
local GuideWeakData=DataUtil.GetData("guide_weak")
local BattleFieldManager=require "GameLogic.BattleNew.Logic.Manager.BattleFieldManager"
-- 构造函数
local function __init(self)
    self.canWeakGuide=false
    self.easyfunc={}
    self.DicGuideWeakData={}
    self:ParseGuideData()
    self.easyfunc[1] = Bind(self,self.UIWindowOpen)
    self.easyfunc[2]= Bind(self,self.UICameraMove)
    self.easyfunc[3]= Bind(self,self.EventOpen)
    self:WeakAddUIListener()
    self:WeakAddCameraMoveListener()
end


local function ParseGuideData(self)
    --等待服务器发下来的时候再解析--  step 表ID

    for i, v in pairs(GuideWeakData) do
        if self.DicGuideWeakData[GuideWeakData[i].group]~=nil then
            self.DicGuideWeakData[GuideWeakData[i].group][GuideWeakData[i].step]=i
        else
            self.DicGuideWeakData[GuideWeakData[i].group]={}
            self.DicGuideWeakData[GuideWeakData[i].group][GuideWeakData[i].step]=i
        end
    end
end

local function EventOpen (self)
    GuideWeakGroup:GetInstance():EventHandleFun()
    self:RemoveEventListener()
end
--外界通知那一种类型引导开始检测/关闭检测   比如 等级10级之后 开启 闲置引导  或者测试的时候关闭检测
--等级 回调   关卡回调  会引起引导条件判断的所有通知

local function BeginCheckGuideWeak(self,bol)
    self.canWeakGuide=bol
end
local function SetWeakGuideData(self,group)
    self.finishWeakGroup = {}
    if group then
        for i, v in ipairs(group) do
            Logger.Log(v.."服务器下发")
            table.insert(self.finishWeakGroup,v)
        end
    end
end
local function SetWeakGuideRecode(self,group)
    Logger.Log("发送给服务器"..group)
    --TODO 发送给服务器
    local msdId = MsgIDDefine.PBUSER_NOVICE_GUIDE_REQUEST
    local msdObj = MsgIDMap[msdId]()
    msdObj.guide = group
    msdObj.isWeak=true
    NetManager:GetInstance():SendMessage(msdId,msdObj,function(msg_obj)
        if msg_obj.OpCode ~= 0 then
            Logger.Log("OnRecvPveStart出错了~")
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            return
        end
    end)
end
local function GuideWeakGroupOver(self,group)
    table.insert(self.finishWeakGroup,group)
    self:SetWeakGuideRecode(group)
end
local function CheckHaveThisGroup(self,group)
    local num=#self.finishWeakGroup
    for i = 1, num do
        if self.finishWeakGroup[i] == group then
            return true
        end
    end
    return false
end
local function CheckGroupCanLanch(self)
    --检测解锁没  如果解锁
    local can_guide=true
    --[[
    for i, v in pairs(self.DicGuideWeakData) do
        if GuideWeakData[v[1].condition then
            local state,type,des= UnlockData:GetInstance():GetLockDataState(GuideWeakData[v[1].condition)
            if state and  not self:CheckHaveThisGroup(GuideWeakData[v[1].group) then
                self.canWeakGuide=true
                self:EnterGameCheck(GuideWeakData[v[1].group)
                can_guide=false
                break
            end
        end
    end
    --]]
    if can_guide and not MapData:GetInstance():CheckPassLevel(10401) then
        --开启引导冒险关卡
        if MapData:GetInstance():GetLastWinLevelId()==10103  then

        else
            self.canWeakGuide=true
            self:EnterGameCheck(20)
        end

    end
end
local function CheckLevelCanLanch(self,level_id)
    --检查关卡you无弱引导
    for i, v in pairs(GuideData) do
        if v.param==level_id then
            if  MapData:GetInstance():GetLastWinLevelId()<v.param  then
                self.canWeakGuide=true
                self:EnterGameCheck(v.group)
            end
        end
    end
end
local function CheckLevelIsGuide(self,level_id)
    --检查关卡you无弱引导
    for i, v in pairs(GuideData) do
        if v.param==level_id and MapData:GetInstance():GetLastWinLevelId()<v.param then
            return true
        end
    end
    return false
end



local function GiveNoticeTeach(self,battleID,Round)
    local canweak= UserData:GetInstance():GetTeachData(battleID)
    if canweak then
        --for i, v in pairs(GuideData) do
            --if v.condition==4 and v.param==battleID and  v.isweak then
                --self.canWeakGuide=true
                --if Round==1 then
                  --  self:EnterGameCheck(v.group)
               -- else
                  --  if v.group+Round-1==GuideWeakGroup:GetInstance().CurType then
                        self:EnterGameCheck(v.group+Round-1)
                  --  end
               -- end
            --end
       -- end
    end
end
local function GiveNoticeCustom(self,battleID)
    if GuideWeakGroup:GetInstance().Runing then
        Logger.LogError("Bug Guide 正在运行")
        return
    end
    if self.canWeakGuide then
        --for i, v in ipairs(GuideData) do
            --if v.condition==3 and v.param==battleID and  v.isweak then
             --   self:EnterGameCheck(v.group)
            --end
        --end
    end
end
local function GiveNoticeLevel(self,level)
    if GuideWeakGroup:GetInstance().Runing then
        Logger.LogError("Bug Guide 正在运行")
        return
    end
    if self.canWeakGuide then
        --for i, v in ipairs(GuideData) do
            --if v.condition==2 and v.param==level then
              --  self:EnterGameCheck(v.group)
           -- end
        --end
    end
end

local function EnterGameCheck(self,group)
    self.canWeakGuide=true
    if not GuideGroup:GetInstance().Runing then
        if group>=100 then
            if self.canWeakGuide  then
                --开始引导、  在组里会判断当前UI  当前场景 当前事件  和当前触发
                GuideManager:GetInstance():LaunchGuideWeak(self.DicGuideWeakData[group][1])
            end
        else
            if self.canWeakGuide  and not GuideGroup:GetInstance().Runing then
                --开始引导、  在组里会判断当前UI  当前场景 当前事件  和当前触发
                GuideManager:GetInstance():LaunchGuideWeak(self.DicGuideWeakData[group][1])
            end
        end
    end
end
local function AddEventListener(self)
    self.UIAddEventBool=true
    self.event_name=GuideWeakGroup:GetInstance().RuningEventName
    DataManager:GetInstance():AddListener(GuideWeakGroup:GetInstance().RuningEventName,  self.easyfunc[3])
end

local function RemoveEventListener(self)
    self.UIAddEventBool=false
    DataManager:GetInstance():RemoveListener(self.event_name,  self.easyfunc[3])
end
local function WeakAddUIListener(self)
    self.UIAddListenBool=true
    UIManager:GetInstance():AddListener(UIMessageNames.UIFRAME_ON_WINDOW_OPEN,self.easyfunc[1])
end
local function WeakRemoveUIListener(self)
    self.UIAddListenBool=false
    UIManager:GetInstance():RemoveListener(UIMessageNames.UIFRAME_ON_WINDOW_OPEN, self.easyfunc[1])
end
local function UIWindowOpen(self,target)
    --检查是不是探险界面
    if GuideGroup:GetInstance().Runing  then
        return
    end
    GuideWeakGroup:GetInstance():UIHandleFun(target.Name)
    if target.Name==UIWindowNames.UIExploreMain then
        --调用
        local cardView = UIManager:GetInstance():GetWindow(UIWindowNames.UIExploreMain).View
        cardView:CheckOpenWeak()
    elseif target.Name==UIWindowNames.UITestMain then
        self:CheckGroupCanLanch()
    end

end
local function WeakAddCameraMoveListener(self)
    self.CameraMoveListenerBool=true
    UIManager:GetInstance():AddListener(UIMessageNames.ON_GUIDE_MAINSCENE_CAMERA_MOVE,self.easyfunc[2])
end
local function WeakRemoveCameraMoveListener(self)
    self.CameraMoveListenerBool=false
    UIManager:GetInstance():RemoveListener(UIMessageNames.ON_GUIDE_MAINSCENE_CAMERA_MOVE, self.easyfunc[2])
end
local function UICameraMove (self)
    --摄像机移动则关掉引导
    local path="UIRoot/BackgroudLayer/UITestMain/parentLayout/pre"
    local btn_obj = CS.UnityEngine.GameObject.Find(path)
    if btn_obj~=nil then
        CS.UnityEngine.GameObject.Destroy(btn_obj)
    end
end
local function __delete(self)
    self:WeakRemoveCameraMoveListener()
    self:WeakRemoveUIListener()
    self:RemoveEventListener()
end
GuideWeakCheckManager.__init = __init
GuideWeakCheckManager.__delete=__delete
GuideWeakCheckManager.ParseGuideData = ParseGuideData
GuideWeakCheckManager.GiveNoticeLevel= GiveNoticeLevel
GuideWeakCheckManager.EnterGameCheck = EnterGameCheck
GuideWeakCheckManager.BeginCheckGuideWeak = BeginCheckGuideWeak
GuideWeakCheckManager.UIWindowOpen = UIWindowOpen
GuideWeakCheckManager.WeakAddUIListener = WeakAddUIListener
GuideWeakCheckManager.WeakRemoveUIListener= WeakRemoveUIListener
GuideWeakCheckManager.UICameraMove = UICameraMove
GuideWeakCheckManager.WeakAddCameraMoveListener= WeakAddCameraMoveListener
GuideWeakCheckManager.WeakRemoveCameraMoveListener = WeakRemoveCameraMoveListener
GuideWeakCheckManager.GiveNoticeCustom = GiveNoticeCustom
GuideWeakCheckManager.GiveNoticeTeach = GiveNoticeTeach
GuideWeakCheckManager.AddEventListener = AddEventListener
GuideWeakCheckManager.RemoveEventListener = RemoveEventListener
GuideWeakCheckManager.EventOpen = EventOpen
GuideWeakCheckManager.CheckGroupCanLanch = CheckGroupCanLanch
GuideWeakCheckManager.SetWeakGuideData = SetWeakGuideData
GuideWeakCheckManager.GuideWeakGroupOver = GuideWeakGroupOver
GuideWeakCheckManager.SetWeakGuideRecode = SetWeakGuideRecode
GuideWeakCheckManager.CheckHaveThisGroup = CheckHaveThisGroup
GuideWeakCheckManager.CheckLevelCanLanch = CheckLevelCanLanch
GuideWeakCheckManager.CheckLevelIsGuide = CheckLevelIsGuide
return GuideWeakCheckManager