---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ljl.
--- DateTime: 2019/7/23 15:25
---
local UIArenaPVPReportItem=BaseClass("UIArenaPVPReportItem",UIWrapComponent)
local base = UIWrapComponent

---点击单个物品
local function OnSkillItemClick(self)
    if self.skill_single_data==nil then
        return
    end
    self.view.SetLeftPanelData(self.view, self.transform,self.skill_single_data)
end

---通过秒计算时间信息
local function GetTimerInfoBySecond(self, _seconds)
    local day = _seconds / 86400
    if math.floor(day) > 0 then
        local hour = _seconds / 3600 % 24
        return math.floor(day).."天"..math.floor(hour).."小时之前"
    else
        local hour = _seconds / 3600
        if math.floor(hour) > 0 then
            local min = _seconds / 60 % 60
            return   math.floor(hour).."小时".. math.floor(min).."分钟之前"
        else
            local min = _seconds / 60
            local sec = _seconds % 60
            if math.floor(min) > 1 then
                return  math.floor(min).."分钟".. math.floor(sec).."秒之前"
            else
                return math.floor(sec).."秒之前"
            end
        end
    end
end

local function OnCreate(self)
    base.OnCreate(self)
    --组建初始化
    self.icon_img=self:AddComponent(UIImage,"playerIconImg",AtlasConfig.DynamicTex)
    self.frame_img = self:AddComponent(UIImage,"playerfromImg",AtlasConfig.DynamicTex)
    self.state_img = self:AddComponent(UIImage,"attatcStateImg",AtlasConfig.DynamicTex)
    self.pvpImg =self:AddComponent(UIImage,"pvpImg")
    self.pveImg = self:AddComponent(UIImage,"pveImg")
    self.attack_back_play_btn = self:AddComponent(UIButton,"attackBackPlayBtn")
    self.attack_back_play_btn:SetOnClick(function ()
        self.view:OnBattleReturnPlay(self.single_data)
    end)
    self.icon_img_btn = self:AddComponent(UIButton,"playerfromImg")
    self.icon_img_btn:SetOnClick(function ()
        --UISpecial:GetInstance():UITipText(DataUtil.GetClientText(100045))
    end)
    self.name_text = self:AddComponent(UIText,"playerNameText")
    self.lv_text = self:AddComponent(UIText,"levelText")
    self.win_num_text = self:AddComponent(UIText,"winNumText")
    self.time_info_text = self:AddComponent(UIText,"timeInfoText")
    self.attack_back_play_text = self:AddComponent(UIText,"attackBackPlayText")
    self.text_text = self:AddComponent(UIText,"textTet")
end

-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self,real_index)
    self.index = real_index+1
    self.single_data=self.view.report_data[real_index+1]
    if self.single_data == nil then
        return
    end
    self.icon_img:SetSpriteName(self.single_data.head)
    self.frame_img:SetSpriteName(self.single_data.framd)

    if self.single_data.resultType == 1 then
        self.state_img:SetSpriteName("ui_t_c2_173")
        self.text_text:SetText("挑战成功")
    else
        self.state_img:SetSpriteName("ui_t_c2_172")
        self.text_text:SetText("挑战失败")
    end
    if self.single_data.name == nil then
        self.name_text:SetText( self.single_data.uid)
    else
        self.name_text:SetText( self.single_data.name)
    end
    self.pvpImg:SetActive( self.single_data.reportType == 5)
    self.pveImg:SetActive( self.single_data.reportType == 9)

    self.lv_text:SetText(math.floor(self.single_data.level))
    self.win_num_text:SetText(self.single_data.resultScore)
    local num = TimeSyncManager:GetInstance():GetSimulationJavaMS()/1000 - self.single_data.fightTime
    self.time_info_text:SetText(GetTimerInfoBySecond(self,num))


end

UIArenaPVPReportItem.OnCreate = OnCreate
UIArenaPVPReportItem.OnSkillItemClick = OnSkillItemClick
UIArenaPVPReportItem.OnRefresh=OnRefresh

return UIArenaPVPReportItem