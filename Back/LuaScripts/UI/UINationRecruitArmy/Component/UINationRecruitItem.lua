---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by diyigeng.
--- DateTime: 2019/8/27 18:32
---
local UINationRecruitItem=BaseClass("UINationRecruitItem",UIBaseContainer)
local base = UIBaseContainer

local function __GetTimeStr(num)
    if num >= 10 then
        return tostring(num)
    elseif num > 0 then
        return string.format("0%s",num)
    else
        return "00"
    end
end

local UPDATE_RATE = 500

local function OnCreate(self,i)
    base.OnCreate(self)
    self.model = self.view.model
    self.ctrl = self.view.ctrl
    self.index = i

    self.itembgUIImage = self:AddComponent(UIImage, "itembg_UIImage")
    self.silderbgUIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage")


    self.haveCardGameObject = UIUtil.FindTrans(self.transform,"itembg_UIImage/Silderbg_UIImage/haveCard").gameObject
    self.nonehaveGameObject = UIUtil.FindTrans(self.transform,"itembg_UIImage/Silderbg_UIImage/nonehave").gameObject

    self.itemUISlider = self:AddComponent(UISlider, "itembg_UIImage/Silderbg_UIImage/haveCard/item_UISlider")
    self.itemUISlider:SetOnValueChange(self.OnSliderValueChange,self)
    self.itemUISliderRectTransform = self.itemUISlider.rectTransform
    self.defaultUISliderX = self.itemUISliderRectTransform.sizeDelta.x
      -- 背景
    self.gray_greenUIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/item_UISlider/gray_green_UIImage")
    self.uiGreyMat = self.gray_greenUIImage:GetMat()
    self.gray_greenUIImage:SetMat(nil)

    self.fillUIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/item_UISlider/Fill Area/Fill_UIImage")
    self.fillUIImage:SetMat(nil)
    self.handleUIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/item_UISlider/Handle Slide Area/Handle_UIImage",AtlasConfig.DynamicTex)
    self.handleUIImage:SetMat(nil)
    --ui_t_c2_079 ui_t_c2_080

    self.reduceBtnUIButton = self:AddComponent(UIButton, "itembg_UIImage/Silderbg_UIImage/haveCard/reduceBtn_UIButton")
    self.reduceBtnUIButton:SetOnClick(function ()
        local copyCardData = self.model.nationCardTables[self.index]
        local recruitStatus = self.model:GetCardRecruitStatus(copyCardData)
        if recruitStatus ~= self.model.CARD_ARMY_STATUS.NORMAL_ARMY then -- OK
            return
        end
        local num = self.view:GetCurrentNeedCropArmyCountWithCardId(copyCardData.id)
        if num - 1 < 0 then
            return
        end
        self.view:SetCurrentNeedCropArmyCountWithCardId(copyCardData.id,num - 1)
        -- 刷新界面
        self.view:OnRefresh()
    end)
    self.reduceBtnUIButtonImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/reduceBtn_UIButton")
    self.reduceBtnUIButtonImage:SetMat(nil)
    self.addBtnUIButton = self:AddComponent(UIButton, "itembg_UIImage/Silderbg_UIImage/haveCard/addBtn_UIButton")
    self.addBtnUIButton:SetOnClick(function ()
        local copyCardData = self.model.nationCardTables[self.index]
        local recruitStatus = self.model:GetCardRecruitStatus(copyCardData)
        if recruitStatus ~= self.model.CARD_ARMY_STATUS.NORMAL_ARMY then -- OK
            return
        end
        local couldRecruitArmyCount = self.view:GetCouldRecruitArmyCount(copyCardData,self.model.recruitMode) -- 可招募数量
        local num = self.view:GetCurrentNeedCropArmyCountWithCardId(copyCardData.id)
        if num + 1 > couldRecruitArmyCount then
            return
        end
        self.view:SetCurrentNeedCropArmyCountWithCardId(copyCardData.id,num + 1)
        -- 刷新界面
        self.view:OnRefresh()
    end)
    self.addBtnUIButtonImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/addBtn_UIButton")
    self.addBtnUIButtonImage:SetMat(nil)

    self.slideUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/haveCard/Slide_UIText")
    self.slideUIText:SetText(DataUtil.GetClientText(200321)) -- "军力值已达上限"

    self.addMilitaryValueDescUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/haveCard/addMilitaryValueDesc_UIText")
    self.addMilitaryValueDescUIText:SetText(DataUtil.GetClientText(200322)) -- "征集数量:"

    self.addMilitaryValueUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/haveCard/addMilitaryValueDesc_UIText/addMilitaryValue_UIText")

    self.costTimeDescUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/haveCard/costTimeDesc_UIText")
    self.costTimeDescUIText:SetText(DataUtil.GetClientText(200323)) -- "耗时:"
    self.costTimeUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/haveCard/costTimeDesc_UIText/costTime_UIText")

    self.completeDescUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/haveCard/completeDesc_UIText")
    self.completeDescUIText:SetText(DataUtil.GetClientText(200324)) -- "立即完成招募"

    self.recruitingValueDescUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/haveCard/recruitingValueDesc_UIText")
    self.recruitingValueDescUIText:SetText(DataUtil.GetClientText(200325)) -- "征募中:"
    self.recruitingValueUIText = self:AddComponent(UIText,
            "itembg_UIImage/Silderbg_UIImage/haveCard/recruitingValueDesc_UIText/recruitingValue_UIText")
    self.recruitingNowUIText = self:AddComponent(UIText,
            "itembg_UIImage/Silderbg_UIImage/haveCard/recruitingNow_UIText")

    self.militaryCurValueUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/haveCard/militaryCurValueIcon/militaryCurValue_UIText")
    -- 卡牌头像相关
    self.carddiBg1UIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/Card1/CarddiBg1_UIImage",AtlasConfig.DynamicTex)
    self.cardIcon1UIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/Card1/CardIcon1_UIImage",AtlasConfig.DynamicTex)
    self.cardtopBg1UIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/Card1/CardtopBg1_UIImage",AtlasConfig.DynamicTex)
    self.cardQualityImg1UIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/Card1/CardQualityImg1_UIImage",AtlasConfig.DynamicTex)

    self.cardSHLCrystal1UIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/Card1/CardSHLCrystal1_UIImage",AtlasConfig.DynamicTex)
    self.costSoulImgUIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/Card1/CardSHLCrystal1_UIImage/costSoulImg_UIImage",AtlasConfig.DynamicTex)
    self.cardJLRCrystal1UIImage = self:AddComponent(UIImage, "itembg_UIImage/Silderbg_UIImage/haveCard/Card1/CardJLRCrystal_UIImage",AtlasConfig.DynamicTex)

    self.starGroup = self:AddComponent(UIBaseContainer, "itembg_UIImage/Silderbg_UIImage/haveCard/Card1/CardstarGroup1")
    self.starList = {}
    local starCount = self.starGroup.transform.childCount
    for i = 0, starCount - 1 do
        local singleStarImg = self.starGroup:AddComponent(UIImage, i, AtlasConfig.DynamicTex)
        table.insert(self.starList, singleStarImg)
    end


    self.noneHaveUIText = self:AddComponent(UIText, "itembg_UIImage/Silderbg_UIImage/nonehave/noneHave_UIText")
    self.noneHaveUIText:SetText(DataUtil.GetClientText(200326)) -- "未配置"

end

local function OnSliderValueChange(self)
    local copyCardData = self.model.nationCardTables[self.index]
    local recruitStatus = self.model:GetCardRecruitStatus(copyCardData)
    if recruitStatus ~= self.model.CARD_ARMY_STATUS.NORMAL_ARMY then -- OK
        return
    end

    local val = math.modf(self.itemUISlider:GetCurrentValue())
    --Logger.LogErrorVars(" OnSliderValueChange : val",val)
    --local couldRecruitArmyCount = self:GetCouldRecruitArmyCount(copyCardData,self.model.recruitMode) -- 可招募数量
    self.view:SetCurrentNeedCropArmyCountWithCardId(copyCardData.id,val)
    -- 刷新界面
    self.view:OnRefresh()
end

local function SetSliderValue(self,val,hasEvent)
    if hasEvent then
        self.itemUISlider:SetRealValue(val)
    else
        self.itemUISlider:RemoveAllOnValueChange()
        self.itemUISlider:SetRealValue(val)
        self.itemUISlider:SetOnValueChange(self.OnSliderValueChange,self)
    end
end




-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self)
    local copyCardData = self.model.nationCardTables[self.index]
    local recruitStatus = self.model:GetCardRecruitStatus(copyCardData)
    if recruitStatus == self.model.CARD_ARMY_STATUS.NONE_HAVE_CARD then -- OK
        self:__DisposeArmyTimer()
        self.haveCardGameObject:SetActive(false)
        self.nonehaveGameObject:SetActive(true)
        self:__SetItemGrey(false)
    elseif recruitStatus == self.model.CARD_ARMY_STATUS.RECRUITING then -- 征募中

        -- 时间显示 倒计时
        -- +300(600) 已征募多少/ 总征募数量是多少


        self:__DisposeArmyTimer()
        self.nonehaveGameObject:SetActive(false)
        self.haveCardGameObject:SetActive(true)
        self:__SetItemGrey(true)
        self:__SetItemUISliderWidthRate(0,0,0)
        self:SetSliderValue(0,false)

        self.slideUIText:SetActive(false)

        self.militaryCurValueUIText:SetText(string.format("%s/%s",copyCardData.copyArmy,copyCardData.armyMax))
        --self.armyTimer = SyncTimer.New(SyncTimer.MODE_STEP, copyCardData.startArmyTime,
        --        copyCardData.cropsConsumeMS, false, self.__UpdateArmyTimer, { res = copyCardData, superSelf = self })
        self.armyTimer = SyncTimer.New(SyncTimer.MODE_STEP, copyCardData.startArmyTime,
                UPDATE_RATE, false, self.__UpdateArmyTimer, { res = copyCardData, superSelf = self })
        self.armyTimer:Start()
        self.addMilitaryValueDescUIText.gameObject:SetActive(false)
        self.recruitingValueDescUIText.gameObject:SetActive(true)
        self.costTimeDescUIText.gameObject:SetActive(false)
        self.completeDescUIText.gameObject:SetActive(false)
        self.recruitingNowUIText.gameObject:SetActive(true)


        local recruitingRemindTimeMS = self.__GetRecruitingRemindTimeMS(copyCardData,currentTime)
        --Logger.LogVars("recruitingRemindTimeMS ",recruitingRemindTimeMS, " recruitingRemindTimeMS * 0.001 ： ",recruitingRemindTimeMS * 0.001)
        local timeStr = self.__GetTimeFormatStr( recruitingRemindTimeMS * 0.001)
        self.recruitingValueUIText:SetText(timeStr)
        local recruitingNow,recruitingMax = self.view.__GetRecruitingArmyNowAndMax(copyCardData,currentTime)
        self.recruitingNowUIText:SetText(string.format("+%s(%s)",recruitingNow,recruitingMax))

        self:__SetItemCardData(copyCardData)

    elseif recruitStatus == self.model.CARD_ARMY_STATUS.MAX_ARMY then
        self:__DisposeArmyTimer()
        self.nonehaveGameObject:SetActive(false)
        self.haveCardGameObject:SetActive(true)
        self:__SetItemGrey(true)
        self:__SetItemUISliderWidthRate(0,0,0)
        self:SetSliderValue(0,false)
        self.militaryCurValueUIText:SetText(string.format("%s/%s",copyCardData.copyArmy,copyCardData.armyMax)) -- 最大军力
        self.slideUIText:SetActive(true)
        self.addMilitaryValueDescUIText.gameObject:SetActive(false)
        self.costTimeDescUIText.gameObject:SetActive(false)
        self.completeDescUIText.gameObject:SetActive(false)
        self.recruitingValueDescUIText.gameObject:SetActive(false)
        self.recruitingNowUIText.gameObject:SetActive(false)
        self:__SetItemCardData(copyCardData)
    elseif recruitStatus == self.model.CARD_ARMY_STATUS.NORMAL_ARMY then
        self:__DisposeArmyTimer()
        self.nonehaveGameObject:SetActive(false)
        self.haveCardGameObject:SetActive(true)
        self:__SetItemGrey(false)
        self.slideUIText:SetActive(false)

        local couldRecruitArmyCount = self.view:GetCouldRecruitArmyCount(copyCardData,self.model.recruitMode) -- 可招募数量
        self:__SetItemUISliderWidthRate(0,couldRecruitArmyCount,copyCardData.armyMax - copyCardData.copyArmy)
        local recruitNum = self.view:GetCurrentNeedCropArmyCountWithCardId(copyCardData.id)
        self:SetSliderValue(recruitNum,false)
        self.recruitingValueDescUIText.gameObject:SetActive(false)
        self.recruitingNowUIText.gameObject:SetActive(false)
        self.militaryCurValueUIText:SetText(string.format("%s/%s",copyCardData.copyArmy,copyCardData.armyMax)) -- 最大军力
        self:__SetItemCardData(copyCardData)

        if self.model.recruitMode == self.model.RECRUIT_MODE.NORMAL then -- 普通征兵

            self.addMilitaryValueDescUIText.gameObject:SetActive(true) -- 征募数量
            self.addMilitaryValueUIText:SetText(recruitNum)
            self.costTimeDescUIText.gameObject:SetActive(true)
            self.costTimeUIText:SetText(self.__GetTimeFormatStr(recruitNum * copyCardData.cropsConsumeMS * 0.001))
            self.completeDescUIText.gameObject:SetActive(false)
        else -- 快速征兵
            self.addMilitaryValueDescUIText.gameObject:SetActive(true)
            self.addMilitaryValueUIText:SetText(recruitNum)
            self.costTimeDescUIText.gameObject:SetActive(false)
            self.completeDescUIText.gameObject:SetActive(true)
        end
    end
end

local function __SetItemCardData(self,copyCardData)
    --local staticCard = copyCardData.staticCard
    self.cardIcon1UIImage:SetSpriteName(copyCardData.icon)
    self.carddiBg1UIImage:SetSpriteName(SpriteDefine:GetCardBGByQua(copyCardData.quality))
    self.cardQualityImg1UIImage:SetSpriteName(SpriteDefine:GetQuaIconByType(copyCardData.quality))
    self.cardtopBg1UIImage:SetSpriteName(SpriteDefine:GetCardTopFrameByQuality(copyCardData.quality))
    UIUtil.SetHeroStar(copyCardData.starlv, self.starList)
    if copyCardData.cardMainType == 1 then -- 守护灵
        self.cardSHLCrystal1UIImage.gameObject:SetActive(false)
        self.cardJLRCrystal1UIImage.gameObject:SetActive(true)
        self.cardJLRCrystal1UIImage:SetSpriteName(copyCardData.hunImg)
    else
        self.cardSHLCrystal1UIImage.gameObject:SetActive(true)
        self.cardJLRCrystal1UIImage.gameObject:SetActive(false)
        self.cardSHLCrystal1UIImage:SetSpriteName(copyCardData.hunImg)
        self.costSoulImgUIImage:SetSpriteName(copyCardData.hunTextImg)
    end
end

local function __SetItemUISliderWidthRate(self,silderMin,silderMax,maxBarCount)
    local realmax = math.max(silderMin,silderMax)
    local realmin = math.min(silderMin,silderMax)
    --Logger.LogErrorVars("__SetItemUISliderWidthRate : ",self.defaultUISliderX," val : ",val)
    self.itemUISlider:RemoveAllOnValueChange()
    self.itemUISlider:SetMaxAndMinValue(realmax,realmin) -- 设置进度条大小
    self.itemUISlider:SetOnValueChange(self.OnSliderValueChange,self)
    local rate = 0
    if realmax == 0 then
        rate = 0
    else
        rate = math.max(0, math.min(realmax/maxBarCount,1))
    end
    --Logger.LogErrorVars("silderMin : ",silderMin," silderMax : ",silderMax," maxBarCount : ",maxBarCount," rate : ",rate)
    local val = self.defaultUISliderX * rate
    --Logger.LogErrorVars("self.defaultUISliderX : ",self.defaultUISliderX," val : ",val)
    self.itemUISliderRectTransform.sizeDelta =Vector2.New(val,self.itemUISliderRectTransform.sizeDelta.y)
end

--[[
    更新资源数量计时器
]]
local function __UpdateArmyTimer(selfTimer, obj)

    local res = obj.res
    local superSelf = obj.superSelf
    local currentTime = TimeSyncManager:GetInstance():GetSimulationJavaMS()
    --local remindTime
    local isEnd = false
    if currentTime >= res.endArmyTime then
        --remindTime = res.endArmyTime - res.startArmyTime --经过时间
        isEnd = true
    else
        --remindTime = currentTime - res.startArmyTime --经过时间
    end

    local recruitingRemindTimeMS = superSelf.__GetRecruitingRemindTimeMS(res,currentTime)
    local timeStr = superSelf.__GetTimeFormatStr( recruitingRemindTimeMS * 0.001)
    superSelf.recruitingValueUIText:SetText(timeStr)
    local recruitingNow,recruitingMax = superSelf.view.__GetRecruitingArmyNowAndMax(res,currentTime)
    superSelf.recruitingNowUIText:SetText(string.format("+%s(%s)",recruitingNow,recruitingMax))

    --local spdMS = res.cropsConsumeMS -- 整一个兵耗时
    --local incRate = 1 -- 增长量
    --local addRate = math.modf(remindTime / spdMS) -- 现在增加了多少兵
    --local nowVal = addRate * incRate + res.army
    --local maxVal = res.armyMax
    --local finalVal = nil -- 最终值
    --if nowVal > maxVal then
    --    finalVal = maxVal
    --else
    --    finalVal = nowVal
    --end

    if isEnd then
        superSelf:__DisposeArmyTimer()
    end
end

local function __GetRecruitingRemindTimeMS(copyCardData,currentTime)
    if currentTime == nil then
        currentTime = TimeSyncManager:GetInstance():GetSimulationJavaMS()
    end
    local remindTimeMS = 0
    if currentTime >= copyCardData.endArmyTime then -- 已结束征兵
        remindTimeMS = 0
    else
        remindTimeMS =   math.modf(copyCardData.endArmyTime - currentTime)
    end
    return remindTimeMS
end






local function __SetItemGrey(self,isGrey)
    if isGrey then
        self.reduceBtnUIButtonImage:SetMat(self.uiGreyMat)
        self.addBtnUIButtonImage:SetMat(self.uiGreyMat)
        self.gray_greenUIImage:SetMat(self.uiGreyMat)
        self.handleUIImage:SetSpriteName("ui_t_c2_079")
    else
        self.reduceBtnUIButtonImage:SetMat(nil)
        self.addBtnUIButtonImage:SetMat(nil)
        self.gray_greenUIImage:SetMat(nil)
        self.handleUIImage:SetSpriteName("ui_t_c2_080")
    end
end

local function OnEnable(self)
    base.OnEnable(self)

end


local function OnDisable(self)
    base.OnDisable(self)
    self:__DisposeArmyTimer()
end

local function __DisposeArmyTimer(self)
    if self.armyTimer ~= nil then
        self.armyTimer:Stop()
        self.armyTimer = nil
    end
end

local function __GetTimeFormatStr(num)
    local hour = math.floor( num / 3600)
    local tempMin = num % 3600
    local min = math.floor(tempMin / 60)
    local seconds = math.floor(tempMin % 60)
    return __GetTimeStr(hour)..":"..__GetTimeStr(min)..":"..__GetTimeStr(seconds)
end

UINationRecruitItem.__SetItemUISliderWidthRate = __SetItemUISliderWidthRate
UINationRecruitItem.SetSliderValue = SetSliderValue
UINationRecruitItem.OnSliderValueChange = OnSliderValueChange

UINationRecruitItem.OnCreate = OnCreate
UINationRecruitItem.OnRefresh=OnRefresh
UINationRecruitItem.OnDisable = OnDisable
UINationRecruitItem.OnEnable = OnEnable
UINationRecruitItem.__DisposeArmyTimer = __DisposeArmyTimer
UINationRecruitItem.__UpdateArmyTimer = __UpdateArmyTimer
UINationRecruitItem.__SetItemGrey = __SetItemGrey
UINationRecruitItem.__SetItemCardData = __SetItemCardData
UINationRecruitItem.__GetTimeFormatStr = __GetTimeFormatStr
UINationRecruitItem.__GetRecruitingRemindTimeMS = __GetRecruitingRemindTimeMS


return UINationRecruitItem