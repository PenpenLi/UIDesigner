---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 2019/5/15 11:30
---
local BattleEnemyRoleSkill = BaseClass("BattleEnemyRoleSkill", UIBaseContainer)
local base = UIBaseContainer
local BattleAssistFunction= require "GameLogic.BattleNew.BattleAssistFunction"
local function OpenSkillWindow(self)
    self.view.skill_tip:OnRefresh(self.skill_paras,self.skill_icon.transform.position,2)
end

local function CloseSkillWindow(self)
    self.view.skill_tip:OnShowOrHide(false)
end

local function OnCreate(self)
    base.OnCreate(self)
    self.skill_empty = UIUtil.FindTrans(self.transform,"Empty").gameObject
    self.skill_frame = self:AddComponent(UIImage,"ActiveSkill",AtlasConfig.DynamicTex)
    self.skill_icon = self:AddComponent(UIImage,"Icon",AtlasConfig.DynamicTex)
    self.extral_obj = UIUtil.FindTrans(self.transform,"Extral_CryBg").gameObject
    self.extral_img = self:AddComponent(UIImage, "Extral_CryBg/Extral_CryImg",AtlasConfig.DynamicTex)
    self.extral_cry = self:AddComponent(UIText,"Extral_CryBg/Extral_Cry")
    self.mask_img = self:AddComponent(UIImage,"Mask")
    self.crystal_forbid = self:AddComponent(UIImage,"Forbid")
    self.passive_game = UIUtil.FindTrans(self.transform,"PassiveSkill").gameObject
    self.skill_icon_tri = self:AddComponent(UIEventTrigger,"Icon")
    self.skill_icon_tri:SetOnLongPress(Bind(self,OpenSkillWindow),Bind(self,CloseSkillWindow),true)
    self.grayMat = self.skill_icon:GetMat()
end

-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self,roledata,data,costType)
    if data ~= nil then
        self.skill_icon.gameObject:SetActive(true)
        self.skill_icon:SetSpriteName(data.icon)
        self.skill_empty:SetActive(false)
        if data.skillType == 2 then
            self.passive_game:SetActive(true)
            self.skill_frame.gameObject:SetActive(false)
        else
            self.passive_game:SetActive(false)
            self.skill_frame.gameObject:SetActive(true)
            self.skill_frame:SetSpriteName("ui_t_Battle_048")
        end
        if roledata.hp > 0 then
            self.skill_icon:SetMat(nil)
            self.mask_img.gameObject:SetActive(data.cd > 0)
            if data.maxcd == 0 or data.maxcd == data.cd then
                self.mask_img:SetFillVal(0.95)
            else
                self.mask_img:SetFillVal(data.cd/data.maxcd)
            end
        else
            self.skill_icon:SetMat(self.grayMat)
            self.mask_img.gameObject:SetActive(false)
        end

        BattleAssistFunction.SetSkillCryText( self.extral_obj,self.extral_img,self.extral_cry,data.extralCryType,data.extralCryNum)
        self.skill_paras = {cost = data.num,name = data.name,id = data.id,level = data.level,breakLevel = data.breakLevel,costType = costType}
    else
        BattleAssistFunction.SetSkillCryText( self.extral_obj,self.extral_img,self.extral_cry,0,0)
        self.skill_icon.gameObject:SetActive(false)
        self.skill_empty:SetActive(true)
        self.passive_game:SetActive(false)
        self.skill_frame.gameObject:SetActive(false)
    end
end


BattleEnemyRoleSkill.OnRefresh = OnRefresh
BattleEnemyRoleSkill.OnCreate = OnCreate
return BattleEnemyRoleSkill