---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 2019/3/11 13:39
---

local EnemyRoleInfo = BaseClass("EnemyRoleInfo", UIBaseContainer)
local base = UIBaseContainer
local EnemyRoleHead = require "UI.UIBattle.Component.EnemyRoleHead"
local EnemyRoleSkill = require "UI.UIBattle.Component.EnemyRoleSkill"
local EnemyBuffList = require "UI.UIBattle.Component.EnemyBuffList"
local function OnCreate(self)
    base.OnCreate(self)
    self.nick_name = self:AddComponent(UIText,"EnemyCardInfo_Basic/CardName/CardNickname")
    self.name = self:AddComponent(UIText,"EnemyCardInfo_Basic/CardName")
    self.blood_img = self:AddComponent(UIImage,"EnemyCardInfo_Basic/HP/blood/bloodImg")
    self.blood_text = self:AddComponent(UIText,"EnemyCardInfo_Basic/HP/blood/Text")
    self.attack_num = self:AddComponent(UIText,"EnemyCardInfo_Basic/Attack/Attack_Num")
    self.defense_num = self:AddComponent(UIText,"EnemyCardInfo_Basic/Defense/Defense_Num")
    self.head_item = EnemyRoleHead.New(self,"EnemyCardInfo_Basic/CardHead")
    self.head_item:OnCreate()
    self.skills = {}
    for i = 1, 3 do
        self.skills[i] = EnemyRoleSkill.New(self,"EnemyCardInfo_Skill/Skill_"..i)
        self.skills[i]:OnCreate()
    end

    self.card_empty = UIUtil.FindTrans(self.transform,"EnemyCardInfo_Empty").gameObject
    self.basic_empty = UIUtil.FindTrans(self.transform,"EnemyCardInfo_Basic").gameObject
    self.skill_empty = UIUtil.FindTrans(self.transform,"EnemyCardInfo_Skill").gameObject
    self.psych_empty = UIUtil.FindTrans(self.transform,"EnemyCardInfo_PsychicSharing").gameObject
    self.weapon_empty = UIUtil.FindTrans(self.transform,"EnemyCardInfo_Weapon").gameObject
    self.mask_game = UIUtil.FindTrans(self.transform,"Mask").gameObject
    self.psych_text = {}
    self.psych_text.hp = self:AddComponent(UIText,"EnemyCardInfo_PsychicSharing/PsychicSharing_HP/PsychicSharing_HP")
    self.psych_text.atk = self:AddComponent(UIText,"EnemyCardInfo_PsychicSharing/PsychicSharing_Attack/PsychicSharing_Attack")
    self.psych_text.def = self:AddComponent(UIText,"EnemyCardInfo_PsychicSharing/PsychicSharing_Defense/PsychicSharing_Defense")

    self.weapon_name =  self:AddComponent(UIText,"EnemyCardInfo_Weapon/Weapon_Name")
    self.weapon_active =  self:AddComponent(UIText,"EnemyCardInfo_Weapon/Weapon_Strength_Level")
    self.weapon_des =  self:AddComponent(UIText,"EnemyCardInfo_Weapon/Weapon_Unseal_PassiveSkill")

    self.buff_list = EnemyBuffList.New(self,"EnemyCardInfo_Basic/Buff")
    self.buff_list:OnCreate()
end

-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self,data)
    if data ~= nil then
        self.card_empty:SetActive(false)
        self.basic_empty:SetActive(true)
        self.skill_empty:SetActive(true)
        self.psych_empty:SetActive(true)
        self.weapon_empty:SetActive(true)
        if data.hp == 0 then
            self.mask_game:SetActive(true)
        else
            self.mask_game:SetActive(false)
        end
        self.name:SetText(data.name)
        self.nick_name:SetText(data.nickName)
        self.blood_img:SetFillVal(data.hp/data.maxHp)
        self.blood_text:SetText(data.hp.."/"..data.maxHp)
        self.attack_num:SetText(data.atk)
        self.defense_num:SetText(data.def)
        self.head_item:OnRefresh(data)
        for i = 1, 3 do
            self.skills[i]:OnRefresh(data.skill[i],data.callType,i)
        end

        if data.weapon ~= nil then
            self.psych_empty:SetActive(false)
            self.weapon_empty:SetActive(true)
            self.weapon_name:SetText(data.weapon.name)
            self.weapon_des:SetText(data.weapon.des)
            if data.weapon.isActive then
                self.weapon_active.gameObject:SetActive(false)
                self.weapon_name:SetColor32(255,255,255,255)
                self.weapon_des:SetColor32(255,255,255,255)
            else
                self.weapon_active.gameObject:SetActive(true)
                self.weapon_name:SetColor32(149,149,149,255)
                self.weapon_des:SetColor32(149,149,149,255)
            end
        elseif data.shareAttr ~= nil then
            self.psych_empty:SetActive(true)
            self.weapon_empty:SetActive(false)
            if data.shareAttr.hp ~= nil then
                self.psych_text.hp:SetText(DataUtil.PropertyConvertString(103,data.shareAttr.hp))
            else
                self.psych_text.hp:SetText("")
            end
            if data.shareAttr.atk ~= nil then
                self.psych_text.atk:SetText(DataUtil.PropertyConvertString(101,data.shareAttr.atk))
            else
                self.psych_text.atk:SetText("")
            end
            if data.shareAttr.def ~= nil then
                self.psych_text.def:SetText(DataUtil.PropertyConvertString(102,data.shareAttr.def))
            else
                self.psych_text.def:SetText("")
            end
        else
            self.psych_empty:SetActive(false)
            self.weapon_empty:SetActive(false)
        end

        if self.view.model.type == 1 then
            self.buff_list.gameObject:SetActive(false)
            self.name.gameObject:SetActive(true)
        else
            self.buff_list:OnRefresh(data.buff)
            self.buff_list.gameObject:SetActive(true)
            self.name.gameObject:SetActive(false)
        end

    else
        self.name:SetText("")
        self.nick_name:SetText("")
        self.card_empty:SetActive(true)
        self.basic_empty:SetActive(false)
        self.skill_empty:SetActive(false)
        self.psych_empty:SetActive(false)
        self.weapon_empty:SetActive(false)
        self.mask_game:SetActive(false)
    end
end


EnemyRoleInfo.OnRefresh = OnRefresh
EnemyRoleInfo.OnCreate = OnCreate
return EnemyRoleInfo