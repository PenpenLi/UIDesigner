---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 2019/5/15 11:46
---
local BattleFieldManager=require "GameLogic.BattleNew.Logic.Manager.BattleFieldManager"
local BattleEnemyRoleInfo = BaseClass("BattleEnemyRoleInfo", UIBaseContainer)
local base = UIBaseContainer
local EnemyRoleHead = require "UI.UIBattle.Component.BattleEnemyRoleHead"
local EnemyRoleSkill = require "UI.UIBattle.Component.BattleEnemyRoleSkill"
local EnemyBuffList = require "UI.UIBattle.Component.UIBattleHeroBuffList"
local initPos = Vector3.New(1,185,0)
local movePos = Vector3.New(1,3,0)
local battlePos = Vector3.New(1,400,0)
local cryInitPos = Vector3.New(-73,-57,0)
local cryMovePos = Vector3.New(-73,-240,0)


--获取技能水晶
local function GetSkillCry(skillData,id,skillLevel,heroType)
    local crystal_type = 0
    local crystal_num = 0
    local all_effect = DataUtil.GetData("skill_effect")
    local effects = skillData[id].lvs[skillLevel][1].Effects
    for i, v in ipairs(effects) do
        if all_effect[v.id] ~= nil and all_effect[v.id].Type == 3 then
            if all_effect[v.id].DetailType == 3001 then --获得水晶
                if all_effect[v.id].lvs[v.lv] ~= nil then
                    local type_val = all_effect[v.id].lvs[v.lv].Value
                    crystal_type = type_val[1]
                    crystal_num = crystal_num + type_val[2]
                end
            elseif all_effect[v.id].DetailType == 3006 then
                if all_effect[v.id].lvs[v.lv] ~= nil then
                    local temp_num = all_effect[v.id].lvs[v.lv].Value[1]
                    crystal_type = heroType
                    crystal_num = crystal_num + temp_num
                end
            end
        end
    end
    return crystal_type,crystal_num

end

local function PlayAnim(self,fpos,tpos,time,func)
    if self.tweener_flag ~= nil then
        LuaTweener.StopTweener(self.tweener_flag)
    end
    if time == nil then
        time = 0.5
    end
    self.moveRectTrans.anchoredPosition3D = fpos

    self.tweener_flag = LuaTweener.UIMoveTo(self.moveRectTrans,fpos,tpos,time,EaseFormula.InOutQuad,function()
        self.tweener_flag = nil
        if func ~= nil then
            func()
        end
    end)
end

local function CryPlayAnim(self, fpos, tpos, time, func)
    if self.cry_tweener ~= nil then
        LuaTweener.StopTweener(self.cry_tweener)
    end
    if time == nil then
        time = 0.5
    end
    self.cryRectTrans.anchoredPosition3D = fpos
    self.cry_tweener  = LuaTweener.UIMoveTo(self.cryRectTrans,fpos,tpos,time,EaseFormula.InOutQuad,function()
        self.cry_tweener = nil
        if func ~= nil then
            func()
        end
    end)
end

local function ClickArrow(self)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if BattleFieldManager:GetInstance().battleType==BattleEnum.BattleType.PVP then
        return
    end
    self.state = 1-self.state
    if self.state == 0 then
        self.mask_game:SetActive(true)
        self.TipImage.localEulerAngles = Vector3.New(0,0,180)
        self:OnRefresh()
    elseif self.state == 1 then
        self.mask_game:SetActive(false)
        self.TipImage.localEulerAngles = Vector3.zero
        PlayAnim(self,self.moveRectTrans.anchoredPosition3D,initPos)
        CryPlayAnim(self, self.cryRectTrans.anchoredPosition3D,cryInitPos)
    end
end

local function OnCreate(self)
    base.OnCreate(self)
    self.enemy_role_list = {}
    for i = 1, 3 do
        local enemy_role = {}
        enemy_role.head = EnemyRoleHead.New(self,"Back_EmemyInfo/Role"..i.."/Role1_Hero")
        enemy_role.head:OnCreate()
        enemy_role.buff = EnemyBuffList.New(self,"Back_EmemyInfo/Role"..i.."/Role1_Buff")
        enemy_role.buff:OnCreate(2)
        enemy_role.skill = {}
        for m = 1,2 do
            enemy_role.skill[m] = EnemyRoleSkill.New(self,"Back_EmemyInfo/Role"..i.."/Role1_Btn"..m)
            enemy_role.skill[m]:OnCreate()
        end
        enemy_role.game = UIUtil.FindTrans(self.transform,"Back_EmemyInfo/Role"..i).gameObject
        self.enemy_role_list[i] = enemy_role
    end
    self.clickBtn = self:AddComponent(UIButton,"Back_EmemyInfo/Click")
    self.clickBtn:SetOnClick(self,ClickArrow)
    self.clickBtn = self:AddComponent(UIButton,"Bg")
    self.clickBtn:SetOnClick(self,ClickArrow)
    self.mask_game = UIUtil.FindTrans(self.transform,"Bg").gameObject
    self.moveRectTrans = UIUtil.FindComponent(self.transform, typeof(CS.UnityEngine.RectTransform),"Back_EmemyInfo")
    self.arrow_trans = UIUtil.FindTrans(self.transform,"Back_EmemyInfo/EmemyInfo")
    self.TipImage = UIUtil.FindTrans(self.transform,"Back_EmemyInfo/EmemyInfo/TipImage")

    self.cryRectTrans = UIUtil.FindComponent(self.transform, typeof(CS.UnityEngine.RectTransform),"Cry")

    self.enemyResShow = {}
    for i = 1, 3 do
        local val_text = self:AddComponent(UIText,
                string.format("Cry/%s/%s_num",i,i))
        val_text:SetText("0")
        table.insert(self.enemyResShow,{text = val_text})

        --val_text = self:AddComponent(UIText,
        --        string.format("SystemPage/BottomMenuBar/Ememy/%s/%s_num_em",i,i))
        --add_cry = UIUtil.FindTrans(self.transform,string.format("SystemPage/BottomMenuBar/Ememy/%s/%s_add_em",i,i)).gameObject
        --red_cry = UIUtil.FindTrans(self.transform,string.format("SystemPage/BottomMenuBar/Ememy/%s/%s_red_em",i,i)).gameObject
        --add_cry:SetActive(false)
        --red_cry:SetActive(false)
        --table.insert(self.enemyResShow,{text = val_text,add_cry = add_cry,red_cry = red_cry})
    end

    self.enemy_cry_anim = UIUtil.FindTrans(self.transform,"ef_ui_fight_get crystal enemy").gameObject
    self.get_crystal_anim_num = {false,false,false}
    for i = 1, 3 do
        self.get_crystal_anim_num[i] = self:AddComponent(UIText,"ef_ui_fight_get crystal enemy/"..i)
    end
    self.enemy_cry_anim:SetActive(false)

end

local function UpdateRoleInfo(self)
    for i = 1, 3 do
        if self.total_list[i] ~= nil then
            self.enemy_role_list[i].game:SetActive(true)
            self.enemy_role_list[i].head:OnRefresh(self.total_list[i],self.enemy_cry,self.total_list[i].skill[3],self.total_list[i].callType)
            self.enemy_role_list[i].buff:OnRefresh(self.total_list[i].buff)
            for m = 1,2 do
                self.enemy_role_list[i].skill[m]:OnRefresh(self.total_list[i],self.total_list[i].skill[m],self.total_list[i].callType)
            end
        else
            self.enemy_role_list[i].game:SetActive(false)
        end
    end
    if self.state == 0 then
        PlayAnim(self,initPos,movePos)
        CryPlayAnim(self, cryInitPos,cryMovePos)
    end
end

-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self)
    --向服务器请求数据
    local msdId = MsgIDDefine.PBFIGHT_ENEMY_INFO_REQUEST
    local msdObj = MsgIDMap[msdId]()
    msdObj.type = 2
    NetManager:GetInstance():SendMessage(msdId,msdObj,function(msg_obj)
        if msg_obj.OpCode ~= 0 then
            Logger.Log("OnRecvPveStart出错了~")
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            return
        end
        self.total_list = {}
        local battle_role_config = DataUtil.GetData("battle_role_config")
        local skill_data = DataUtil.GetData("skill")
        if msg_obj.Packages.battleEntity ~= nil then
            for i, v in ipairs(msg_obj.Packages.battleEntity) do
                local role = {}
                if battle_role_config[v.templateId] ~= nil then
                    role.icon = battle_role_config[v.templateId].Head
                end
                role.hp = math.floor(v.hp)
                role.callType = v.crytalType
                role.callNum = math.floor(v.crytalCount)
                role.buff = {}
                if v.buffId ~= nil then
                    for m, n in ipairs(v.buffId) do
                        table.insert(role.buff,{id = n})
                    end

                end
                role.skill = {}
                if v.skills ~= nil then
                    for m, n in ipairs(v.skills) do
                        local skillData = skill_data[n.skillId]
                        if skillData ~= nil then
                            local skillAttr = 1
                            skillAttr = skillData.SkillType
                            local tempSkill = {id = n.skillId,icon = skillData.Icon,num = skillData.CrystalCount,skillType = 1,name = skillData.Name,extralCryType = 0,extralCryNum = 0}
                            tempSkill.cd = n.cd
                            tempSkill.maxcd = skillData.CD
                            tempSkill.level = n.level
                            tempSkill.breakLevel = n.breakLevel
                            if skillData.FireType == 2 then
                                tempSkill.skillType = 2
                            end
                            if skillAttr == 3 then
                                table.insert(role.skill,1,tempSkill)
                            elseif skillAttr == 1 and not v.isHost then
                                role.callNum = math.floor(tempSkill.num)
                                role.skill[3] = tempSkill
                            else
                                table.insert(role.skill,tempSkill)
                            end
                            tempSkill.extralCryType,tempSkill.extralCryNum = GetSkillCry(skill_data,n.skillId,1,role.callType)
                        end
                    end
                end
                self.total_list[v.position+1] = role
            end
        end
        UpdateRoleInfo(self)
    end)
end
--初始化设置
local function OnInit(self)
    self.moveRectTrans.anchoredPosition3D = initPos
    self.TipImage.localEulerAngles = Vector3.zero
    self.state = 1
    self.mask_game:SetActive(false)
    self.arrow_trans.gameObject:SetActive(true)
end

local function OnQuit(self)
    self.state = 2
    if self.tweener_flag ~= nil then
        LuaTweener.StopTweener(self.tweener_flag)
        self.tweener_flag = nil
    end
end
local function UpdateShowEnemy(self)
    for i = 1, 3 do
        if self.enemy_cry[i] >= 0 then
            self.enemyResShow[i].text:SetText(math.floor(self.enemy_cry[i]))
        else
            self.enemyResShow[i].text:SetText("0")
        end
    end
end

local function UpdateCry(self,cry,play_anim)
    if play_anim then
        local add = {0,0,0}
        if self.enemy_cry == nil then
            self.enemy_cry = {0,0,0}
        end
        local can_play = false
        for i = 1, 3 do
            add[i] = cry[i] - self.enemy_cry[i]
            if add[i] ~= 0 then
                can_play = true
            end
        end
        self.enemy_cry = cry
        if can_play then
            self.arrow_trans.gameObject:SetActive(false)
            PlayAnim(self, self.moveRectTrans.anchoredPosition3D,initPos,0.3,function()
                self.enemy_cry_anim:SetActive(true)
                for i = 1, 3 do
                    self.get_crystal_anim_num[i]:SetText(math.floor(add[i]))
                end
                LJAudioManger:GetInstance():PlayVoice("UI_Crystal_01")
                TimerManager:GetInstance():SimpleTimerArgs(2.5,function()
                    self.enemy_cry_anim:SetActive(false)
                    DataManager:GetInstance():Broadcast(DataMessageNames.ON_UIBATTLE_IN_START,2)
                    PlayAnim(self,initPos,battlePos,0.2)
                end,nil ,true)
                TimerManager:GetInstance():SimpleTimerArgs(1.7,function()
                    UpdateShowEnemy(self)
                end,nil ,true)
            end)
        else
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_UIBATTLE_IN_START,2)
            UpdateShowEnemy(self)
        end
    else
        self.enemy_cry = cry
        UpdateShowEnemy(self)
    end
end
BattleEnemyRoleInfo.UpdateCry = UpdateCry
BattleEnemyRoleInfo.OnQuit = OnQuit
BattleEnemyRoleInfo.OnInit = OnInit
BattleEnemyRoleInfo.OnRefresh = OnRefresh
BattleEnemyRoleInfo.OnCreate = OnCreate
return BattleEnemyRoleInfo