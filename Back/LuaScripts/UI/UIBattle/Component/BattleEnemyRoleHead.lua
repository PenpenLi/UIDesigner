---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 2019/5/15 10:58
---

local BattleEnemyRoleHead = BaseClass("BattleEnemyRoleHead", UIBaseContainer)
local base = UIBaseContainer
local BattleAssistFunction= require "GameLogic.BattleNew.BattleAssistFunction"
local function GetCrystalSpriteNameByCostType(type)
    if type == 1 then
        return "ui_dtex_Quality_032"
    elseif type == 2 then
        return "ui_dtex_Quality_033"
    elseif type == 3 then
        return "ui_dtex_Quality_034"
    else
        return "ui_dtex_Quality_032"
    end
end

local function OpenSkillWindow(self)
    if self.skill_paras ~= nil then
        self.view.skill_tip:OnRefresh(self.skill_paras,self.icon.transform.position,2)
    end

end

local function CloseSkillWindow(self)
    self.view.skill_tip:OnShowOrHide(false)
end

local function OnCreate(self)
    base.OnCreate(self)
    self.icon = self:AddComponent(UIImage,"Role1_Hero_Icon",AtlasConfig.DynamicTex)
    self.grayMat = self.icon:GetMat()
    self.crystal_img = self:AddComponent(UIImage,"Role1_Crystal/Role1_Crystal",AtlasConfig.DynamicTex)
    self.crystal_num = self:AddComponent(UIText,"Role1_Crystal/Role1_Crystal_Num")
    self.crystal_mask = self:AddComponent(UIImage,"Role1_Crystal/Role1_Mask",AtlasConfig.DynamicTex)
    self.crystal_game = UIUtil.FindTrans(self.transform,"Role1_Crystal").gameObject
    self.skill_icon_tri = self:AddComponent(UIEventTrigger,"Role1_Hero_Icon")
    self.extral_cry = self:AddComponent(UIText,"Extral_Cry")
    self.mask_img = self:AddComponent(UIImage,"Role1_Skill_Mask")
    self.crystal_forbid = self:AddComponent(UIImage,"Role1_Forbid")
    self.skill_icon_tri:SetOnLongPress(Bind(self,OpenSkillWindow),Bind(self,CloseSkillWindow),true)
end

-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self,data,cry,skill_data,costType)
    self.icon:SetSpriteName(data.icon)
    if data.hp > 0 then
        self.icon:SetMat(nil)
    else
        self.icon:SetMat(self.grayMat)
    end
    if data.callNum <= 0 then
        self.crystal_game:SetActive(false)
        self.extral_cry:SetText("")
    else
        self.crystal_game:SetActive(true)
        self.crystal_img:SetSpriteName(GetCrystalSpriteNameByCostType(data.callType))
        self.crystal_num:SetText("-"..math.floor(data.callNum))
        if cry ~= nil and cry[data.callType] ~= nil then
            if cry[data.callType] >= data.callNum then
                self.crystal_mask:SetFillVal(0)
            else
                self.crystal_mask:SetFillVal(1 - cry[data.callType]/data.callNum)
            end
        else
            self.crystal_mask:SetFillVal(0)
        end
        self.extral_cry:SetText("")
        if data.hp > 0 and skill_data ~= nil and data.cd ~= nil then
            self.mask_img.gameObject:SetActive(data.cd > 0)
            if skill_data.maxcd == 0 or skill_data.maxcd == skill_data.cd then
                self.mask_img:SetFillVal(0.95)
            else
                self.mask_img:SetFillVal(skill_data.cd/skill_data.maxcd)
            end
        else
            self.mask_img.gameObject:SetActive(false)
        end
    end
    if skill_data ~= nil then
        self.skill_paras = {cost = skill_data.num,name = skill_data.name,id = skill_data.id,level = skill_data.level,breakLevel = skill_data.breakLevel,costType = costType}
    end


end


BattleEnemyRoleHead.OnRefresh = OnRefresh
BattleEnemyRoleHead.OnCreate = OnCreate
return BattleEnemyRoleHead