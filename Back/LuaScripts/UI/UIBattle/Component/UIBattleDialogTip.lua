---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 2019/5/15 10:58
---

local UIBattleDialogTip = BaseClass("UIBattleDialogTip", UIBaseContainer)
local base = UIBaseContainer

local BattleFieldManager=require "GameLogic.BattleNew.Logic.Manager.BattleFieldManager"
local BattleAssistFunction= require "GameLogic.BattleNew.BattleAssistFunction"

local StaticMonsterBubbleData = DataUtil.GetData("monster_bubble")

-- 显示己方头上的提示框
local function ShowHeroTip(self)
    if self.showDialogNum == nil then
        self.showDialogNum = 0
    end
    local curLevel = MapData:GetInstance():GetCurSelectLevelId();
    if GuideGroup:GetInstance().Runing or BattleFieldManager:GetInstance().battleType ~= BattleEnum.BattleType.NORMAL or self.view.auto_battle == 1 or self.showDialogNum > 2 or self.view.ui_show_type ~= 1 or self.view.mask_game.activeInHierarchy or self.view.isPlayingEnterGameAnim then
        UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_HERO_DIALOG_TIP, false)
        return
    end
    --提示带守护灵对话框位置
    local posGroup = {}
    local transPos = {1, 0, 2}
    for i = 1, 3 do
        if self.data.hero[i] ~= nil and self.data.hero[i].hp > 0 and self.data.hero[i].type == 1 and self.data.hero[i].skill[3] == nil then
            table.insert(posGroup, transPos[i])
        end
    end

    --提示释放武灵技对话框
    local nameGroup = {}
    if curLevel >= 10105 and curLevel <= 10109 then
        for i = 1, 3 do
            if self.data.hero[i] ~= nil and self.data.hero[i].type == 2 then
                for m = 1, 2 do
                    if not self.view.ctrlSkills[i].dead and self.view.ctrlSkills[i].skill[m].showTip and not self.view.ctrlSkills[i].skill[m].selectGame.activeInHierarchy then
                        local skillName = self.data.hero[i].skill[m].name
                        table.insert(nameGroup, {skillName = skillName, pos = transPos[i]});
                    end
                end
            end
        end
    end
    if #nameGroup > 0 or #posGroup > 0 then
        self.showDialogNum = self.showDialogNum + 1
        local isShowWLJTip = Mathf.Random() > 0.5 and true or false
        if #posGroup == 0 then
            isShowWLJTip = true
        end
        if #nameGroup == 0 then
            isShowWLJTip = false
        end
        local showDialogPos = -1
        local showDialogText = ""
        if isShowWLJTip then
            local randName = Mathf.Random(#nameGroup)
            local tips = string.split(DataUtil.GetClientText(100132), "#")
            local randNum = Mathf.Random(#tips)
            showDialogText = string.format(tips[randNum],nameGroup[randName].skillName)
            showDialogPos = nameGroup[randName].pos
        else
            local tips = string.split(DataUtil.GetClientText(100133), "#")
            local randNum = Mathf.Random(#tips)
            showDialogText = tips[randNum]
            showDialogPos = posGroup[Mathf.Random(#posGroup)]
        end
        UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_HERO_DIALOG_TIP, true, showDialogPos, showDialogText)
    end
end

-- 显示敌方头上的提示框
local function ShowMonsterTip(self)
    UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_MONSTER_DIALOG_TIP, false)
    if GuideGroup:GetInstance().Runing or BattleFieldManager:GetInstance().battleType ~= BattleEnum.BattleType.NORMAL or self.view.auto_battle == 1 or self.view.select_skill_num > 0 or self.view.ui_show_type ~= 1 or self.view.mask_game.activeInHierarchy or self.view.isPlayingEnterGameAnim then
        return
    end
    local tips = {}
    for k, v in pairs(self.data.enemy) do
        local monsterData = DataUtil.GetData("monster")[v.id]
        if monsterData ~= nil and monsterData.Bubble ~= nil and v.hp > 0 then
            local tipList = {}
            for m, n in pairs(monsterData.Bubble) do
                local tagList = {}
                local bubbleData = StaticMonsterBubbleData[tonumber(n)]
                --判断target1条件
                if bubbleData.Target1 == 1 then
                    --自己
                    table.insert(tagList, v)
                elseif bubbleData.Target1 == 2 then
                    --友方（不包含自己）
                    for i, j in pairs(self.data.enemy) do
                        if j.id ~= v.id then
                            table.insert(tagList, j)
                        end
                    end
                elseif bubbleData.Target1 == 3 then
                    --我方（包含自己）
                    for i, j in pairs(self.data.enemy) do
                        table.insert(tagList, j)
                    end
                elseif bubbleData.Target1 == 4 then
                    --敌方
                    for i, j in pairs(self.data.hero) do
                        table.insert(tagList, j)
                    end
                elseif bubbleData.Target1 == 5 then
                    --场上所有
                    for i, j in pairs(self.data.hero) do
                        table.insert(tagList, j)
                    end
                    for i, j in pairs(self.data.enemy) do
                        table.insert(tagList, j)
                    end
                end

                if #tagList == 0 then
                    break
                end
                if #tagList > 1 then
                    --判断target2条件
                    if bubbleData.Target2 == 1 then
                        --常规（怪物自身对面）
                        local tag = nil
                        for i, j in pairs(self.data.hero) do
                            if (k == 1 and i == 3) or (k == 2 and i == 2) or (k == 3 and i == 1) then
                                tag = j
                                break
                            end
                        end
                        tagList = {}
                        if tag ~= nil then
                            table.insert(tagList, tag)
                        end
                    elseif bubbleData.Target2 == 2 then
                        --随机
                        local randTag = tagList[Mathf.Random(#tagList)]
                        tagList = {}
                        table.insert(tagList, randTag)
                    elseif bubbleData.Target2 == 4 then
                        --特殊标记
                        if bubbleData.Target3[1] == 1 then
                            -- 特殊buff
                            local tagEffectList = {}
                            for i, j in pairs(tagList) do
                                if bubbleData.Target3[2] > 0 and #j.effects > 0 then
                                    for a = 1, #j.effects do
                                        if j.effects[a].effectId == bubbleData.Target3[2] then
                                            table.insert(tagEffectList, j)
                                        end
                                    end
                                end
                            end
                            tagList = tagEffectList
                        elseif bubbleData.Target3[1] == 2 then
                            -- 生命百分比最低
                            local tag = tagList[1]
                            for i, j in pairs(tagList) do
                                if tag.battleRole.currentHp > j.battleRole.currentHp then
                                    tag = j
                                end
                            end
                            tagList = {}
                            table.insert(tagList, tag)
                        elseif bubbleData.Target3[1] == 3 then
                            -- 生命百分比最高
                            local tag = tagList[1]
                            for i, j in pairs(tagList) do
                                if tag.battleRole.currentHp < j.battleRole.currentHp then
                                    tag = j
                                end
                            end
                            tagList = {}
                            table.insert(tagList, tag)
                        elseif bubbleData.Target3[1] == 4 then
                            -- 攻击最高

                        end
                    end
                end

                if #tagList == 0 then
                    break
                end
                -- 判断触发条件
                local roundNum = math.floor((self.data.roundNum+1)/2)
                if bubbleData.ConId[1] == 100 then
                    -- 每回合概率触发
                    local randNum = Mathf.Random()
                    if bubbleData.ConParam[1][1] > randNum then
                        table.insert(tipList, {monster = v, bubble = bubbleData})
                    end
                elseif bubbleData.ConId[1] == 101 then
                    -- 第N回合触发
                    if bubbleData.ConParam[1][1] == roundNum then
                        table.insert(tipList, {monster = v, bubble = bubbleData})
                    end
                elseif bubbleData.ConId[1] == 102 then
                    -- 目标血量低于x%
                    for i, j in pairs(tagList) do
                        if j.battleRole.currentHp < bubbleData.ConParam[1][1] then
                            table.insert(tipList, {monster = v, bubble = bubbleData})
                            break
                        end
                    end
                elseif bubbleData.ConId[1] == 103 then
                    -- 目标血量高于x%
                    for i, j in pairs(tagList) do
                        if j.battleRole.currentHp > bubbleData.ConParam[1][1] then
                            table.insert(tipList, {monster = v, bubble = bubbleData})
                            break
                        end
                    end
                elseif bubbleData.ConId[1] == 104 then
                    -- 当前水晶数量≥召唤/绝技所需一半
                    local crytalType,crytalCount,nowCrytalCount = v.battleRole:GetCryCost()
                    if crytalType > 0 then
                        if nowCrytalCount >= crytalCount / 2 then
                            table.insert(tipList, {monster = v, bubble = bubbleData})
                        end
                    end
                elseif bubbleData.ConId[1] == 105 then
                    -- 目标带有特定buff
                    for i, j in pairs(tagList) do
                        if #j.effects > 0 then
                            for a = 1, #j.effects do
                                if j.effects[a].effectId == bubbleData.ConParam[1][1] or j.effects[a].effectId == bubbleData.ConParam[1][2] then
                                    table.insert(tipList, {monster = v, bubble = bubbleData})
                                end
                            end
                        end
                    end
                elseif bubbleData.ConId[1] == 106 then
                    -- 奇数回合时
                    if roundNum % 2 == 1 then
                        table.insert(tipList, {monster = v, bubble = bubbleData})
                    end
                elseif bubbleData.ConId[1] == 107 then
                    -- 偶数回合时
                    if roundNum % 2 == 0 then
                        table.insert(tipList, {monster = v, bubble = bubbleData})
                    end
                elseif bubbleData.ConId[1] == 108 then
                    -- 当目标带有正面/负面buff时
                    for i, j in pairs(tagList) do
                        if #j.effects > 0 then
                            for a = 1, #j.effects do
                                local effectData = DataUtil.GetData("skill_effect")[j.effects[a].effectId]
                                if effectData.SubType == bubbleData.ConParam[1][1] then
                                    table.insert(tipList, {monster = v, bubble = bubbleData})
                                end
                            end
                        end
                    end
                end
            end
            -- 一个怪物显示多个气泡，随机一个显示
            if #tipList > 0 then
                local tagTip = tipList[Mathf.Random(#tipList)]
                -- 判断有没有相同的气泡
                local isSome = false
                for i, j in pairs(tips) do
                    if j.bubble.ID == tagTip.bubble.ID then
                        isSome = true
                        break
                    end
                end
                if not isSome then
                    table.insert(tips, tagTip)
                end
            end
        end
    end
    for k, v in pairs(tips) do
        UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_MONSTER_DIALOG_TIP, true, v.monster.id, v.bubble.Contents)
    end
end

local function ShowHeroDirectionTip(self)
    if self.view.ui_show_type ~= 1 then--or self.view.mask_game.activeInHierarchy or self.view.isPlayingEnterGameAnim
        UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_HERO_DIRECTION_TIP, false)
        return
    end
    UIManager:GetInstance():Broadcast(UIMessageNames.UIBATTLE_HERO_DIRECTION_TIP, true)
end

local function OnCreate(self)
    base.OnCreate(self)
end

-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self, dialogType)
    self.data = self.view.initData
    if dialogType == nil then
        ShowHeroTip(self)
    end
    ShowMonsterTip(self)
    --ShowHeroDirectionTip(self)
end


UIBattleDialogTip.OnRefresh = OnRefresh
UIBattleDialogTip.OnCreate = OnCreate
UIBattleDialogTip.ShowHeroDirectionTip = ShowHeroDirectionTip
return UIBattleDialogTip