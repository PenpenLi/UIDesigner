---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LJ095.
--- DateTime: 2019/2/26 14:19
---

local MainCityCommonBtnComponent = BaseClass("MainCityCommonBtnComponent", UIBaseContainer);
local base = UIBaseContainer;

local main_btn_path = "mainBtn";
local main_btn_icon_path = "mainBtn/Image";
local bottom_btn_group_path = "BottomBtnGroup/BottomBtnGroup";
local right_btn_group_path = "RightBtnGroup";
local bag_btn_path = "BottomBtnGroup/BottomBtnGroup/BagBtn";
local mask_path = "mask";

local BtnType = {
    JLR_BTN = 1, --寄灵人
    SHL_BTN = 2, --守护灵
    WLJ_BTN = 3, --武灵技
    EQUIP_FORGE_BTN = 4, --装备锻造
    GL_BTN = 5, --感灵
    BAG_BTN = 6, --背包
    SCIENCE_BTN = 7, --科技
    ALLIANCE_BTN = 8, --联盟
    ARMY_GROUP_BTN = 9, --军团
}
local btnDic = { [1] = { BtnType.JLR_BTN, BtnType.SHL_BTN, BtnType.WLJ_BTN, BtnType.EQUIP_FORGE_BTN, BtnType.GL_BTN, BtnType.BAG_BTN },
                 [2] = { BtnType.JLR_BTN, BtnType.SHL_BTN, BtnType.GL_BTN, BtnType.SCIENCE_BTN, BtnType.ALLIANCE_BTN, BtnType.ARMY_GROUP_BTN } };--国战
--主界面按钮点击
local function OnMainBtnClick(self)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if self.isCanClick then
        self.isCanClick = false;

        if self.type == MainCityCommonBtnManager:GetInstance().MAIN_CITY_BTN_ENUM.MAIN_CITY then
            self.maskObj.transform.gameObject:SetActive(false)
        elseif self.type == MainCityCommonBtnManager:GetInstance().MAIN_CITY_BTN_ENUM.GUO_ZHAN then
            self.maskObj.transform.gameObject:SetActive(false)
        else
            self.maskObj.transform.gameObject:SetActive(self.btnState == 0)
        end
        local curPos = self.bottomBtnGroup.anchoredPosition3D;
        local targerPos = self.btnState == 1 and Vector3.New(curPos.x + 1500, curPos.y, curPos.z) or Vector3.New(curPos.x - 1500, curPos.y, curPos.z);
        if self.anim == nil then
            self.anim = LuaTweener.UIMoveTo(self.bottomBtnGroup, curPos, targerPos, self.intervalTime, EaseFormula.OutQuad, function()
                self.anim = nil
                self.isCanClick = true;
            end)
        end
        local curScale = self.bottomBtnGroup.transform.localScale;
        local finalScale = self.btnState == 1 and Vector3.New(1, 0.5, 1) or Vector3.New(1, 1, 1);
        if self.scalAnim == nil then
            self.anim = LuaTweener.UIScaleTo(self.bottomBtnGroup, curScale, finalScale, self.intervalTime, EaseFormula.OutQuad, function()
                self.scalAnim = nil
            end)
        end
        local scaleX = self.btnState == 1 and 1 or -1;
        self.mainBtnIcon.transform.localScale = Vector3.New(scaleX, 1, 1);

        self.btnState = 1 - self.btnState;
    end
end

--新抽卡按钮点击
local function OnGetNewCardBtnClick(self)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIGetNewCard)
end

--武灵技背包按钮点击
local function OnCellSkillBtnClick(self)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    UIManager:GetInstance():OpenWindow(UIWindowNames.UICellSkillPacket)
end
--背包按钮点击
local function OnBagBtnClick(self)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIBackpack)
end

--军团按钮
local function OnArmyGroupBtnClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UINationGuardianSoulForce, NationDefine.NATION_GUARDIAN_OPEN_TYPE.MAIN_OPEN_TYPE)
end

--联盟按钮
local function OnAllianceBtnClick(self)
    local unionID = UserData:GetInstance().nationUnionId
    if unionID == 0 then
        UIManager:GetInstance():OpenWindow(UIWindowNames.UINationAllianceList);
    else
        local function callBack(opCode, packages)
            UIManager:GetInstance():OpenWindow(UIWindowNames.UINationAllianceMain)
        end
        NationNetManager:GetInstance():NationUnionSimpleInfoRequest(unionID, callBack)
    end
end

--科技按钮
local function OnScienceBtnClick(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UINationScience)
end

--设置按钮的显示
local function SetBtnActive(self)
    local curPos = self.bottomBtnGroup.anchoredPosition3D;
    self.maskObj.gameObject:SetActive(false);


    --[[    if self.type ==  MainCityCommonBtnManager:GetInstance().MAIN_CITY_BTN_ENUM.MAIN_CITY then
            self.btnState=1;--1开启，0=关闭
        elseif self.type ==  MainCityCommonBtnManager:GetInstance().MAIN_CITY_BTN_ENUM.GUO_ZHAN then
            self.btnState=1;--1开启，0=关闭
        else
            self.btnState=0;--1开启，0=关闭
        end]]

    local targerPos = self.btnState == 1 and curPos or Vector3.New(curPos.x + 1500, curPos.y, curPos.z);
    self.bottomBtnGroup.anchoredPosition3D = targerPos;
    local scaleX = self.btnState == 1 and -1 or 1;
    self.mainBtnIcon.transform.localScale = Vector3.New(scaleX, 1, 1);
end
--通过按钮得key判断当前类型是否显示这个按钮
local function GetCurrentBtnCompIsNeedShow(self, btnKey)
    local btnMyTypeDict = btnDic[self.type]
    if self.__ArrayHasSameElement(btnMyTypeDict, btnKey) then
        return true
    else
        return false
    end
end
--通过类型设置按钮的显示隐藏
local function SetBtnActiveByType(self)
    local btnMyTypeDict = btnDic[self.type]
    for i, v in pairs(BtnType) do
        local oneBtnComp = self.btnCompTable[v]
        if oneBtnComp ~= nil then
            if self.__ArrayHasSameElement(btnMyTypeDict, v) then
                oneBtnComp.gameObject:SetActive(true);
            else
                oneBtnComp.gameObject:SetActive(false);
            end
        end
    end

end

--添加对呀的功能按钮列表
local function AddFunBtnListByFunId(self)
    self.funBtnList = {};
    self.funBtnList[204] = self.cellSkillBtn.transform.gameObject;
    self.funBtnList[318] = self.equipForgeBtn.transform.gameObject;
    self.funBtnList[302] = self.getNewCardBtn.transform.gameObject;--感灵
end

local function OnCreate(self, _windowName, _type, _btnInitState)
    base.OnCreate(self);
    self.btnState = _btnInitState == 1 and 0 or 1;
    self.type = _type;
    self.windowName = _windowName;
    self.maskObj = UIUtil.FindTrans(self.transform, mask_path);
    self.jlrcardBtn = self:AddComponent(UIButton, "BottomBtnGroup/BottomBtnGroup/jlr_card");
    self.jlrcardBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
        UIManager:GetInstance():OpenWindow(UIWindowNames.UICardList, true, true)
    end)

    self.shlcardBtn = self:AddComponent(UIButton, "BottomBtnGroup/BottomBtnGroup/shl_card");
    self.shlcardBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
        UIManager:GetInstance():OpenWindow(UIWindowNames.UICardList, true, false)
    end)
    self.equipForgeBtn = self:AddComponent(UIButton, "BottomBtnGroup/BottomBtnGroup/EquipForgeBtn");
    self.equipForgeBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
        UIManager:GetInstance():OpenWindow(UIWindowNames.UICardEquipmentMake);
    end)
    self.mainBtnIcon = UIUtil.FindTrans(self.transform, main_btn_icon_path);
    self.mainBtn = self:AddComponent(UIButton, main_btn_path);
    self.mainBtn:SetOnClick(Bind(self, OnMainBtnClick));
    self.bottomBtnGroup = UIUtil.FindComponent(self.transform, typeof(CS.UnityEngine.RectTransform), bottom_btn_group_path);
    self.rightBtnGroup = UIUtil.FindComponent(self.transform, typeof(CS.UnityEngine.RectTransform), right_btn_group_path);
    self.getNewCardBtn = self:AddComponent(UIButton, "BottomBtnGroup/BottomBtnGroup/GetNewCard");
    self.getNewCardBtn:SetOnClick(Bind(self, OnGetNewCardBtnClick));
    self.cellSkillBtn = self:AddComponent(UIButton, "BottomBtnGroup/BottomBtnGroup/CellSkillBtn");
    self.cellSkillBtn:SetOnClick(OnCellSkillBtnClick);
    self.bagBtn = self:AddComponent(UIButton, bag_btn_path);
    self.bagBtn:SetOnClick(OnBagBtnClick);

    --军团
    self.army_group_btn = self:AddComponent(UIButton, "BottomBtnGroup/BottomBtnGroup/armGroupBtn")
    self.army_group_btn:SetOnClick(Bind(self, OnArmyGroupBtnClick))
    --联盟
    self.alliance_btn = self:AddComponent(UIButton, "BottomBtnGroup/BottomBtnGroup/AlianceBtn")
    self.alliance_btn:SetOnClick(Bind(self, OnAllianceBtnClick))
    --科技
    self.science_btn = self:AddComponent(UIButton, "BottomBtnGroup/BottomBtnGroup/ScienceBtn")
    self.science_btn:SetOnClick(Bind(self, OnScienceBtnClick))
    --国战主界面部分按钮文字
    self.army_group_title = self:AddComponent(UIText, "BottomBtnGroup/BottomBtnGroup/armGroupBtn/ArmyGroupText")
    self.alliance_title = self:AddComponent(UIText, "BottomBtnGroup/BottomBtnGroup/AlianceBtn/AllianceText")
    self.science_title = self:AddComponent(UIText, "BottomBtnGroup/BottomBtnGroup/ScienceBtn/ScienceText")
    self.event_title = self:AddComponent(UIText, "BottomBtnGroup/BottomBtnGroup/EventBtn/EventText")
    self.shl_title = self:AddComponent(UIText, "BottomBtnGroup/BottomBtnGroup/shl_card/SHLText")
    self.jlr_title = self:AddComponent(UIText, "BottomBtnGroup/BottomBtnGroup/jlr_card/JLRText")
    self.new_card_title = self:AddComponent(UIText, "BottomBtnGroup/BottomBtnGroup/GetNewCard/GetNewCardText")

    self.btnCompTable = {}
    self.btnCompTable[BtnType.JLR_BTN] = self.jlrcardBtn
    self.btnCompTable[BtnType.SHL_BTN] = self.shlcardBtn
    self.btnCompTable[BtnType.WLJ_BTN] = self.cellSkillBtn
    self.btnCompTable[BtnType.EQUIP_FORGE_BTN] = self.equipForgeBtn
    self.btnCompTable[BtnType.GL_BTN] = self.getNewCardBtn
    self.btnCompTable[BtnType.BAG_BTN] = self.bagBtn
    self.btnCompTable[BtnType.SCIENCE_BTN] = self.science_btn
    self.btnCompTable[BtnType.ALLIANCE_BTN] = self.alliance_btn
    self.btnCompTable[BtnType.ARMY_GROUP_BTN] = self.army_group_btn


    --国战主界面部分按钮
    --self.nation_btn_list={self.jlrcardBtn,self.shlcardBtn,self.getNewCardBtn,self.event_btn,self.science_btn,self.alliance_btn,self.army_group_btn}
    --self.btnList={self.jlrcardBtn,self.shlcardBtn,self.getNewCardBtn,self.cellSkillBtn,self.equipForgeBtn, self.bagBtn};

    --local BtnType={
    --    JLR_BTN=1,--寄灵人
    --    SHL_BTN=2,--守护灵
    --    WLJ_BTN=3,--武灵技
    --    EQUIP_FORGE_BTN=4,--装备锻造
    --    GL_BTN=5,--感灵
    --    BAG_BTN=6,--背包
    --    SCIENCE_BTN=7,--科技
    --    ALLIANCE_BTN=9,--联盟
    --    ARMY_GROUP_BTN=10,--军团
    --}



    SetBtnActiveByType(self);
    SetBtnActive(self)

    self.isCanClick = true;
    self.intervalTime = 0.5;
    self.skill_red = UIUtil.FindTrans(self.transform, "BottomBtnGroup/BottomBtnGroup/CellSkillBtn/redpoint").gameObject
    self.jlr_red = UIUtil.FindTrans(self.transform, "BottomBtnGroup/BottomBtnGroup/jlr_card/redpoint").gameObject
    self.shl_red = UIUtil.FindTrans(self.transform, "BottomBtnGroup/BottomBtnGroup/shl_card/redpoint").gameObject

    self.nation_event_group_red = UIUtil.FindTrans(self.transform, "BottomBtnGroup/BottomBtnGroup/EventBtn/redpoint").gameObject
    self.nation_union_group_red = UIUtil.FindTrans(self.transform, "BottomBtnGroup/BottomBtnGroup/AlianceBtn/redpoint").gameObject
    self.nation_army_group_red = UIUtil.FindTrans(self.transform, "BottomBtnGroup/BottomBtnGroup/armGroupBtn/redpoint").gameObject

    self.easyfunc = {}
    self.easyfunc[1] = Bind(self, self.EventOpen)
    self:EventOpen()
    DataManager:GetInstance():AddListener(DataMessageNames.MainUILockDataNotice, self.easyfunc[1])
    self.openfunc = {};
    self.openfunc[1] = Bind(self, self.ShowFunBtn)
    UIManager:GetInstance():AddListener(UIMessageNames.UI_SHOW_LEVEL_MAIN, self.openfunc[1]);
    UIManager:GetInstance():AddListener(UIMessageNames.UI_MAIN_CTIY_NEW_FUN_OPEN, self.openfunc[1])
    AddFunBtnListByFunId(self);
end

--显示开启的功能按钮
local function ShowFunBtn(self, _id)
    if self.funBtnList[_id] then
        print("---打开按钮" .. _id)
        self.funBtnList[_id].gameObject:SetActive(true);
    end
end

local function EventOpen (self)
    --检查是否打开
    local state, type, des = UnlockData:GetInstance():GetLockDataState(203)
    -- 现在显示不显示这个按钮
    if self:GetCurrentBtnCompIsNeedShow(BtnType.WLJ_BTN) then
        state, type, des = UnlockData:GetInstance():GetLockDataState(204)
        self.cellSkillBtn.gameObject:SetActive(state)
    end

    if self:GetCurrentBtnCompIsNeedShow(BtnType.GL_BTN) then
        state, type, des = UnlockData:GetInstance():GetLockDataState(302)
        self.getNewCardBtn.gameObject:SetActive(state)
    end

    if self:GetCurrentBtnCompIsNeedShow(BtnType.EQUIP_FORGE_BTN) then
        state, type, des = UnlockData:GetInstance():GetLockDataState(318)
        self.equipForgeBtn.gameObject:SetActive(state)
    end

end
local function RefreshRedPoint(self)
    self.skill_red:SetActive(RedPointData:GetInstance():GetRedState(RedPointData:GetInstance().RedName.Skill_Data))
    self.jlr_red:SetActive(RedPointData:GetInstance():GetRedState(RedPointData:GetInstance().RedName.JLR_Red))
    self.shl_red:SetActive(RedPointData:GetInstance():GetRedState(RedPointData:GetInstance().RedName.SHL_Red))

    self.nation_union_group_red:SetActive(
            RedPointData:GetInstance():GetRedState(
                    RedPointData:GetInstance().RedName.Nation_Union_Red))
    self.nation_event_group_red:SetActive(
            RedPointData:GetInstance():GetRedState(
                    RedPointData:GetInstance().RedName.Nation_Event_Red))
    self.nation_army_group_red:SetActive(
            RedPointData:GetInstance():GetRedState(
                    RedPointData:GetInstance().RedName.Nation_JunTuan_Red))
    --后续更改i

end

--设置功能按钮的显示隐藏
local function SetFunBtnListActive(self,_active)
    --先隐藏将要开启的新功能按钮
    if UnlockData:GetInstance().funOpenState > 0 then
        local funOpenList = UnlockData:GetInstance().newOpenFunList;
        for i, v in ipairs(funOpenList) do
            if self.funBtnList[v.id] then
                print("---关闭按钮" .. v.id)
                self.funBtnList[v.id].gameObject:SetActive(_active);
                local canvasGroup=UIUtil.FindComponent(self.funBtnList[v.id].gameObject.transform,self.funBtnList[v.id].gameObject:GetComponent(typeof(CS.UnityEngine.CanvasGroup),""));
                canvasGroup.alpha=0;
            end
        end
    end
end

local function OnEnable(self)
    -- self.army_group_title:SetText()--军团
    self.alliance_title:SetText(DataUtil.GetClientText(200055))--联盟
    self.science_title:SetText(DataUtil.GetClientText(200204))--科技
    self.event_title:SetText(DataUtil.GetClientText(200306))--记事
    self.shl_title:SetText(DataUtil.GetClientText(100116))--守护灵
    self.jlr_title:SetText(DataUtil.GetClientText(100115))--寄灵人


    --先隐藏将要开启的新功能按钮
    SetFunBtnListActive(self,false);
    if GuideManager:GetInstance().finishGroup then
        if UserData:GetInstance().pLevel == 1 and table.keyof(GuideManager:GetInstance().finishGroup, 9) == nil then
            self.funBtnList[302].gameObject:SetActive(false)
        end
    else
        self.funBtnList[302].gameObject:SetActive(false)
    end
    --  self.new_card_title:SetText()--感灵
end

local function Refresh()

end
local function OnDestroy(self)
    DataManager:GetInstance():RemoveListener(DataMessageNames.MainUILockDataNotice, self.easyfunc[1])
    UIManager:GetInstance():RemoveListener(UIMessageNames.UI_MAIN_CTIY_NEW_FUN_OPEN, self.openfunc[1])
end

local function __ArrayHasSameElement(list, elem)
    for j, v in ipairs(list) do
        if v == elem then
            return true
        end
    end
    return false
end

--设置主城按钮的初始状态为打开状态
local function SetMainInitBtnState(self)
    self.btnState = 1
    SetBtnActive(self)
end

MainCityCommonBtnComponent.SetFunBtnListActive=SetFunBtnListActive;
MainCityCommonBtnComponent.SetMainInitBtnState = SetMainInitBtnState;
MainCityCommonBtnComponent.RefreshRedPoint = RefreshRedPoint
MainCityCommonBtnComponent.OnCreate = OnCreate;
MainCityCommonBtnComponent.Refresh = Refresh;
MainCityCommonBtnComponent.OnDestroy = OnDestroy
MainCityCommonBtnComponent.ShowFunBtn = ShowFunBtn;
MainCityCommonBtnComponent.EventOpen = EventOpen
MainCityCommonBtnComponent.__ArrayHasSameElement = __ArrayHasSameElement
MainCityCommonBtnComponent.GetCurrentBtnCompIsNeedShow = GetCurrentBtnCompIsNeedShow

MainCityCommonBtnComponent.OnEnable = OnEnable
return MainCityCommonBtnComponent