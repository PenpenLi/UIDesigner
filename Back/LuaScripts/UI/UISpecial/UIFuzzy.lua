---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 2019/1/3 15:17
---
local UIFuzzy = BaseClass("UIFuzzy", Singleton)

local function __init(self)
    self.fuzzy_name = {}
    self.load_state = 0
end
local function __delete(self)
    self.fuzzy_name = nil
    self.load_state = 0
end

local function CheckFuzzy(self)
    if table.count(self.fuzzy_name)>0 then
        if self.load_state == 2 then
            return
        elseif self.load_state == 1 then
            return
        end
        self.load_state = 1
        GameObjectPool:GetInstance():GetGameObjectAsync("UI/Prefabs/Common/FuzzyLayer.prefab",function (go)
            if table.count(self.fuzzy_name)==0 then
                self.load_state = 0
                GameObjectPool:GetInstance():RecycleGameObject("UI/Prefabs/Common/FuzzyLayer.prefab",go)
            else
                self.load_state = 2
                if not IsNull(go) then
                    self.fuzzy_game = go
                end
            end
        end)
    elseif table.count(self.fuzzy_name)==0 then
        if self.load_state == 2 then
            self.load_state = 0
            GameObjectPool:GetInstance():RecycleGameObject("UI/Prefabs/Common/FuzzyLayer.prefab",self.fuzzy_game)
        end
    end
end

local function CloseFuzzy(self,type)
    table.removebyvalue(self.fuzzy_name,type)
    CheckFuzzy(self)
end

local function ShowFuzzy(self,name)
    if not table.indexof(self.fuzzy_name,name) then
        table.insert(self.fuzzy_name,name)
    end
    CheckFuzzy(self)
end

UIFuzzy.__init = __init
UIFuzzy.__delete = __delete
UIFuzzy.CloseFuzzy = CloseFuzzy
UIFuzzy.ShowFuzzy = ShowFuzzy
return UIFuzzy