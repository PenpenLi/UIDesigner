---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LJ095.
--- DateTime: 2019/3/2 10:57
---


local UINickNameView = BaseClass("UINickNameView", UIBaseView)
local base = UIBaseView

local close_btn_path = "ParentLayout";
local cancel_btn_path = "ParentLayout/CancelBtn";
local center_btn_path = "ParentLayout/CertainBtn";
local input_text_path = "ParentLayout/InputField";
local static_name = DataUtil.GetData("name")
local utf8 = require("Common.Tools.utf8")
local item_data = DataUtil.GetData("item")
local global_data = DataUtil.GetData("global")
--保留 中文英文和数字
local function filter_spec_chars(s)
    local ss = {}
    local k = 1
    while true do
        if k > #s then
            break
        end
        local c = string.byte(s, k)
        if not c then
            break
        end
        if c < 192 then
            if (c >= 48 and c <= 57) or (c >= 65 and c <= 90) or (c >= 97 and c <= 122) then
                table.insert(ss, string.char(c))
            end
            k = k + 1
        elseif c < 224 then
            k = k + 2
        elseif c < 240 then
            if c >= 228 and c <= 233 then
                local c1 = string.byte(s, k + 1)
                local c2 = string.byte(s, k + 2)
                if c1 and c2 then
                    local a1, a2, a3, a4 = 128, 191, 128, 191
                    if c == 228 then
                        a1 = 184
                    elseif c == 233 then
                        a2, a4 = 190, c1 ~= 190 and 191 or 165
                    end
                    if c1 >= a1 and c1 <= a2 and c2 >= a3 and c2 <= a4 then
                        table.insert(ss, string.char(c, c1, c2))
                    end
                end
            end
            k = k + 3
        elseif c < 248 then
            k = k + 4
        elseif c < 252 then
            k = k + 5
        elseif c < 254 then
            k = k + 6
        end
    end
    return table.concat(ss)
end
local function isEmoji(newName)
    local len = utf8.len(newName)--utf8解码长度
    for i = 1, len do
        local str = utf8.sub(newName, i, i)
        local byteLen = string.len(str)--编码占多少字节
        if byteLen > 3 then
            --超过三个字节的必须是emoji字符啊
            return true
        end
        if byteLen == 3 then
            if string.find(str, "[\226][\132-\173]") or string.find(str, "[\227][\128\138]") then
                return true--过滤部分三个字节表示的emoji字符，可能是早期的符号，用的还是三字节，坑。。。这里不保证完全正确，可能会过滤部分中文字。。。
            end
        end
        if byteLen == 1 then
            local ox = string.byte(str)
            if (33 <= ox and 47 >= ox) or (58 <= ox and 64 >= ox) or (91 <= ox and 96 >= ox) or (123 <= ox and 126 >= ox) or (str == "　") then
                return true--过滤ASCII字符中的部分标点，这里排除了空格，用编码来过滤有很好的扩展性，如果是标点可以直接用%p匹配。
            end
        end
    end

    return false
end

local function OnValueChangedByInput(self)
    local text = self.inputText:GetText()--filter_spec_chars()
    --text = CS.CommonUtils.PassEmojStr(text)
    if string.isNilOrEmpty(text) then
        return
    end
    if utf8.charactersLength(text) > 10 then
        self.inputText:SetText(self.nameStrTemp)
    else
        self.nameStrTemp = text
    end
end

local function RandomName(self)
    local max = #static_name
    local name = ""
    local function RandomNameByType(type)
        --随机
        math.randomseed(tostring(os.time()):reverse():sub(1, 6))
        --print("随机种子"..tostring(os.time()):reverse():sub(1, 6))
        local num = type == 1 and Mathf.Random(self.fam_name_num) or Mathf.Random(self.name_num)
        if type == 1 then
            return static_name[num].FirstName and static_name[num].FirstName or ""
        elseif type == 2 then
            return static_name[num].LastName
        end
    end
    name = RandomNameByType(1) .. RandomNameByType(2)
    return name
end
local function OnCreate(self)
    base.OnCreate(self)
    self.cost_obj = UIUtil.FindTrans(self.transform, "ParentLayout/CostObj")
    self.free_obj = UIUtil.FindTrans(self.transform, "ParentLayout/FreeObj")
    self.closeBtn = self:AddComponent(UIButton, close_btn_path);
    self.cancelBtn = self:AddComponent(UIButton, cancel_btn_path);
    self.centerBtn = self:AddComponent(UIButton, center_btn_path)
    self.cost = self:AddComponent(UIText, "ParentLayout/CostObj/CostNum");
    self.cost.img = self:AddComponent(UIImage, "ParentLayout/CostObj/Image", AtlasConfig.DynamicTex)
    self.replace_text = self:AddComponent(UIText, "ParentLayout/InputField/Placeholder")
    self.inputText = self:AddComponent(UIInput, input_text_path);
    self.closeBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_Cancel")
        UIManager:GetInstance():CloseWindow(UIWindowNames.UINickNameTip)
    end);
    self.cancelBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_Cancel")
        UIManager:GetInstance():CloseWindow(UIWindowNames.UINickNameTip)
    end);
    self.inputText:SetOnValueChanged(function()
        OnValueChangedByInput(self)
    end)
    self.random_btn = self:AddComponent(UIButton, "ParentLayout/Random")
    self.random_btn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
        if self.can_btn then
            self.can_btn = false
            TimerManager:GetInstance():SimpleTimerArgs(0.5, function()
                self.can_btn = true
            end, nil, true)
            self.nameStrRan = RandomName(self)
            self.replace_text:SetText(self.nameStrRan)
            self.inputText:SetText("")
        else
            UISpecial:GetInstance():UITipText(DataUtil.GetClientText(100050))
        end

    end)

    self.centerBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
        local str = string.isNilOrEmpty(self.inputText:GetText()) and self.replace_text:GetText() or self.inputText:GetText()
        if string.isNilOrEmpty(str) then
            UISpecial:GetInstance():UITipText("名字不能为空")
            return
        elseif string.match(str, "%s+") then
            UISpecial:GetInstance():UITipText("名字中不能有空格")
            return
        elseif str == UserData:GetInstance().name then
            UISpecial:GetInstance():UITipText("不能重复命名")
            return
        end
        local have_num = BackpackData:GetInstance():GetItemNumById(CoinDefine.Diamond)
        if have_num >= self.cost_value then
            self:SendMsgCreatePlayerName(str)
        else
            UISpecial:GetInstance():UITipText(DataUtil.GetClientText(100081))
        end
    end);
end
local function SendMsgCreatePlayerName(self, str, _call_back)
    local msgID = MsgIDDefine.PBUSER_SET_USER_NAME_REQUEST
    local msgObj = MsgIDMap[msgID]()
    msgObj.name = str
    NetManager:GetInstance():SendMessage(msgID, msgObj, function(msg_obj)
        if msg_obj.OpCode ~= 0 then
            Logger.Log("screen_warCell_response出错~")
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            self.replace_text:SetText("")
            self.nameStrTemp = ""
        else
            UserData:GetInstance().name = str
            UserData:GetInstance().changeNameNum = UserData:GetInstance().changeNameNum + 1
            BackpackData:GetInstance():UpdateItemData(CoinDefine.Diamond, -self.cost_value)
            if _call_back ~= nil then
                _call_back()
            end
            UIManager:GetInstance():CloseWindow(UIWindowNames.UINickNameTip)
        end
    end)
end
local function GetFNameNum(self)
    for i = 1, self.name_num do
        if static_name[i].FirstName == nil then
            return i
        end
    end
end
local function OnEnable(self)
    base.OnEnable(self);
    self.can_btn = true
    self.name_num = #static_name
    self.fam_name_num = GetFNameNum(self)
    self.cost.img:SetSpriteName(item_data[CoinDefine.Diamond].Icon)
    self.cost_table = {}
    self.cost_table = global_data[117].valueNA
    self:SetChangeNameValue()
    self.nameStrRan = UserData:GetInstance().name
    self.replace_text:SetText(self.nameStrRan)
    self.nameStrTemp = ""
    self.inputText:SetText(self.nameStrTemp)
end
local function SetChangeNameValue(self)
    local num = UserData:GetInstance().changeNameNum
    self.cost_value = UserData:GetInstance().changeNameNum >= #self.cost_table and self.cost_table[#self.cost_table] or self.cost_table[num + 1]
    self.cost_obj.gameObject:SetActive(self.cost_value > 0)
    self.free_obj.gameObject:SetActive(self.cost_value <= 0)
    local have_num = BackpackData:GetInstance():GetItemNumById(CoinDefine.Diamond)
    self.cost:SetText(have_num >= self.cost_value and "<color=#FFFFFFFF>" .. self.cost_value .. "</color>" or "<color=#EC6B60FF>" .. self.cost_value .. "</color>")
end
UINickNameView.SetChangeNameValue = SetChangeNameValue
UINickNameView.SendMsgCreatePlayerName = SendMsgCreatePlayerName
UINickNameView.OnCreate = OnCreate;
UINickNameView.OnEnable = OnEnable;
return UINickNameView;
