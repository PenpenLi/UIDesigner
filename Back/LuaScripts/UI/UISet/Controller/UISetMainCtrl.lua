---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LJ095.
--- DateTime: 2019/2/27 17:53
---
local UISetMainCtrl = BaseClass("UISetMainCtrl", UIBaseCtrl)

--更换头像和头像框按钮点击
local function ChangeIconBtnClick(self)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    local head_info_id = MsgIDDefine.PBUSER_HEAD_LIST_REQUEST
    NetManager:GetInstance():SendMessage(head_info_id,nil,function (msg_obj)
        if msg_obj.OpCode ~= 0 then
            Logger.Log("ERROR PBUSER_HEAD_LIST_REQUEST~~")
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            return
        else
            Logger.Log("--------------------"..table.dump(msg_obj.Packages.headFrames,10))
            local data = {}
            for i, v in ipairs(msg_obj.Packages.headFrames) do
               table.insert(data,v)
            end
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIHeadMain,data)
        end
    end)

end
--音乐toggle点击
local function OnMusicToggleValueChange(self,slider,boo)
    if self.view.initview then
        return
    end
    LJAudioManger:GetInstance():SetAudioMute(1,boo)
    UIManager:GetInstance():Broadcast(UIMessageNames.ON_MUSIC_MUTE_SET,nil,boo)
    if slider ~= nil then
        slider:SetInteractable(boo)
    end
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
end

--音效toggle点击
local function OnYinxiaoToggleValueChange(self,slider,boo)
    if self.view.initview then
        return
    end
    LJAudioManger:GetInstance():SetAudioMute(2,boo)
    if slider ~= nil then
        slider:SetInteractable(boo)
    end
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
end

--语音toggle点击
local function OnYuYinToggleValueChange(self,slider,boo)
    if self.view.initview then
        return
    end
    LJAudioManger:GetInstance():SetAudioMute(3,boo)
    if slider ~= nil then
        slider:SetInteractable(boo)
    end
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
end

--画质改变
local function OnHuamianQualityToggleValueChange(self,boo)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if self.view.initview then
        return
    end
    if not boo then
        QualityManager:GetInstance():SetToLowQuality();
    else
        QualityManager:GetInstance():SetToHighQuality();
    end
    CS.UnityEngine.PlayerPrefs.SetInt("huamian_quality_state", boo and 1 or 0);
    UIManager:GetInstance():Broadcast(UIMessageNames.UI_SETTTING_ONDATAREFRESH)
end



--local function OnModelValueChangeSetRTLit(self,boo)
--    Logger.Log("OnModelValueChangeSetRTLit: ",boo);
--    QualityManager:GetInstance():SetRTLit(boo)
--    QualityManager:GetInstance():ApplyConfig()
--end
local function OnModelValueChangeSetShadow(self,boo)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if self.view.initview then
        return
    end
    Logger.Log("OnModelValueChangeSetShadow: ",boo);
    QualityManager:GetInstance():SetShadow(boo)
    QualityManager:GetInstance():ApplyConfig()
end
--local function OnModelValueChangeSetDirLM(self,boo)
--    Logger.Log("OnModelValueChangeSetDirLM: ",boo);
--    QualityManager:GetInstance():SetDirLM(boo)
--    QualityManager:GetInstance():ApplyConfig()
--end
local function OnModelValueChangeSceneEffect(self,boo)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if self.view.initview then
        return
    end
    Logger.Log("OnModelValueChangeSceneEffect: ",boo);
    QualityManager:GetInstance():SetSceneEffect(boo)
    QualityManager:GetInstance():ApplyConfig()
end
--local function OnModelValueChangeSetPostProcessing(self,boo)
--    Logger.Log("OnModelValueChangeSetPostProcessing: ",boo);
--    QualityManager:GetInstance():SetPostProcessing(boo)
--    QualityManager:GetInstance():ApplyConfig()
--end
local function OnModelValueChangeSetBloom(self,boo)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if self.view.initview then
        return
    end
    Logger.Log("OnModelValueChangeSetBloom: ",boo);
    QualityManager:GetInstance():SetBloom(boo)
    QualityManager:GetInstance():ApplyConfig()
end
local function OnModelValueChangeSetMSAA(self,boo)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if self.view.initview then
        return
    end
    Logger.Log("OnModelValueChangeSetMSAA: ",boo);
    --QualityManager:GetInstance():SetMSAA(boo)
    --接口修改为SetAAType(int)
    if boo then
        QualityManager:GetInstance():SetAAType(1)
    else
        QualityManager:GetInstance():SetAAType(0)
    end
    QualityManager:GetInstance():ApplyConfig()
end
local function OnModelValueChangeSetOutline(self,boo)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if self.view.initview then
        return
    end
    Logger.Log("OnModelValueChangeSetOutline: ",boo);
    QualityManager:GetInstance():SetOutline(boo)
    QualityManager:GetInstance():ApplyConfig()
end
--local function OnModelValueChangeSetAO(self,boo)
--    Logger.Log("OnModelValueChangeSetAO: ",boo);
--    QualityManager:GetInstance():SetAO(boo)
--    QualityManager:GetInstance():ApplyConfig()
--end
--local function OnModelValueChangeSetNormalMap(self,boo)
--    Logger.Log("OnModelValueChangeSetNormalMap: ",boo);
--    QualityManager:GetInstance():SetNormalMap(boo)
--    QualityManager:GetInstance():ApplyConfig()
--end


--自动播放对话
local function OnAutoplayDialogueToggleValueChange(self, boo)
    CS.UnityEngine.PlayerPrefs.SetInt("autoplay_dialogue_state", boo and 1 or 0);
end

--音乐滑动条值改变监测
local function OnMusicSliderValueChange(self,value)
    LJAudioManger:GetInstance():SetAudioVolume(value,1)
end

--音效滑动条值改变监测
local function OnYinXiaoSliderValueChange(self,value)
    LJAudioManger:GetInstance():SetAudioVolume(value,2)
end

--语音滑动条值改变监测
local function OnYuYinSliderValueChange(self,value)
    Logger.Log("语音滑条的值是",value);
    LJAudioManger:GetInstance():SetAudioVolume(value,3)
end

--语音包下载按钮点击
local function OnVoicePackageBtnClick(self)

end

--用户中心按钮点击
local function OnUserCenterBtnClick(self)

end

--复制名字按钮点击
local function OnCopyNameBtnClick(self)

end

--语音聊天toggle监测事件
local function OnVoiceChatToggleValueChange(self,boo)
    Logger.Log("语音聊天toggle值",boo);
end

--截图分享toggle监测事件
local function OnScreenshotToggleValueChange(self,boo)
    Logger.Log("截图分享toggle值",boo);
end

--体力恢复toggle监测事件
local function OnStaminToggleValueChange(self,boo)
    Logger.Log("体力值回满toggle值",boo);
end

--攻城toggle监测事件
local function OnAttackCityToggleValueChange(self,boo)
    Logger.Log("攻城toggle值",boo);
end

--直播toggle监测事件
local function OnDirectPlayToggleValueChange(self,boo)
    Logger.Log("直播toggl值",boo);
end
--简化三连击
local function OnSimpleThreeBeat(self,boo)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    if self.view.initview then
        return
    end
    Logger.Log("OnSimpleThreeBeat",boo);
    if boo then
        CS.UnityEngine.PlayerPrefs.SetInt("simple_three_beat",1)
    else
        CS.UnityEngine.PlayerPrefs.SetInt("simple_three_beat",0)
    end

end
UISetMainCtrl.OnSimpleThreeBeat = OnSimpleThreeBeat
UISetMainCtrl.ChangeIconBtnClick = ChangeIconBtnClick;
UISetMainCtrl.OnMusicToggleValueChange=OnMusicToggleValueChange;
UISetMainCtrl.OnYinxiaoToggleValueChange=OnYinxiaoToggleValueChange;
UISetMainCtrl.OnYuYinToggleValueChange=OnYuYinToggleValueChange;
UISetMainCtrl.OnMusicSliderValueChange=OnMusicSliderValueChange;
UISetMainCtrl.OnYinXiaoSliderValueChange=OnYinXiaoSliderValueChange;
UISetMainCtrl.OnYuYinSliderValueChange=OnYuYinSliderValueChange;
UISetMainCtrl.OnVoicePackageBtnClick=OnVoicePackageBtnClick;
UISetMainCtrl.OnUserCenterBtnClick=OnUserCenterBtnClick;
UISetMainCtrl.OnCopyNameBtnClick=OnCopyNameBtnClick;
UISetMainCtrl.OnVoiceChatToggleValueChange=OnVoiceChatToggleValueChange;
UISetMainCtrl.OnScreenshotToggleValueChange=OnScreenshotToggleValueChange;
UISetMainCtrl.OnStaminToggleValueChange=OnStaminToggleValueChange;
UISetMainCtrl.OnAttackCityToggleValueChange=OnAttackCityToggleValueChange;
UISetMainCtrl.OnDirectPlayToggleValueChange=OnDirectPlayToggleValueChange;
UISetMainCtrl.OnAutoplayDialogueToggleValueChange=OnAutoplayDialogueToggleValueChange;
UISetMainCtrl.OnHuamianQualityToggleValueChange=OnHuamianQualityToggleValueChange
--UISetMainCtrl.OnModelValueChangeSetRTLit = OnModelValueChangeSetRTLit
UISetMainCtrl.OnModelValueChangeSetShadow = OnModelValueChangeSetShadow
--UISetMainCtrl.OnModelValueChangeSetDirLM = OnModelValueChangeSetDirLM
UISetMainCtrl.OnModelValueChangeSceneEffect = OnModelValueChangeSceneEffect
--UISetMainCtrl.OnModelValueChangeSetPostProcessing = OnModelValueChangeSetPostProcessing
UISetMainCtrl.OnModelValueChangeSetBloom = OnModelValueChangeSetBloom
UISetMainCtrl.OnModelValueChangeSetMSAA = OnModelValueChangeSetMSAA
UISetMainCtrl.OnModelValueChangeSetOutline = OnModelValueChangeSetOutline
--UISetMainCtrl.OnModelValueChangeSetAO = OnModelValueChangeSetAO
--UISetMainCtrl.OnModelValueChangeSetNormalMap = OnModelValueChangeSetNormalMap

return UISetMainCtrl;