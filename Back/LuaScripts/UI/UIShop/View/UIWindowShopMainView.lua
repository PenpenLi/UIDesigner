---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LJ095.
--- DateTime: 2018/11/26 14:07
---
local UIWindowShopMainView = BaseClass("UIWindowShopMainView", UIBaseView)
local base = UIBaseView

local UIShopWrapNormalItem = require "UI.UIShop.Component.UIShopWrapNormalItem"

local ResourceBarComponentManager=require("UI.UIResourceBar.ResourceBarComponentManager");

local sub_btn_group_path="ParentLayout/SubBtnGroup";
local sub_btn_select_path="ParentLayout/SubBtnSelect";
local shop_btn_group_path="ParentLayout/ShopBtnGroup/ScrollRect/Grid";
local shop_btn_select_path="ParentLayout/ShopBtnGroup/SelectBtn";
local shop_item_group_path="ParentLayout/ShopScroll/Grid"
local shop_select_text_path="ParentLayout/ShopBtnGroup/SelectBtn/SelectText";
local jls_exchange_btn_path="ParentLayout/GetJlStoneBtn";
local shop_btn_select_double1_path="ParentLayout/ShopBtnGroup/SelectBtn/SelectdoubleText";
local shop_btn_select_double2_path="ParentLayout/ShopBtnGroup/SelectBtn/SelectdoubleText/SelectdoubleText2";

--静态文本
local tip_obj_text_path="ParentLayout/HeroImg/TipObj/TipObjText";
local stone_btn_text_path="ParentLayout/GetJlStoneBtn/stoneBtnText";
local tip_text_path="ParentLayout/TipText";

--显示静态文本
local function ShowStaticText(self)
    local tipObjText=self:AddComponent(UIText,tip_obj_text_path);
    tipObjText:SetText(DataUtil.GetClientText(100099));
    local stoneBtnText=self:AddComponent(UIText,stone_btn_text_path);
    stoneBtnText:SetText(DataUtil.GetClientText(100100));
    local tipText=self:AddComponent(UIText,tip_text_path);
    tipText:SetText(DataUtil.GetClientText(100101));
end

--显示商店按钮名字
local function ShowShopBtnName(_name,text1,text2,text3)
    text1.gameObject:SetActive(DataUtil.GetStringLength(_name)<4);
    text2.gameObject:SetActive(DataUtil.GetStringLength(_name)>=4);
    local strLength=DataUtil.GetStringLength(_name);
    if strLength<4 then
        text1:SetText(_name);
    else
        text2:SetText(UIUtil.StringSub(_name,1,strLength-2));
        text3:SetText(UIUtil.StringSub(_name,strLength-1,strLength));
    end
end
--设置按钮的父物体
local function SetBtnParent(self,child,parent,_isFirst)
    child.transform:SetParent(parent);
    child.localScale=Vector3.New(1,1,1);
    child.anchoredPosition=Vector2.New(0,0);
    if _isFirst then
        child:SetAsFirstSibling();
    else
        child:SetAsLastSibling();
    end

    child.gameObject:SetActive(true);
    ShowShopBtnName(self.model.shopList[self.curOpenShopId].shopName,self.shopBtnSelectText,self.shopBtnSelectText2,self.shopBtnSelectText3);
end


--更新资源条
local function RefreshResourceBar(self)
    local resourceBarId= self.model.subShopList[self.subShopDataIndex].xlsxData.ResBarId;
    ResourceBarComponentManager:GetInstance():RebindResourceBar(UIWindowNames.UIWindowShopMain,resourceBarId,self);
end
--显示商品
local function ShowShopItem(self)
    RefreshResourceBar(self);
    self.exchangeBtn.gameObject:SetActive(self.model.lingshiShopTagId==self.model.subShopList[self.subShopDataIndex].id);
    self.itemList=self.model.subShopList[self.subShopDataIndex].itemList;--当前商店物品
    self.normal_item_wrap_group:SetLength(table.length(self.itemList));
    self.normal_item_wrap_group:ResetToBeginning();
end


--显示商店按钮
local function ShowShopBtn(self)
    for i, v in ipairs(self.shop_btn_save) do
        v.gameObject:SetActive(self.model.shopList[i]~=nil);
        if self.model.shopList[i]~=nil then
            ShowShopBtnName(self.model.shopList[i].shopName,v.text,v.doubleText,v.doubleText2);
        end
    end
end
--显示分签商店按钮
local function ShowSubShopBtn(self,index)
    local singleShopData=self.model.shopList[index];
    for i, v in ipairs(self.sub_save) do
        v.gameObject:SetActive(singleShopData.subShopList[i] ~= nil);
        if singleShopData.subShopList[i] ~= nil then
            v.text:SetText(singleShopData.subShopList[i].subShopName);
            v.id=singleShopData.subShopList[i].id;
        end
    end
end
--获取分签商店在所属商店的索引
local function  GetSubIndex(self,subId)
    for i, v in ipairs(self.model.shopList[self.curOpenShopId].subShopList) do
        if v.id== subId then
            return i;
        end
    end
end


--单个商店按钮点击
local function SingleShopBtnOnClick(self,index)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    self.curOpenShopId=index;
    ShowSubShopBtn(self,index);
    self.subShopDataIndex=self.model.subShopListIndex[self.sub_save[1].id];
    SetBtnParent(self,self.shop_btn_select,self.shop_btn_save[index].gameObject.transform);
    SetBtnParent(self,self.sub_btn_select,self.sub_save[1].gameObject.transform,true);
    ShowShopItem(self);
end
--单个分签按钮点击
local function SingleSubBtnOnClick(self, index)
    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    self.subShopDataIndex=self.model.subShopListIndex[self.sub_save[index].id];
    SetBtnParent(self,self.sub_btn_select,self.sub_save[index].gameObject.transform,true);
    ShowShopItem(self);

end

local function OnCreate(self)
    base.OnCreate(self)
    ShowStaticText(self);
    self.exchangeBtn=self:AddComponent(UIButton,jls_exchange_btn_path);
    self.exchangeBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIJlrChipExchange) end);

    self.sub_btn_group=self:AddComponent(UIBaseContainer,sub_btn_group_path);
    self.sub_btn_select=UIUtil.FindComponent(self.transform,typeof(CS.UnityEngine.RectTransform),sub_btn_select_path);
    self.sub_btn_select.gameObject:SetActive(false);
    self.sub_save = {};
    local sub_btn_count=self.sub_btn_group.transform.childCount;
    for i = 0, sub_btn_count-1 do
        local tempBtn = self.sub_btn_group:AddComponent(UIButton,i);
        tempBtn:AddComponent(UIBaseContainer,"");
        local btn_index=i+1;
        tempBtn:SetOnClick(self,SingleSubBtnOnClick,btn_index);
        table.insert(self.sub_save, {gameObject =tempBtn.gameObject,text = tempBtn:AddComponent(UIText,"Text") } );
    end
    self.shop_btn_group=self:AddComponent(UIBaseContainer,shop_btn_group_path);
    self.shop_btn_select=UIUtil.FindComponent(self.transform,typeof(CS.UnityEngine.RectTransform),shop_btn_select_path);
    self.shop_btn_select.gameObject:SetActive(false);
    self.shopBtnSelectText=self:AddComponent(UIText,shop_select_text_path);
    self.shopBtnSelectText2=self:AddComponent(UIText,shop_btn_select_double1_path);
    self.shopBtnSelectText3=self:AddComponent(UIText,shop_btn_select_double2_path);
    self.shop_btn_save = {};
    local shop_btn_count=self.shop_btn_group.transform.childCount;
    for k = 0, shop_btn_count-1 do
        local tempBtn = self.shop_btn_group:AddComponent(UIButton,k);
        tempBtn:AddComponent(UIBaseContainer,"");
        local btn_index=k+1;
        tempBtn:SetOnClick(self,SingleShopBtnOnClick,btn_index);
        local tempDoubleText=tempBtn:AddComponent(UIText,"doubleText");
        local tempDoubleText2=tempBtn:AddComponent(UIText,"doubleText/doubleText2");
        table.insert(self.shop_btn_save, {gameObject =tempBtn.gameObject,text = tempBtn:AddComponent(UIText,"allText"),doubleText=tempDoubleText,doubleText2=tempDoubleText2 } );
    end
    self.normal_item_wrap_group=self:AddComponent(UIWrapGroup3D,shop_item_group_path,UIShopWrapNormalItem);
end


local function OnEnable(self)
    base.OnEnable(self);
    self.curOpenSubShopId=self.model.curOpenSubShopId;
    self.curOpenShopId=self.model.curOpenShopId;
    self.subShopDataIndex=self.model.subShopListIndex[self.curOpenSubShopId];
    ShowShopBtn(self);--初始化商店按钮列表
    ShowSubShopBtn(self,self.curOpenShopId);--初始化商店分签按钮列表
    SetBtnParent(self,self.shop_btn_select,self.shop_btn_save[self.curOpenShopId].gameObject.transform);--设置当前选中的商店
    SetBtnParent(self,self.sub_btn_select,self.sub_save[GetSubIndex(self,self.curOpenSubShopId)].gameObject.transform,true);--设置当前选中的分签商店
    ShowShopItem(self);
    local resourceBarParent=UIUtil.FindTrans(self.transform,"ParentLayout/Bg");
    local resourceBarId= self.model.subShopList[self.subShopDataIndex].xlsxData.ResBarId;

    ResourceBarComponentManager:GetInstance():CreatResourceBarComponent(resourceBarParent,UIWindowNames.UIWindowShopMain,resourceBarId,self);
    UIUtil.CreatCloseBtnComponent(self,resourceBarParent,function(go) self.closeComponent=go end,function()
        UIManager:GetInstance():CloseWindow(UIWindowNames.UIWindowShopMain);
        UIManager:GetInstance():Broadcast(UIMessageNames.UIMAINCITY_BACK_SCENE,"UIWindowShopMain")
    end,function()UIManager:GetInstance():Broadcast(UIMessageNames.UIMAINCITY_BACK_SCENE,"UIWindowShopMain") end ,DataUtil.GetClientText(100102),false,2);
end

--更新物品信息
local function RefreshItemList(self)
    self.itemList=self.model.subShopList[self.subShopDataIndex].itemList;--当前商店物品
    self.normal_item_wrap_group:SetLength(table.length(self.itemList));
    self.normal_item_wrap_group:WrapContent(true)
end

local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(UIMessageNames.UISHOP_REFRESH_ITEM, RefreshItemList)
end
local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(UIMessageNames.UISHOP_REFRESH_ITEM, RefreshItemList)
end

local function OnDisable(self)
    base.OnDisable(self)
    ResourceBarComponentManager:GetInstance():DestroyResourceBar(UIWindowNames.UIWindowShopMain);
    if self.closeComponent~=nil or not IsNull(self.closeComponent) then
        self.closeComponent:RecyleSelf();
    end
end

UIWindowShopMainView.OnCreate = OnCreate;
UIWindowShopMainView.OnEnable=OnEnable;
UIWindowShopMainView.OnAddListener=OnAddListener;
UIWindowShopMainView.OnRemoveListener=OnRemoveListener;
UIWindowShopMainView.OnDisable=OnDisable;
return UIWindowShopMainView;