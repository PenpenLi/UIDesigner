---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LJ095.
--- DateTime: 2019/6/28 15:40
---

local ExploreBattleManager= BaseClass("ExploreBattleManager", UpdatableSingleton)
local BattleAssistFunction= require "GameLogic.BattleNew.BattleAssistFunction"
local ExploreRole=require("UI.UIExploreMain.Component.ExploreRole")
local EnemyRole=require("UI.UIExploreMain.Component.EnemyRole")
local constantData=DataUtil.GetData("hang_up_constant");

local selfTeam={[1]=1102003,[2]=1101002,[3]=1102018};
local enemyTeam={[1]=1102021,[2]=1201001,[3]=1102019};

local drop_cry1_path = "Art/EffectRes/Common/fx_c_crystal_red_down.prefab"
local drop_cry2_path = "Art/EffectRes/Common/fx_c_crystal_yellow_down.prefab"
local drop_cry3_path = "Art/EffectRes/Common/fx_c_crystal_blue_down.prefab"

local ememyPos={[0]=5.93,[1]=-5.82}
local dropItemScale=0.7;

local function GetItemList(self,_num,_itemIcon)
    for i = 1, _num do
        table.insert(self.dropList,_itemIcon);
    end
end
--获取掉落列表
local function GetDropItemList(self)
    self.dropList={};
    GetItemList(self,constantData[1].DropNum1,constantData[1].DropItem1);
    GetItemList(self,constantData[1].DropNum2,constantData[1].DropItem2);
    GetItemList(self,constantData[1].DropNum3,constantData[1].DropItem3);
end

local function __init(self)

    self.curTeamList=nil;
    self.dieList=nil;
    self.radius=constantData[1].ShortRad;
    self.dropTime=constantData[1].DropTime;
    self.recyleTime=constantData[1].RecoverTime;
    self.dropDelayTime=constantData[1].DelayTime;
    GetDropItemList(self);
    self.isOpen=false;
end

--敌人角色状态改变
local function SelfBeginFight(self,_index,_targetSelf)
    if self.curTeamList[_index]~=nil then
        self.curTeamList[_index]:UseSkill(_targetSelf);
    end
end

--敌方死亡移除
local function RemoveEnemyByIndex(self,_index)
    if self.enemyTeamList[_index]~=nil then
        self.enemyTeamList[_index]=nil;
    end

end

--创建一个新的敌人
local function CreatNewEnemyByIndex(self,_index)
    if not self.enemyTeamList[_index].isDestroy then
        table.insert(self.dieList,self.enemyTeamList[_index]);
    end
    local roleIndex=math.random(1,3);
    local role=ExploreRole.New(enemyTeam[roleIndex],2,_index,self.rootPoint);
    self.enemyTeamList[_index]=role;
end

--创建自己的队伍
local function CreatSelfTeam(self)
    self.curTeamList={};
    self.dieList={};
    for i, v in ipairs(selfTeam) do
        local role=ExploreRole.New(selfTeam[i],1,i,self.rootPoint);
        table.insert(self.curTeamList,role);
    end
    self.enemyTeamList={};
    for i = 1, #selfTeam do
        local roleIndex=math.random(1,3);
        local role=ExploreRole.New(enemyTeam[roleIndex],2,i,self.rootPoint);
        table.insert(self.enemyTeamList,role);
    end
end

--获取世界坐标系
local function GetWorldPos(self,x,y)
    if IsNull(self.cam) then
        self.cam =CS.UnityEngine.Camera.main;
    end
    local layer =  UIManager:GetInstance():GetLayer(UILayers.BackgroudLayer.Name)
    local size_delta =  UIUtil.FindComponent(layer.transform,typeof(CS.UnityEngine.RectTransform)).sizeDelta
    return self.cam:ViewportToWorldPoint(Vector3.New(0/size_delta[0]+0.5,-84/size_delta[1]+0.5,5))
end
--掉落收集
local function DropCryFly(self)
    if self.drop_cry_game ~= nil and self.isOpen then
        for i, v in pairs(self.drop_cry_game) do
            if v~=nil then
                local world_pos = GetWorldPos(self,0.47,0.21)
                LuaTweener.TransMoveTo(v.game.transform,v.to_pos,world_pos,self.recyleTime,EaseFormula.Linear,function()
                    GameObjectPool:GetInstance():RecycleGameObject(v.path,v.game)
                    if self.drop_cry_game~=nil then
                        self.drop_cry_game[i]=nil;
                    end
                end)
                LuaTweener.UIScaleTo(v.game.transform:Find("crystal"),Vector3.one*dropItemScale,Vector3.New(0.05,0.05,0.05),0.5,EaseFormula.Linear)
            end

        end
        --self.drop_cry_game = nil
    end
end
--创建掉落物品
local function CreateDropCry(self,fp,tp,_prbName)
    local drop_cry_path = string.format("Art/EffectRes/Common/%s.prefab",_prbName)
    GameObjectPool:GetInstance():GetGameObjectAsync(drop_cry_path,function(go)
        if not IsNull(go) then
            if not self.isOpen then
                GameObjectPool:GetInstance():RecycleGameObject(drop_cry_path,go)
                return;
            end
            local inst_trans = go.transform
            inst_trans.localScale = Vector3.one*dropItemScale;
            inst_trans:Find("crystal").localScale = Vector3.one*dropItemScale;
            local from_pos = fp
            local to_pos = BattleAssistFunction.CreateRandomCircle(tp,self.radius)
            if self.drop_cry_game == nil then
                self.drop_cry_game = {}
            end
            table.insert(self.drop_cry_game,{game = go,to_pos = to_pos,path = drop_cry_path})
            LuaTweener.TransParabolicMoveTo(inst_trans,from_pos,to_pos,self.dropTime)
        end
    end)
end
--掉落奖励
local function PlayerDropCry(self,_role,cry_type,cry_num)
    cry_num = math.abs(cry_num)
    if _role~=nil then
        if cry_type > 0 and cry_num > 0 then
            local fxController= _role.gameObject.transform:GetComponentInChildren(typeof(CS.RoleFxController))
            local fp = fxController:GetAnchorTrans(2).position
            local tp =_role.roleObjParent.transform.position+Vector3.New(0,0.2,0)
            for i = 0, #self.dropList-1 do
                TimerManager:GetInstance():SimpleTimerArgs(0.1*i,function()
                    CreateDropCry(self,fp,tp,self.dropList[i+1]);
                end,nil,true)
            end
        end
        self.dropTimer= TimerManager:GetInstance():SimpleTimerArgs(self.dropDelayTime,function()
            DropCryFly(self);
        end,nil,true)
    end

end


local function Update(self)
    if self.curTeamList~=nil and #self.curTeamList>0 then
        for i, v in pairs(self.curTeamList) do
            if v~=nil then
                v:Update();
            end
        end
    end
    if self.enemyTeamList~=nil and #self.enemyTeamList>0 then
        for i, v in pairs(self.enemyTeamList) do
            if v~=nil then
                v:Update();
            end
        end
    end

    if self.dieList~=nil then
        for i = #self.dieList,1 ,-1  do
            self.dieList[i]:Update();
            if  self.dieList[i].isDestroy then
                table.remove(self.dieList,i);
            end
        end
    end
end

local function StarOneBattle(self,_rootPoint,_teamList)
    self.rootPoint=_rootPoint;
    selfTeam=_teamList;
    self.enemyTeamList={};
    CreatSelfTeam(self);
    self.isOpen=true;
end


local function RecyleRole(self)
    if self.curTeamList~=nil then
        for i, v in pairs(self.curTeamList) do
            if v~=nil then
                v:OnDestroy();
            end

        end
        self.curTeamList=nil;
    end


    if self.enemyTeamList~=nil then
        for i, v in pairs(self.enemyTeamList) do
            if v~=nil then
                v:OnDestroy();
            end
        end
        self.enemyTeamList=nil;
    end
    if self.dieList~=nil then
        for i, v in pairs(self.dieList) do
            if v~=nil then
                v:OnDestroy();
            end
        end
    end
    if self.drop_cry_game~=nil then
        for i, v in pairs(self.drop_cry_game) do
            if v~=nil then
                GameObjectPool:GetInstance():RecycleGameObject(v.path,v.game)
            end
        end
    end
    self.drop_cry_game=nil;
end

local function EndBattle(self)
    self.isOpen=false;
    if self.dropTimer~=nil then
        TimerManager:GetInstance():SimpleTimerStop(self.dropTimer)
        self.dropTimer = nil
    end
    RecyleRole(self);
end



local function OnDestroy(self)
    EndBattle(self);
end

ExploreBattleManager.__init=__init;
ExploreBattleManager.StarOneBattle=StarOneBattle;
ExploreBattleManager.Update=Update;
ExploreBattleManager.OnDestroy=OnDestroy;
ExploreBattleManager.EndBattle=EndBattle;
ExploreBattleManager.SelfBeginFight=SelfBeginFight;
ExploreBattleManager.RemoveEnemyByIndex=RemoveEnemyByIndex;
ExploreBattleManager.CreatNewEnemyByIndex=CreatNewEnemyByIndex;
ExploreBattleManager.PlayerDropCry=PlayerDropCry;
return ExploreBattleManager