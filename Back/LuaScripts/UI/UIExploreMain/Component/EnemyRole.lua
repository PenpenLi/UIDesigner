---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LJ095.
--- DateTime: 2019/6/28 18:20
---

local EnemyRole=BaseClass("EnemyRole")

local battle_role_config=DataUtil.GetData("battle_role_config")
local selfPos={[1]={x=-3.9,y=0,z=0},[2]={x=-3.9,y=0,z=1.2},[3]={x=-3.9,y=0,z=-1.346}};
local modelScale=0.5;
local timeline_time = DataUtil.GetData("timeline_time")
ExploreRoleState={
    Idea=1,--站立
    Attack=2,--攻击
    Die=3,--死亡
    BeAttacked=4,--被击
    Move=5,--移动
    FightStay=6,--等待战斗
    UseSkill=7,--使用技能
}
--切换状态
local function SwitchState(self,_state)
    self.curState=_state;
end

local function LoadRole(self,_roleId,_roleType,_index,_rootPoint)
    local config=battle_role_config[_roleId];
    if config~=nil then
        GameObjectPool:GetInstance():GetGameObjectAsync(config.prefab_Name,function(go)
            self.roleObj=CS.UnityEngine.GameObject(tostring(_roleId));
            self.roleObj.transform:SetParent(_rootPoint.transform);
            self.gameObject=go;
            go.transform:SetParent(self.roleObj.transform);
            go.transform.localScale=Vector3.New(config.PrefabZoom,config.PrefabZoom,config.PrefabZoom)*modelScale;
            go.transform.localPosition=Vector3.zero;
            go.transform.localEulerAngles=Vector3.zero;

            self.roleObj.transform.localEulerAngles=Vector3(0,-105,0);
            self.prbName=config.prefab_Name;
            self.animator=go.transform.GetComponent(typeof(CS.UnityEngine.Animator));

            if _roleType==1 then --我方
                SwitchState(self,ExploreRoleState.Idea);
                self.playAbleDirector=go:GetComponent(typeof(CS.UnityEngine.Playables.PlayableDirector));
                local timeLinePath=string.format("Art/Roles/rol_%s/Animations/%s_attack.playable",_roleId,_roleId);
                ResourcesManager:GetInstance():LoadAsync(timeLinePath,typeof(CS.UnityEngine.Timeline.TimelineAsset),function(asset)
                    self.playAbleDirector.playableAsset = asset
                end)
                if timeline_time[timeLinePath] ~= nil then
                    self.timeLineTime = timeline_time[timeLinePath].duration
                    self.timeLineEvent = timeline_time[timeLinePath].event
                end
                local rolePos=Vector3.New(selfPos[_index].x,0,selfPos[_index].z)
                self.roleObj.localPosition=rolePos;
            else
                local rolePos=Vector3.New(5.93,0,selfPos[_index].z)
                self.roleObj.localPosition=rolePos;
                SwitchState(self,ExploreRoleState.Move);
            end
        end)
    end
end
local function CreateEvent(data)
    local result = {}
    if data ~= nil then
        --最后一个被击动画
        local lastIndex = -1
        local lastTime = -1
        for i, v in ipairs(data) do
            table.insert(result,{time = v.time,msg = v.msg,lParam = v.lParam,fParam=v.fParam,sParam=v.sParam})
            if v.msg == "anim_evt" and string.startswith(v.sParam,"hit",true) and v.time > lastTime then
                lastIndex = i
                lastTime = v.time
            end
        end
        if lastIndex > 0 then
            result[lastIndex].isLast = true
        end
    end
    return result
end
local function Play(self,animName,fade)
    if not self.animator:HasState(0,CS.UnityEngine.Animator.StringToHash(animName))then
        return
    end
    local info =  self.animator:GetCurrentAnimatorStateInfo(0)
    if info:IsName(animName) then
        return
    end
    if fade ~= nil and fade>0 then
        self.animator:CrossFade(animName,fade)
    else
        self.animator:Play(animName,0,0)
    end
end
local function SkillCaseHandler(self,msg,param1,param2,param3,param4)
    if msg=="anim_evt" then
        if self.skillTargetsView ~= nil then
            if param3 == "rise_1" then
            elseif  param4 then
                SwitchState(self,ExploreRoleState.Die);
            else
                Play(param3,param2)
            end
        end
    end
end
--使用技能
local function UseSkill(self,_targetRole)
    CS.LJ_TimelineExtension.PlayableDirectorBindingHelper.BindingRoles(
        self.playAbleDirector,
        self.gameObject,_targetRole.gameObject)
    self.actionUseTime =  self.timeLineTime
    self.timer = Time.time
    self.skillEvent = CreateEvent(self.timeLineEvent)
    SwitchState(self,ExploreRoleState.UseSkill);
end

local function __init(self,_roleId,_roleType,_index,_rootPoint)
    LoadRole(self,_roleId,_roleType,_index,_rootPoint);
end


local function Update(self)
    if self.curState==ExploreRoleState.Idea then
        Play(self,"idle");
    elseif self.curState==ExploreRoleState.Attack then
        Play(self,"idle");
    elseif self.curState==ExploreRoleState.Die then

    elseif self.curState==ExploreRoleState.BeAttacked then

    elseif self.curState==ExploreRoleState.Move then
        local vt= Vector3.left;
        self.roleObj.transform:Translate(vt * Time.deltaTime, CS.UnityEngine.Space.World);
        Play(self,"run");
        local dis= Vector3.Distance(self.roleObj.transform.localPosition,self.enemyPos);
        if dis<=8 then
--[[            SwitchState(self,ExploreRoleState.Attack);
            self.stateChangeFun(ExploreRoleState.FightStay,self.index,self.dir);]]
        end
    elseif self.curState==ExploreRoleState.UseSkill then
        local curTime = Time.time - self.timer
        if self.timeLineEvent ~= nil then
            for i = #self.timeLineEvent, 1,-1 do
                if curTime >= self.timeLineEvent[i].time then
                    SkillCaseHandler(self,self.self.timeLineEvent[i].msg,self.self.timeLineEvent[i].lParam,self.timeLineEvent[i].fParam,self.timeLineEvent.sParam,self.timeLineEvent.isLast)
                    table.remove(self.timeLineEvent,i)
                end
            end
        end
--[[        if self.actionType == 1 and self.useSkillState == 1 and curTime > self.actionUseTime - 0.3 then
            self.viewContext.battleCameraManager:CameraMaskAction(0,1)
            self.useSkillState = 0
        end]]
        if curTime > self.actionUseTime then
            if self.actionType == 0 then
                --self:OnSomeOneFinishSkill(2)
                self:ChangeState(BattleEnum.BattleRoleState.IDLE)
                --self.viewContext:SinglePlayAction()
            elseif self.actionType == 1 then
                --PlaySkillTimeLine(self)
            end
        end
    end
end

local function OnDestroy(self)
    if not IsNull(self.roleObj) then
        GameObjectPool:GetInstance():RecycleGameObject(self.prbName,self.roleObj);
    end
end

EnemyRole.__init=__init;
EnemyRole.SwitchState=SwitchState;
EnemyRole.Update=Update
EnemyRole.OnDestroy=OnDestroy;
EnemyRole.UseSkill=UseSkill;
return EnemyRole