---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/8/8 11:56
---

local UITestHoardRightWrapItem = BaseClass("UITestHoardRightWrapItem", UIWrapComponent)
local base = UIWrapComponent

local BattleAwardData = require "UI.UIBattle.Component.BattleAwardData"
local StaticItemData = DataUtil.GetData("item")

-- 按钮点击
local function OnBtnClick(self)
    LJAudioManger:GetInstance():PlayOtherVoice("UI_CommonClick")
    local playerLv = math.floor(UserData:GetInstance().pLevel)
    if playerLv < self.data.LvLimit then
        return
    end
    if TestHoardData:GetInstance()._data[self.view.selectLeftIndex].HaveTimes <= 0 then
        UISpecial:GetInstance():UITipText(DataUtil.GetClientText(100163))
        return
    end
    if self.data.IsPass then
        TestHoardData:GetInstance():OnTestHoardLevelPass(self.data.Id)
    else
        TestHoardData:GetInstance():OnTestHoardLevelEnter(self.data.Id)
    end
end

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    self.titleImg = self:AddComponent(UIImage, "bgImage/Image", AtlasConfig.DynamicTex)
    self.titleText = self:AddComponent(UIText, "Title_UIText")
    self.gray = self.titleImg:GetMat()
    self.levelImg = self:AddComponent(UIImage, "HeadFrameImage")
    self.levelText = self:AddComponent(UIText, "HeadFrameImage/levelText")
    self.infoText = self:AddComponent(UIText, "StatusInfo_UIText")
    self.unlockText = self:AddComponent(UIText, "UnLock_UIText")
    self.clickBtn = self:AddComponent(UIButton, "btnButton")
    self.clickBtn:SetOnClick(self,OnBtnClick)
    self.btnImg = self:AddComponent(UIImage, "btnButton")
    self.btnText = self:AddComponent(UIText, "btnButton/Text")
    self.awardGroup = {};
    for i = 1, 4 do
        self.awardGroup[i] = BattleAwardData.New(self, "awardImg"..i);
        self.awardGroup[i]:OnCreate(self);
        self.awardGroup[i].trans = UIUtil.FindTrans(self.transform, "awardImg"..i);
    end
end

-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self, real_index)
    self.index = real_index + 1
    self.data = TestHoardData:GetInstance()._data[self.view.selectLeftIndex].Levels[self.index]
    if self.data == nil then
        Logger.LogError("试炼宝库关卡数据错误")
        return
    end
    self.titleText:SetText(self.data.LevelName)
    self.infoText:SetText(string.format(DataUtil.GetClientText(100164),self.data.LvLimit))
    if self.data.IsPass then
        self.btnText:SetText(DataUtil.GetClientText(100165))
    else
        self.btnText:SetText(DataUtil.GetClientText(100166))
    end
    self.levelImg:SetActive(self.data.DifficultDesc ~= nil)
    if self.data.DifficultDesc ~= nil then
        self.levelText:SetText(self.data.DifficultDesc)
    end
    local playerLv = math.floor(UserData:GetInstance().pLevel)
    if self.data.PreId ~= -1 and not TestHoardData:GetInstance()._data[self.view.selectLeftIndex].Levels[self.index - 1].IsPass then
        self.unlockText.gameObject:SetActive(true)
        self.clickBtn.gameObject:SetActive(false)
        self.unlockText:SetText(string.format("需要先通关%s难度",TestHoardData:GetInstance()._data[self.view.selectLeftIndex].Levels[self.index - 1].DifficultDesc))
    else
        self.unlockText.gameObject:SetActive(false)
        self.clickBtn.gameObject:SetActive(true)
    end
    if playerLv < self.data.LvLimit then
        self.infoText:SetColor32(250, 101, 101, 255)
        self.btnImg:SetMat(self.gray)
        self.titleImg:SetMat(self.gray)
    else
        self.infoText:SetColor32(255, 255, 255, 255)
        self.btnImg:SetMat(nil)
        self.titleImg:SetMat(nil)
    end

    for i = 1, 4 do
        if self.data.DropShow ~= nil and i <= #self.data.DropShow then
            self.awardGroup[i].gameObject:SetActive(true);
            self.awardGroup[i]:Refresh({
                id = self.data.DropShow[i].Id,
                num = self.data.DropShow[i].Desc,
                icon = StaticItemData[self.data.DropShow[i].Id].Icon,
                quality = StaticItemData[self.data.DropShow[i].Id].Quality
            });
        else
            self.awardGroup[i].gameObject:SetActive(false);
        end
    end
end

UITestHoardRightWrapItem.OnCreate = OnCreate
UITestHoardRightWrapItem.OnRefresh = OnRefresh

return UITestHoardRightWrapItem