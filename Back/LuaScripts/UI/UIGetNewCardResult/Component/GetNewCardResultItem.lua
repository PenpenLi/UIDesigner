---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ljl.
--- DateTime: 2019/7/3 10:19
---

local GetNewCardResultItem = BaseClass("GetNewCardResultItem", UIBaseContainer)
local base = UIBaseContainer

local function CloseWindowCall(self,target)
    if target.Name == UIWindowNames.UICardShow then
        UIManager:GetInstance():RemoveListener(UIMessageNames.UIFRAME_ON_WINDOW_CLOSE, self.closeFunc)
        UIManager:GetInstance():Broadcast(UIMessageNames.UI_SHOW_CARD_RESULT_STATE)
    end
end

local function IsOpenNewCard(self)
    if self.data.quality>2 and self.data.isNew==true then
        self.timer4= TimerManager:GetInstance():SimpleTimerArgs(1,function ()
            if BackpackData:GetInstance().getNewCardData ~= nil and #BackpackData:GetInstance().getNewCardData > 1 then
                --十連抽需要多次打開卡牌展示界面
                UIManager:GetInstance():Broadcast(UIMessageNames.UI_GET_NEW_CARD_SHOW_WIN,self.data.id)
            else
                UIManager:GetInstance():OpenWindow(UIWindowNames.UICardShow,self.data.id)
                UIManager:GetInstance():Broadcast(UIMessageNames.UIGACHA_SET_NIUDAN_CAM_ACTIVE,false)
                self.closeFunc = Bind(self,CloseWindowCall)
                UIManager:GetInstance():AddListener(UIMessageNames.UIFRAME_ON_WINDOW_CLOSE, self.closeFunc)
            end
        end,nil,true)
    else
        UIManager:GetInstance():Broadcast(UIMessageNames.UIGACHA_SET_RESULT_MASK_ACTIVE,false)
    end
end

local function SetCardState(self)
    self.typeSSR.gameObject:SetActive(self.data.quality == 4)
    self.typeSR.gameObject:SetActive(self.data.quality == 3)
    self.typeR.gameObject:SetActive(self.data.quality == 2)
    if self.data.quality == 4 then
        self.kaSSRFrame.gameObject:SetActive(true)
        self.kaFrame.gameObject:SetActive(false)
    else
        self.kaSSRFrame.gameObject:SetActive(false)
        self.kaFrame.gameObject:SetActive(true)
    end
    self.emptyClickBtn.gameObject:SetActive(false)
    self.cardChipObj.gameObject:SetActive(false)
    self.R_cardEffect:SetActive(false)
    self.SR_cardEffect:SetActive(false)
    self.SSR_cardEffect:SetActive(false)
    self.SSR_cardlongEffect:SetActive(false)
    self.baseBoardEffect:SetActive(false)
    self.SSR_cardChipEffect:SetActive(false)
    self.SR_thickNessEffect:SetActive(false)
    self.SSR_thickNessEffect:SetActive(false)
    self.isRotation = CS.UnityEngine.PlayerPrefs.GetInt(ClientData:GetInstance().user_id.."rotate")
    if self.isRotation ~= nil and self.isRotation == 1 or self.data.quality == 2 then   --R卡
        self.SR_standEffect:SetActive(false)
        self.SSR_standEffect:SetActive(false)
        self.timer1=TimerManager:GetInstance():SimpleTimerArgs(1.5,function ()
            if self.type == 1 then
                self.cardObj.transform.localScale=Vector3.New(3000,3000,3000)
            else
                self.cardObj.transform.localScale=Vector3.New(2100,2100,2100)
            end
            self.rotateAnim.enabled = true
            self.baseBoardEffect:SetActive(true)
            self.R_cardEffect:SetActive(true)
            if self.type == 1 then
                self.R_cardEffect.transform.localScale = Vector3.New(1.5,1.5,1.5)
                self.R_cardEffect.transform.localPosition = Vector3.New(0,60,0)
            else
                self.R_cardEffect.transform.localScale = Vector3.New(1,1,1)
                self.R_cardEffect.transform.localPosition = Vector3.New(0,0,0)
            end
            if not self.data.isNew then
                LJAudioManger:GetInstance():PlayVoice("UI_Card_02")
                self.timer2= TimerManager:GetInstance():SimpleTimerArgs(0.5,function ()
                    self.R_cardEffect:SetActive(false)
                    self.rotateAnim.enabled = false
                    self.baseBoardEffect:SetActive(false)
                    self.cardObj.gameObject:SetActive(false)
                    self.cardChipObj.gameObject:SetActive(true)
                    self.chipIcon:SetSpriteName(self.data.suipianIcon)
                    self.chipNum:SetText(self.data.suipianNum)
                    self.chipFrame:SetSpriteName(SpriteDefine:GetItemQualityFrameByType(self.data.quality))
                    UIManager:GetInstance():Broadcast(UIMessageNames.UI_SHOW_CARD_RESULT_STATE)
                end,nil,true)
            else
                LJAudioManger:GetInstance():PlayVoice("UI_Card_02")
                self.timer3=TimerManager:GetInstance():SimpleTimerArgs(1,function ()
                    self.R_cardEffect:SetActive(false)
                    self.rotateAnim.enabled = false
                    self.baseBoardEffect:SetActive(false)
                    if self.data.quality == 2 then
                        UIManager:GetInstance():Broadcast(UIMessageNames.UI_SHOW_CARD_RESULT_STATE)
                    end
                    IsOpenNewCard(self)
                end,nil,true)
            end
        end,nil,true)
    else
        self.SSR_standEffect:SetActive(self.data.quality == 4)
        self.SR_standEffect:SetActive(self.data.quality == 3)
        self.emptyClickBtn.gameObject:SetActive(true)
    end
end

local function OnCreate(self)
    base.OnCreate(self)
    self.cardChipObj = UIUtil.FindTrans(self.transform,"suiPian")
    self.cardChipObj.gameObject:SetActive(false)
    self.R_cardEffect = UIUtil.FindTrans(self.transform,"FX_ui_newcard_R_click").gameObject
    self.R_cardEffect:SetActive(false)
    self.SR_cardEffect = UIUtil.FindTrans(self.transform,"FX_ui_newcard_SR_click").gameObject
    self.SR_cardEffect:SetActive(false)
    self.SSR_cardEffect = UIUtil.FindTrans(self.transform,"FX_ui_newcard_SSR_click").gameObject
    self.SSR_cardEffect:SetActive(false)
    self.SSR_cardChipEffect = UIUtil.FindTrans(self.transform,"suiPian/FX_ui_newcard_getSSR_stand_suipian").gameObject
    self.baseBoardEffect = UIUtil.FindTrans(self.transform,"FX_ui_newcard_baseboard").gameObject
    self.baseBoardEffect:SetActive(false)
    self.emptyClickBtn = self:AddComponent(UIButton,"EmptyBtn")
    self.emptyClickBtn:SetOnClick(function ()
        LJAudioManger:GetInstance():PlayVoice("UI_Card_02")
        self.emptyClickBtn.gameObject:SetActive(false)
        self.SSR_standEffect:SetActive(false)
        self.SR_standEffect:SetActive(false)
        self.baseBoardEffect:SetActive(true)
        self.SR_thickNessEffect:SetActive(self.data.quality == 3)
        self.SSR_thickNessEffect:SetActive(self.data.quality == 4)
        self.SSR_cardEffect:SetActive(self.data.quality == 4)
        self.SSR_cardlongEffect:SetActive(self.data.quality == 4)
        self.SR_cardEffect:SetActive(self.data.quality == 3)
        if self.type == 1 then
            self.cardObj.transform.localScale=Vector3.New(3000,3000,3000)
            self.SSR_cardEffect.transform.localScale = Vector3.New(1.5,1.5,1.5)
            self.SSR_cardEffect.transform.localPosition = Vector3.New(0,60,0)
            self.SR_cardEffect.transform.localScale = Vector3.New(1.5,1.5,1.5)
            self.SR_cardEffect.transform.localPosition = Vector3.New(0,60,0)
        else
            self.cardObj.transform.localScale=Vector3.New(2100,2100,2100)
            self.SSR_cardEffect.transform.localScale = Vector3.New(1,1,1)
            self.SSR_cardEffect.transform.localPosition = Vector3.New(0,0,0)
            self.SR_cardEffect.transform.localScale = Vector3.New(1,1,1)
            self.SR_cardEffect.transform.localPosition = Vector3.New(0,0,0)
        end
        self.rotateAnim.enabled = true
        IsOpenNewCard(self)
        if not self.data.isNew then
            self.timer5= TimerManager:GetInstance():SimpleTimerArgs(0.5,function ()
                self.cardObj.gameObject:SetActive(false)
                self.cardChipObj.gameObject:SetActive(true)
                self.SSR_cardChipEffect:SetActive(self.data.quality == 4)
                self.chipIcon:SetSpriteName(self.data.suipianIcon)
                self.chipNum:SetText(self.data.suipianNum)
                self.chipFrame:SetSpriteName(SpriteDefine:GetItemQualityFrameByType(self.data.quality))
                UIManager:GetInstance():Broadcast(UIMessageNames.UI_SHOW_CARD_RESULT_STATE)
            end,nil,true)
        end
    end)
    self.niuDanAnimList={{time=0.5},{time=1},{time=2.4}}
    self.chipFrame = self:AddComponent(UIImage,"suiPian",AtlasConfig.DynamicTex)
    self.chipIcon = self:AddComponent(UIImage,"suiPian/suiPianicon",AtlasConfig.DynamicTex)
    self.chipNum = self:AddComponent(UIText,"suiPian/suiNum")
end

--刷新
local function Refresh(self,data,_type)
    self.data=data
    self.type = _type
    self.emptyClickBtn.gameObject:SetActive(false)
    self.view:CreatCardObj(self.transform,_type,function(go)
        if not IsNull(go) then
            self.cardObj =go
            self.cardObj.gameObject:SetActive(false)
            self.rotateAnim=UIUtil.FindComponent(go.transform,typeof(CS.UnityEngine.Animator),"")
            self.typeR = UIUtil.FindTrans(go.transform,"R")
            self.typeSR = UIUtil.FindTrans(go.transform,"SR")
            self.typeSSR = UIUtil.FindTrans(go.transform,"SSR")
            self.kaFrame = UIUtil.FindComponent(go.transform,typeof(CS.UnityEngine.MeshRenderer),"kaFrame")
            self.kaSSRFrame = UIUtil.FindComponent(go.transform,typeof(CS.UnityEngine.MeshRenderer),"kaSSRFrame")
            self.SSRSJ = UIUtil.FindComponent(go.transform,typeof(CS.UnityEngine.MeshRenderer),"kaSSRFrame/SSRSJ")
            self.kaMask = UIUtil.FindComponent(go.transform,typeof(CS.UnityEngine.MeshRenderer),"kaMask")
            self.cryType = UIUtil.FindComponent(go.transform,typeof(CS.UnityEngine.MeshRenderer),"kaFrame/SJ")
            self.kmType = UIUtil.FindComponent(go.transform,typeof(CS.UnityEngine.MeshRenderer),"km")
            local framePath = ""
            local maskPath = ""
            local cryPath = ""
            local kmQualityPath = ""
            if data.quality == 2 then
                framePath = "Art/UI_3D/Materials/kp_kb_r.mat"
                maskPath = "Art/UI_3D/Materials/kp_zz_r.mat"
                kmQualityPath = "Art/UI_3D/Materials/kp_km_r.mat"
            elseif data.quality == 3 then
                framePath = "Art/UI_3D/Materials/kp_kb_sr.mat"
                maskPath = "Art/UI_3D/Materials/kp_zz_sr.mat"
                kmQualityPath = "Art/UI_3D/Materials/kp_km_sr.mat"
            elseif data.quality == 4 then
                framePath = "Art/UI_3D/Materials/kp_kb_ssr.mat"
                maskPath = "Art/UI_3D/Materials/kp_zz_ssr.mat"
                kmQualityPath = "Art/UI_3D/Materials/kp_km_ssr.mat"
            end
            if data.crystalType == 0 then
                self.cryType.gameObject:SetActive(false)
                self.SSRSJ.gameObject:SetActive(false)
            else
                self.cryType.gameObject:SetActive(true)
                self.SSRSJ.gameObject:SetActive(true)
                if data.crystalType == 1 then
                    cryPath = "Art/UI_3D/Materials/kp_sj_red.mat"
                elseif data.crystalType == 2 then
                    cryPath = "Art/UI_3D/Materials/kp_sj_yellow.mat"
                elseif data.crystalType == 3 then
                    cryPath = "Art/UI_3D/Materials/kp_sj_blue.mat"
                end
                ResourcesManager:GetInstance():LoadAsync(cryPath, typeof(CS.UnityEngine.Material),function (material)
                    if not IsNull(material) then
                        self.cryType.material = material
                    end
                end)
                ResourcesManager:GetInstance():LoadAsync(cryPath, typeof(CS.UnityEngine.Material),function (material)
                    if not IsNull(material) then
                        self.SSRSJ.material = material
                    end
                end)
            end
            self.kaIcon = UIUtil.FindComponent(go.transform,typeof(CS.UnityEngine.MeshRenderer),"kaIcon")
            self.iconPath = "Art/UI_3D/Materials/kp_km_"..math.floor(data.id)..".mat";
            ResourcesManager:GetInstance():LoadAsync(maskPath, typeof(CS.UnityEngine.Material),function (material)
                if not IsNull(material) then
                    self.kaMask.material = material
                end
            end)
            ResourcesManager:GetInstance():LoadAsync(framePath, typeof(CS.UnityEngine.Material),function (material)
                if not IsNull(material) then
                    self.kaFrame.material = material
                    self.cardObj.gameObject:SetActive(true)
                end
            end)
            ResourcesManager:GetInstance():LoadAsync(self.iconPath, typeof(CS.UnityEngine.Material),function (material)
                if not IsNull(material) then
                    self.kaIcon.material = material
                end
            end)
            ResourcesManager:GetInstance():LoadAsync(kmQualityPath, typeof(CS.UnityEngine.Material),function (material)
                if not IsNull(material) then
                    self.kmType.material = material
                end
            end)

            self.rotateAnim.enabled = false
            self.SR_standEffect = UIUtil.FindTrans(go.transform,"FX_ui_newcard_SR_stand").gameObject
            self.SSR_standEffect = UIUtil.FindTrans(go.transform,"FX_ui_newcard_SSR_stand").gameObject
            self.R_thickNessEffect = UIUtil.FindTrans(go.transform,"FX_ui_newcard_Thickness_R").gameObject
            self.R_thickNessEffect:SetActive(false)
            self.SSR_cardlongEffect = UIUtil.FindTrans(go.transform,"FX_ui_newcard_getSSR_stand").gameObject
            self.SR_thickNessEffect = UIUtil.FindTrans(go.transform,"FX_ui_newcard_Thickness_SR").gameObject
            self.SSR_thickNessEffect = UIUtil.FindTrans(go.transform,"FX_ui_newcard_Thickness_SSR").gameObject
            SetCardState(self)
        end
    end,self.data.quality)
end
local function StopTimer(self)
    if self.timer1~=nil then
        TimerManager:GetInstance():SimpleTimerStop(self.timer1);
    end
    if self.timer2~=nil then
        TimerManager:GetInstance():SimpleTimerStop(self.timer2);
    end
    if self.timer3~=nil then
        TimerManager:GetInstance():SimpleTimerStop(self.timer3);
    end
    if self.timer4~=nil then
        TimerManager:GetInstance():SimpleTimerStop(self.timer4);
    end
    if self.timer5~=nil then
        TimerManager:GetInstance():SimpleTimerStop(self.timer5);
    end
end

local function OnDisable(self)
    base.OnDisable(self);
    if self.iconPath~=nil and # self.iconPath>0 then
        ResourcesManager:GetInstance():UnloadAssetBundle(self.iconPath)
    end
    StopTimer(self);
end

local function OnDestroy(self)
    base.OnDestroy(self);
    StopTimer(self);
    if self.iconPath~=nil and # self.iconPath>0 then
        ResourcesManager:GetInstance():UnloadAssetBundle(self.iconPath)
    end
end
GetNewCardResultItem.OnDisable=OnDisable;
GetNewCardResultItem.OnDestroy=OnDestroy;
GetNewCardResultItem.OnCreate=OnCreate
GetNewCardResultItem.Refresh=Refresh
return GetNewCardResultItem