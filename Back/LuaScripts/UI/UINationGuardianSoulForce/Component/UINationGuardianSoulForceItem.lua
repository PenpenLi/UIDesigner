---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ljl.
--- DateTime: 2019/1/15 18:18
---
local UINationGuardianSoulForceItem = BaseClass("UINationGuardianSoulForceItem", UIWrapComponent)
local base = UIWrapComponent
local CROPS_RESET_ST = {
    YES = 1,--可重置
    NO = 2 ,--不可重置
}
local UINationArmyGroupAttItem = require"UI.UINationGuardianSoulForce.Component.UINationArmyGroupAttItem"

local function OnCreate(self)
    base.OnCreate(self)
    --组建初始化
    self.model = self.view.model
    self.ctrl = self.view.ctrl

    self.titleImage_UIImage = self:AddComponent(UIImage, "titleImage_UIImage")
    self.grayMat=self.titleImage_UIImage:GetMat()
    --self.titleImage_UIImage:SetMat(nil)

    self.titleText_UIText = self:AddComponent(UIText, "titleImage_UIImage/titleText_UIText")
    self.SoulForceBack_UIImage = self:AddComponent(UIImage, "SoulForceBack_UIImage", AtlasConfig.DynamicNationTex)
    self.SoulForceIcon_UIImage = self:AddComponent(UIImage, "SoulForceBack_UIImage/SoulForceIcon_UIImage", AtlasConfig.DynamicNationTex)

    self.armyAttrInfo_UIImage = self:AddComponent(UIImage, "armyAttrInfo_UIImage")
    self.armyAttrInfo_UIText = self:AddComponent(UIText, "armyAttrInfo_UIImage/armyAttrInfo_UIText")


    self.armyAttrInfo_UIText:SetText(self.model.ItemSubTitle)

    --self.detailText = self:AddComponent(UIText, "DetailContent/DetailText_UIText")

    self.buttonText = self:AddComponent(UIText, "Button/Text")
    --self.buttonImage = self:AddComponent(UIImage, "Button",AtlasConfig.Common)
    self.buttonImage = self:AddComponent(UIImage, "Button")
    self.button = self:AddComponent(UIButton, "Button")
    self.button:SetOnClick(function()
        self.view:OnOneItemGuardianSoulBtnClick(self.soulForceData, self.model.open_type)
    end)

    self.takeObj = UIUtil.FindTrans(self.transform,"Button/diamondGroup")
    self.takeIcon = self:AddComponent(UIImage,"Button/diamondGroup/order",AtlasConfig.DynamicTex)
    self.takeNum = self:AddComponent(UIText,"Button/diamondGroup/Text_value")

    self.infoText = self:AddComponent(UIText, "infoText") -- 初始军团无法重置

    self.attItemPrefabObj = UIUtil.FindTrans(self.transform,"attritem").gameObject -- 预制体
    self.attItemScrollRoot = UIUtil.FindTrans(self.transform,"armyAttrGroup/armyAttrScrollRect/armyAttrGridContent") -- 存放目录
    self.cacheAttItem = {}
end

local function __EnsureAttItemCount(self,corpsEffectDes)
    local cacheCount = table.length(self.cacheAttItem)
    local needCount
    if corpsEffectDes == nil then
        needCount = 0
    else
        needCount = table.length(corpsEffectDes)
    end
    local createCount = 0
    if cacheCount < needCount then
        createCount = needCount - cacheCount
    end
    --Logger.LogErrorVars("__EnsureAttItemCount : ",createCount," cacheCount : ",cacheCount," needCount : ",needCount," corpsEffectDes : ",corpsEffectDes)
    for i = 1, createCount do
        local itemObj=CS.UnityEngine.GameObject.Instantiate(self.attItemPrefabObj,self.attItemScrollRoot)
        itemObj.name = string.format("attritem(%s)",cacheCount + i)
        --itemObj:SetActive(true)
        local att_itemCtrl= UINationArmyGroupAttItem.New(self,itemObj)
        att_itemCtrl:OnCreate()
        table.insert(self.cacheAttItem,att_itemCtrl)
    end
end

local function __ShowAllCorpsEffectItem(self,corpsEffectDes,corpsEffect,isGray)
    local needCount
    if corpsEffectDes == nil then
        needCount = 0
    else
        needCount = table.length(corpsEffectDes)
    end
    --Logger.LogErrorVars("__ShowAllCorpsEffectItem needCount : ",needCount," corpsEffectDes : ",corpsEffectDes," corpsEffect : ",corpsEffect)
    for i, v in ipairs(self.cacheAttItem) do
        if  i > needCount then
            v:SetActive(false)
        else
            v:SetActive(true)
            local effectValTable = nil
            if corpsEffect ~= nil then
                effectValTable = corpsEffect[i]
            end
            v:Refresh(nil,corpsEffectDes[i],effectValTable,isGray)
        end
    end
end

local function __SetGrayOtherMode(self,isGray)
    if isGray then
        self.titleImage_UIImage:SetMat(self.grayMat)
        self.SoulForceBack_UIImage:SetMat(self.grayMat)
        self.SoulForceIcon_UIImage:SetMat(self.grayMat)
        self.buttonImage:SetMat(self.grayMat)
        --self.buttonImage:SetSpriteName("ui_t_c2_104")
        self.armyAttrInfo_UIImage:SetMat(self.grayMat)
    else
        self.titleImage_UIImage:SetMat(nil)
        self.SoulForceBack_UIImage:SetMat(nil)
        self.SoulForceIcon_UIImage:SetMat(nil)
        self.buttonImage:SetMat(nil)
        --self.buttonImage:SetSpriteName("ui_t_c2_533")
        self.armyAttrInfo_UIImage:SetMat(nil)
    end
end

local function __SetGrayBtnMode(self,isGray)
    if isGray then
        self.buttonImage:SetMat(self.grayMat)
    else
        self.buttonImage:SetMat(nil)
    end
end
-- 组件被复用时回调该函数，执行组件的刷新
local function OnRefresh(self, real_index)
    self.index = real_index
    self.soulForceData = self.model.armyGroupModelDatas[real_index + 1]
    if self.soulForceData == nil then
        return
    end

    self.SoulForceBack_UIImage:SetSpriteName(self.soulForceData.bgImage)
    self.SoulForceIcon_UIImage:SetSpriteName(self.soulForceData.icon)
    self.titleText_UIText:SetText(self.soulForceData.name)
    --ALREADY_LOCK 已解锁
    --self.maskImage.gameObject:SetActive(self.soulForceData.unlock_st == self.model.CROPS_LOCK_ST.NEVER_LOCK)
    -- 刷新文字
    self:__EnsureAttItemCount(self.soulForceData.CorpsEffectDes)

    --local isGray = false
    if self.model.open_type == NationDefine.NATION_GUARDIAN_OPEN_TYPE.TEAM_OPEN_TYPE then -- 队伍转换状态
        if self.soulForceData.unlock_st == self.model.CROPS_LOCK_ST.NEVER_LOCK then
            --isGray = true
            self.button.gameObject:SetActive(false)
            --self.buttonText:SetText("未解锁")
            self.infoText:SetText(self.model.ItemSubBtnUnlock) -- 未解锁 红字
            self:__SetGrayOtherMode(true)
            self:__ShowAllCorpsEffectItem(self.soulForceData.CorpsEffectDes,self.soulForceData.CorpsEffect,true)
            self:__SetGrayBtnMode(true)
        else
            --isGray = false
            if self.model.myTeamData.armyGroupId == self.soulForceData.corpsId then -- 正在使用的军团
                self.button.gameObject:SetActive(false)
                self.infoText:SetText(self.model.ItemSubBtnInUse) -- 使用中 绿色

            else
                self.button.gameObject:SetActive(true)
                self.buttonText:SetText(self.model.ItemSubBtnConvert) -- 转换
                self.takeObj.gameObject:SetActive(false)
                self.infoText:SetText("")


            end
            self:__SetGrayOtherMode(false)
            self:__ShowAllCorpsEffectItem(self.soulForceData.CorpsEffectDes,self.soulForceData.CorpsEffect,false)
            self:__SetGrayBtnMode(false)
        end
    else -- 主界面打开

        if self.soulForceData.unlock_st == self.model.CROPS_LOCK_ST.NEVER_LOCK then
            --isGray = true
            self.button.gameObject:SetActive(true)
            self.buttonText:SetText(self.model.ItemSubBtnLock) -- 解锁
            self.infoText:SetText("")
            self.takeObj.gameObject:SetActive(false)
            self:__SetGrayOtherMode(true)
            self:__ShowAllCorpsEffectItem(self.soulForceData.CorpsEffectDes,self.soulForceData.CorpsEffect,true)
            self:__SetGrayBtnMode(false)
            if self.model.unlock_army_group_number>= self.model.unlock_army_group_maxnumber then
                self:__SetGrayBtnMode(true)
            else
                self:__SetGrayBtnMode(false)
            end
        else
            --isGray = false

            if self.model.InitialCorps == self.soulForceData.corpsId then -- 初始军团无法重置
                self.button.gameObject:SetActive(false)
                self.infoText:SetText(self.model.ItemSubBtnCanNotResetDefault) -- 红字 初始军团无法重置
                --self.takeObj.gameObject:SetActive(false)
            else
                self.button.gameObject:SetActive(true)
                self.buttonText:SetText(self.model.ItemSubBtnReset ) -- 重置
                self.infoText:SetText("")
                self.takeObj.gameObject:SetActive(true)
                if self.model.allItemData[self.soulForceData.reConsume[1].id] ~= nil then
                    self.takeIcon:SetSpriteName(self.model.allItemData[self.soulForceData.reConsume[1].id].Icon)
                end
                self.takeNum:SetText(self.soulForceData.reConsume[1].num)
            end
            self:__SetGrayOtherMode(false)
            self:__ShowAllCorpsEffectItem(self.soulForceData.CorpsEffectDes,self.soulForceData.CorpsEffect,false)
            self:__SetGrayBtnMode(false)
        end
    end

    --self:__SetGrayMode(isGray)

end

local function OnDestroy(self)
    base.OnDestroy(self)
    self.cacheAttItem = nil
end

UINationGuardianSoulForceItem.OnDestroy = OnDestroy
UINationGuardianSoulForceItem.OnCreate = OnCreate
UINationGuardianSoulForceItem.OnRefresh = OnRefresh
UINationGuardianSoulForceItem.__SetGrayOtherMode = __SetGrayOtherMode
UINationGuardianSoulForceItem.__SetGrayBtnMode = __SetGrayBtnMode

UINationGuardianSoulForceItem.__EnsureAttItemCount = __EnsureAttItemCount
UINationGuardianSoulForceItem.__ShowAllCorpsEffectItem = __ShowAllCorpsEffectItem

return UINationGuardianSoulForceItem