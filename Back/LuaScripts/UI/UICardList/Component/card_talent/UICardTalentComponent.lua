---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LJ095.
--- DateTime: 2019/5/8 17:12
---


local UICardTalentComponent=BaseClass("UICardTalentComponent", UIBaseContainer);
local base = UIBaseContainer;

local before_layout_path="TalentBeforeLayout";
local after_layout_path="TalentAfterLayout/TalentAfterLayoutNew";
--local UIMatButton = require "UI.UIComm.Component.UIMatButton"
local itemId = 0
local itemNum = 0

--洗练前界面
local upgrade_btn_path="CostLayout/upgradeBtn";
local talent_title_path="TalentEffectLayout/title/TalentScoreText";
local talent_effect_layout_path="TalentEffectLayout/TalentEffect";
local talent_tip_path="TalentEffectLayout/TipText";
local help_btn_path="TalentEffectLayout/helpBtn";
local talent_skill_layout_path="TalentSkillLayout/StarAttr";
local talent_cost_layout_path="CostLayout/ItemGroup";

--洗练后界面
local cache_talent_save_btn_path="saveBtn";
local cache_talent_cancel_btn_path="cancelBtn";
local cache_talent_title_path="TalentEffectLayout/title_1/TalentScoreText";
local cache_talent_effect_path="TalentEffectLayout/TalentEffect";
local cache_talent_skill_layout_path="TalentSkillLayout/StarAttr";

---洗练
local function SendCardTalentRequest(self)
    local msg_id = MsgIDDefine.PBCARD_CARD_XILIAN_REQUEST
    local msg = MsgIDMap[msg_id]()
    msg.cardId = self.cardId
    self.canbtn=false
    NetManager:GetInstance():SendMessage(msg_id, msg ,function (msg_obj)
        --Logger.Log("开始洗脸")
        if msg_obj.OpCode ~= 0 then
            self.canbtn=true
            Logger.Log("ERROR PBCARD_CARD_XILIAN_REQUEST~~")
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            return
        end
        self.btntype=2
        BackpackData:GetInstance():UpdateItemData(itemId, -itemNum)
        CardData:GetInstance():UpDateXILianTemp(self.cardId,msg_obj.Packages)
        DataManager:GetInstance():Broadcast(DataMessageNames.ON_CARD_XILIAN_UPDATE)
        self.parent:SetTopRightAndLeftState(false,false)
        self.afterCacheObj.transform.gameObject:SetActive(true)
        self.returnbtn_bg.gameObject:SetActive(true)

    end )
end

---保存或者放弃洗练效果
local function SendSaveOrWaiveCardTalentRequest(self,_type,unclose)

    local msg_id = MsgIDDefine.PBCARD_CARD_XILIAN_RESULT_REQUEST
    local msg = MsgIDMap[msg_id]()
    msg.cardId = self.cardId
    msg.type = _type
    self.canbtn=false
    NetManager:GetInstance():SendMessage(msg_id, msg ,function (msg_obj)
        --Logger.Log("放弃或者保存")
        if msg_obj.OpCode ~= 0 then
            self.canbtn=true
            Logger.Log("ERROR PBCARD_CARD_XILIAN_RESULT_REQUEST~~")
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            return
        end
        CardData:GetInstance():UpDateXILian(self.cardId,_type)
        if _type==1 then
            --保存
            self.btntype=1

        else
            --放弃
            self.canbtn=true
        end
        DataManager:GetInstance():Broadcast(DataMessageNames.ON_CARD_XILIAN_UPDATE)
        if not unclose then
            --直接点击
            self.parent:SetTopRightAndLeftState(true,true)
            self.afterCacheObj.transform.gameObject:SetActive(false)
            self.returnbtn_bg.gameObject:SetActive(false)
        else
            local coinData = BackpackData:GetInstance():GetItemDataById(itemId)
            local haveCoinNum = 0
            if coinData ~= nil then
                haveCoinNum = coinData.haveNum
                if haveCoinNum >= itemNum then
                    self:SendCardTalentRequest()
                else
                    UISpecial:GetInstance():UITipText("材料不足")
                    return
                end
            else
                UISpecial:GetInstance():UITipText("材料不足")
            end
        end
    end )
end



local function OnCreate(self,_holderSelf)
    base.OnCreate(self)
    self.parent=_holderSelf
    local rectTrans=UIUtil.FindComponent(CS.UnityEngine.GameObject.Find("UIRoot/BackgroudLayer").transform,typeof(CS.UnityEngine.RectTransform))
    self.sceen_width =rectTrans.sizeDelta.x
    self.sceen_height = rectTrans.sizeDelta.y
    self.talentBeforLayout=self:AddComponent(UIBaseContainer,before_layout_path);
    self.talentCacheLayout=self:AddComponent(UIBaseContainer,after_layout_path);
    self.afterCacheObj = self:AddComponent(UIBaseContainer,"TalentAfterLayout")
    self.talentCacheLayoutOld = self:AddComponent(UIBaseContainer,"TalentAfterLayout/TalentAfterLayoutOld")
    -----洗练前界面
    self.upgradeBtn=self.talentBeforLayout:AddComponent(UIButton,upgrade_btn_path);
    self.upgradeBtn:SetOnClick(function()
        if self.xilianData.isShowResultPanel then
            self.parent:SetTopRightAndLeftState(false,false)
            self.afterCacheObj.transform.gameObject:SetActive(true)
            self.returnbtn_bg.gameObject:SetActive(true)

        else
            local coinData = BackpackData:GetInstance():GetItemDataById(itemId)
            local haveCoinNum = 0
            if coinData ~= nil then
                haveCoinNum = coinData.haveNum
                if haveCoinNum >= itemNum then
                    self:SendCardTalentRequest()
                else
                    UISpecial:GetInstance():UITipText("材料不足")
                    return
                end
            else
                UISpecial:GetInstance():UITipText("材料不足")
            end
        end
    end)
    self.upgradeBtnText = self.talentBeforLayout:AddComponent(UIText,"CostLayout/upgradeBtn/upgradeBtnText")
    self.talentTitle=self.talentBeforLayout:AddComponent(UIText,talent_title_path);
    self.talentEffectLayout=self.talentBeforLayout:AddComponent(UIBaseContainer,talent_effect_layout_path);
    self.talentTipText=self.talentBeforLayout:AddComponent(UIText,talent_tip_path);
    self.helpBtn=self.talentBeforLayout:AddComponent(UIButton,help_btn_path);
    self.helpBtn:SetOnClick(function()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UICardTalentTip)
    end)
    self.helpBtnold=self.talentCacheLayoutOld:AddComponent(UIButton,"TalentEffectLayoutOld/helpBtnOld")
    self.helpBtnold:SetOnClick(function()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UICardTalentTip)
    end)
    self.talentSkillLayout=self.talentBeforLayout:AddComponent(UIBaseContainer,talent_skill_layout_path);
    self.talentCostLayout=self.talentBeforLayout:AddComponent(UIBaseContainer,talent_cost_layout_path);
    self.talentEffectList={};
    local count=self.talentEffectLayout.transform.childCount;
    for i = 0, count-1 do
        local tempItem=self.talentEffectLayout:AddComponent(UIBaseContainer,i);
        local tempName=tempItem:AddComponent(UIText,"TalentName");
        local tempSliderImg=tempItem:AddComponent(UISlider,"BloodImg");
        local tempPrcText=tempItem:AddComponent(UIText,"PrcText");
        local tempStateImg=tempItem:AddComponent(UIImage,"value_qua",AtlasConfig.Language);
        table.insert(self.talentEffectList,{talentName=tempName,sliderImg=tempSliderImg,prcText=tempPrcText,stateImg=tempStateImg});
    end
    self.skillList={};
    count=self.talentSkillLayout.transform.childCount;
    for i = 0, count-1 do
        local tempItem=self.talentSkillLayout:AddComponent(UIBaseContainer,i)
        local tempIcon=tempItem:AddComponent(UIImage,"Icon",AtlasConfig.DynamicTex)
        local tempFrame=tempItem:AddComponent(UIImage,"",AtlasConfig.DynamicTex)
        local info_iconPress = tempItem:AddComponent(UIEventTrigger,"Icon")
        info_iconPress:SetOnLongPress(function()
            local costid=self.xilianData.talentSkillList[i+1].id
            if costid then
                UIManager:GetInstance():OpenWindow(UIWindowNames.UISkillTips,costid,nil,nil, self.cardId,self.xilianData.talentSkillList[i+1])
            end
        end,(function()
            UIManager:GetInstance():CloseWindow(UIWindowNames.UISkillTips)
        end),true)
        local tempEmpty=UIUtil.FindTrans(tempItem.transform,"empty")
        local lock = UIUtil.FindTrans(tempItem.transform,"lock")
        local zhuanText = tempItem:AddComponent(UIText,"jueText")
        table.insert(self.skillList,{frame=tempFrame,icon=tempIcon,emptyObj=tempEmpty,lockObj = lock,item = tempItem,zhuan = zhuanText})
    end
    self.costList={}
    count=self.talentCostLayout.transform.childCount
    for i = 0, count-1 do
        local tempItem=self.talentCostLayout:AddComponent(UIBaseContainer,i)
        local tempFrame=tempItem:AddComponent(UIImage,"",AtlasConfig.DynamicTex)
        local tempIcon=tempItem:AddComponent(UIImage,"Icon",AtlasConfig.DynamicTex)
        local btn = tempItem:AddComponent(UIButton,"Icon")
        local tempNumText=tempItem:AddComponent(UIText,"chipNum")
        local tempChipImg=tempItem:AddComponent(UIBaseContainer,"chipImg")
        table.insert(self.costList,{frame=tempFrame,icon=tempIcon,btn = btn,numText=tempNumText,item = tempItem,chip=tempChipImg})
    end
    ----洗练缓存界面做侧数据
    self.upValText = self.talentCacheLayout:AddComponent(UIText,"TalentEffectLayout/title_1/TalentScoreText/upVal")
    self.upValImg=self.talentCacheLayout:AddComponent(UIImage,"TalentEffectLayout/title_1/TalentScoreText/upImg",AtlasConfig.Language)
    self.cacheTalentSaveBtn=self.talentCacheLayout:AddComponent(UIButton,cache_talent_save_btn_path)
    self.cacheTalentSaveBtn:SetOnClick(function ()
        self:SendSaveOrWaiveCardTalentRequest(1)
    end)
    self.cacheTalentCancelBtn=self.talentCacheLayout:AddComponent(UIButton,cache_talent_cancel_btn_path);
    self.cacheTalentCancelBtn:SetOnClick(function ()
        local string_key =UserData:GetInstance().roleID.."Talent"
        local boo=true
        if CS.UnityEngine.PlayerPrefs.HasKey(string_key) then
            boo=CS.UnityEngine.PlayerPrefs.GetInt(string_key)~=2
        end
        if  self.xilianData.talentScore<self.xilianData.talentCacheScore and boo then
            --当前的小于测试的  Notice
                UIManager:GetInstance():OpenTwoButtonTip("提示","确定丢弃更高的天赋评分结果吗？","确定","取消",function()
                    self:SendSaveOrWaiveCardTalentRequest(2)
                end,nil,true,string_key)
        else
            self:SendSaveOrWaiveCardTalentRequest(2)
        end
    end)
    self.cacheTalentTitle=self.talentCacheLayout:AddComponent(UIText,cache_talent_title_path);
    self.cacheTalentTitleScore=self.talentCacheLayout:AddComponent(UIText,"TalentEffectLayout/title_1/TalenTempScore");
    self.cacheTalentEffectLayout=self.talentCacheLayout:AddComponent(UIBaseContainer,cache_talent_effect_path);
    self.cacheTalentSkillLayout=self.talentCacheLayout:AddComponent(UIBaseContainer,cache_talent_skill_layout_path);
    self.cacheTalentEffectList={};
    count=self.cacheTalentEffectLayout.transform.childCount;
    for i = 0, count-1 do
        local tempItem=self.cacheTalentEffectLayout:AddComponent(UIBaseContainer,i);
        local tempNameText=tempItem:AddComponent(UIText,"TalentName");
        local tempSliderImg=tempItem:AddComponent(UISlider,"BloodImg");
        local tempPrcText=tempItem:AddComponent(UIText,"PrcText");
        local tempStateImg=tempItem:AddComponent(UIImage,"value_qua",AtlasConfig.Language);
        local tempPrctext=tempItem:AddComponent(UIText,"value_text");
        table.insert(self.cacheTalentEffectList,{talentNameText=tempNameText,sliderImg=tempSliderImg,prcText=tempPrcText,stateImg=tempStateImg,stateText=tempPrctext});
    end
    self.cacheTalentSkillList={};
    count=self.cacheTalentSkillLayout.transform.childCount;
    for i = 0, count-1 do
        local tempItem=self.cacheTalentSkillLayout:AddComponent(UIBaseContainer,i);
        local tempIcon=tempItem:AddComponent(UIImage,"Icon",AtlasConfig.DynamicTex);
        local info_iconPress = tempItem:AddComponent(UIEventTrigger,"Icon")
        info_iconPress:SetOnLongPress(function()
            local costid=self.xilianData.cacheTalentSkillList[i+1].id
            if costid then
                UIManager:GetInstance():OpenWindow(UIWindowNames.UISkillTips,costid,nil,true, self.cardId,self.xilianData.cacheTalentSkillList[i+1])
            end
        end,(function()
            UIManager:GetInstance():CloseWindow(UIWindowNames.UISkillTips)
        end),true)
        local tempFrame =tempItem:AddComponent(UIImage,"",AtlasConfig.DynamicTex);
        local tempEmpty=UIUtil.FindTrans(tempItem.transform,"empty");
        local zhuanText = tempItem:AddComponent(UIText,"jueText")
        local tempLock=UIUtil.FindTrans(tempItem.transform,"lock");
        table.insert(self.cacheTalentSkillList,{frame=tempFrame,icon=tempIcon,emptyObj=tempEmpty,lockObj=tempLock,item =tempItem, zhuan = zhuanText});
    end

    ---洗练右侧数据
    self.upgradeBtnOld=self.talentCacheLayoutOld:AddComponent(UIButton,"CostLayoutOld/upgradeBtnOld");
    self.upgradeBtnOld:SetOnClick(function()
        --点击右侧洗脸
        if self.afterCacheObj.gameObject.activeInHierarchy then
            --先放弃
            local string_key =UserData:GetInstance().roleID.."Talent"
            local boo=true
            if CS.UnityEngine.PlayerPrefs.HasKey(string_key) then
                boo=CS.UnityEngine.PlayerPrefs.GetInt(string_key)~=2
            end
            if  self.xilianData.talentScore<self.xilianData.talentCacheScore and boo then
                --当前的小于测试的  Notice
                    UIManager:GetInstance():OpenTwoButtonTip("提示","确定丢弃更高的天赋评分结果吗？","确定","取消",function()
                        self:SendSaveOrWaiveCardTalentRequest(2,true)
                    end,nil,true,string_key)
            else
                self:SendSaveOrWaiveCardTalentRequest(2,true)
            end
            return
        end

        local coinData = BackpackData:GetInstance():GetItemDataById(itemId)
        local haveCoinNum = 0
        if coinData ~= nil then
            haveCoinNum = coinData.haveNum
            if haveCoinNum >= itemNum then
                self:SendCardTalentRequest()
            else
                UISpecial:GetInstance():UITipText("材料不足")
                return
            end
        else
            UISpecial:GetInstance():UITipText("材料不足")
        end

    end)
    self.talentTitleOld=self.talentCacheLayoutOld:AddComponent(UIText,"TalentEffectLayoutOld/titleOld/TalentScoreTextOld");
    self.talentEffectLayoutOld = self.talentCacheLayoutOld:AddComponent(UIBaseContainer,"TalentEffectLayoutOld/TalentEffectOld");
    self.talentSkillLayoutOld=self.talentCacheLayoutOld:AddComponent(UIBaseContainer,"TalentSkillLayoutOld/StarAttrOld");
    self.talentCostLayoutOld=self.talentCacheLayoutOld:AddComponent(UIBaseContainer,"CostLayoutOld/ItemGroupOld");
    self.talentEffectListOld={};
    local count=self.talentEffectLayoutOld.transform.childCount;
    for i = 0, count-1 do
        local tempItem=self.talentEffectLayoutOld:AddComponent(UIBaseContainer,i);
        local tempName=tempItem:AddComponent(UIText,"TalentName");
        local tempSliderImg=tempItem:AddComponent(UISlider,"BloodImg");
        local tempPrcText=tempItem:AddComponent(UIText,"PrcText");
        local tempStateImg=tempItem:AddComponent(UIImage,"value_qua",AtlasConfig.Language);
        table.insert(self.talentEffectListOld,{talentName=tempName,sliderImg=tempSliderImg,prcText=tempPrcText,stateImg=tempStateImg});
    end
    self.skillListOld={}
    count=self.talentSkillLayoutOld.transform.childCount;
    for i = 0, count-1 do
        local tempItem=self.talentSkillLayoutOld:AddComponent(UIBaseContainer,i)
        local tempIcon=tempItem:AddComponent(UIImage,"Icon",AtlasConfig.DynamicTex)
        local info_iconPress = tempItem:AddComponent(UIEventTrigger,"Icon")
        info_iconPress:SetOnLongPress(function()
            local costid=self.xilianData.talentSkillList[i+1].id
            if costid then
                UIManager:GetInstance():OpenWindow(UIWindowNames.UISkillTips,costid,nil,nil, self.cardId,self.xilianData.talentSkillList[i+1])
            end
        end,(function()
            UIManager:GetInstance():CloseWindow(UIWindowNames.UISkillTips)
        end),true)
        local tempFrame=tempItem:AddComponent(UIImage,"",AtlasConfig.DynamicTex)
        local tempEmpty=UIUtil.FindTrans(tempItem.transform,"empty")
        local lock = UIUtil.FindTrans(tempItem.transform,"lock")
        local zhuanText = tempItem:AddComponent(UIText,"jueText")
        table.insert(self.skillListOld,{frame=tempFrame,icon=tempIcon,emptyObj=tempEmpty,lockObj = lock,item = tempItem,zhuan = zhuanText})
    end
    self.costListOld={}
    count=self.talentCostLayoutOld.transform.childCount
    for i = 0, count-1 do
        local tempItem=self.talentCostLayoutOld:AddComponent(UIBaseContainer,i)
        local tempFrame=tempItem:AddComponent(UIImage,"",AtlasConfig.DynamicTex)
        local tempIcon=tempItem:AddComponent(UIImage,"Icon",AtlasConfig.DynamicTex)
        local tempNumText=tempItem:AddComponent(UIText,"chipNum")
        local tempChipImg=tempItem:AddComponent(UIBaseContainer,"chipImg")
        table.insert(self.costListOld,{frame=tempFrame,icon=tempIcon,numText=tempNumText,item = tempItem,chip=tempChipImg})
    end
    self.returnBtn =self:AddComponent(UIButton,"Image/returnBtn")
    self.returnbtn_bg=UIUtil.FindTrans(self.transform,"Image")
    self.returnbtn_bg.transform.anchoredPosition=Vector3.New(-self.sceen_width,self.sceen_height/2,0)
    self.returnBtn:SetOnClick(function ()
        self.parent:SetTopRightAndLeftState(true,true)
        self.afterCacheObj.transform.gameObject:SetActive(false)
        self.returnbtn_bg.gameObject:SetActive(false)

    end)
    self.afterCacheObj.transform.gameObject:SetActive(false)
    self.returnbtn_bg.gameObject:SetActive(false)
    self.canbtn=true
    self:OnRefresh()
end

local function OnRefresh(self)
    if self.canbtn then
        if self.talentTitle_eff~=nil then
            self.talentTitle_eff.effect.gameObject:SetActive(false)
            end
        if self.talentskill_eff~=nil then
            self.talentskill_eff.effect.gameObject:SetActive(false)
            end
        if self.TemptalentTitle_eff~=nil then
            self.TemptalentTitle_eff.effect.gameObject:SetActive(false)
            end
        if self.TemptalentSkill_eff~=nil then
            self.TemptalentSkill_eff.effect.gameObject:SetActive(false)
            end
    else
        LJAudioManger:GetInstance():PlayVoice("UI_LevelUp_01")
        if self.btntype==2 then
            --Temp  开着呢
            if self.TemptalentTitle_eff~=nil then
                self.TemptalentTitle_eff.effect.gameObject:SetActive(false)
                self.TemptalentTitle_eff.effect.gameObject:SetActive(true)
            else
                self.TemptalentTitle_eff = self:AddComponent(UIEffect, "TalentAfterLayout/TalentAfterLayoutNew/TalentEffectLayout/title_1", 1, EffectConfig.UICardUpLightHandler)
            end
            if self.TemptalentSkill_eff~=nil then
                self.TemptalentSkill_eff.effect.gameObject:SetActive(false)
                self.TemptalentSkill_eff.effect.gameObject:SetActive(true)
            else
                self.TemptalentSkill_eff = self:AddComponent(UIEffect, "TalentAfterLayout/TalentAfterLayoutNew/TalentSkillLayout/title_2", 1, EffectConfig.UICardUpLightHandler)
            end
        else
            if self.talentTitle_eff~=nil then
                self.talentTitle_eff.effect.gameObject:SetActive(false)
                self.talentTitle_eff.effect.gameObject:SetActive(true)
            else
                self.talentTitle_eff = self:AddComponent(UIEffect, "TalentBeforeLayout/TalentEffectLayout/title", 1, EffectConfig.UICardUpLightHandler)
            end
            if self.talentskill_eff~=nil then
                self.talentskill_eff.effect.gameObject:SetActive(false)
                self.talentskill_eff.effect.gameObject:SetActive(true)
            else
                self.talentskill_eff = self:AddComponent(UIEffect, "TalentBeforeLayout/TalentSkillLayout/title2", 1, EffectConfig.UICardUpLightHandler)
            end
        end


    end
    self.cardId = self.parent.model.select_card_id
    local data=self.parent.model.talentData;
    self.xilianData = data
    if data == nil then
         return
    end
    if data.isShowResultPanel then
        self.upgradeBtnText:SetText("继续洗练")
        self.talentCostLayout.gameObject:SetActive(false)
    else
        self.talentCostLayout.gameObject:SetActive(true)
        self.upgradeBtnText:SetText("洗  练")
    end
    --self.afterCacheObj.transform.gameObject:SetActive(data.isShowResultPanel)
    if data~=nil then
        if self.canbtn then
            self.talentTitle:SetText(data.talentScore);
        else
            self.talentTitle:SetText(data.talentScore,true);
        end

        --天赋效果
        for i, v in ipairs(self.talentEffectList) do
            if data.talentEffectList[i]~=nil then
                local num=data.talentEffectList[i].prc/data.talentEffectList[i].max
                v.talentName:SetText(data.talentEffectList[i].name);
                if self.canbtn then
                    v.sliderImg:SetValue(num);
                else
                    --刷新
                    v.sliderImg:SetValue(num,true);
                end
                v.prcText:SetText( math.floor(data.talentEffectList[i].prc).."%<color=#3F793F>（上限"..math.floor(data.talentEffectList[i].max).."%）</color>")
                v.stateImg:SetSpriteName(data.talentEffectList[i].state);
            end
        end
        --天赋技能
        for i, v in ipairs(self.skillList) do
            if data.talentSkillList[i]~=nil then
                v.icon.gameObject:SetActive(true)
                v.icon:SetSpriteName(data.talentSkillList[i].icon)
                v.lockObj.gameObject:SetActive(false)
                v.frame:SetSpriteName(data.talentSkillList[i].frame)
                --v.emptyObj.gameObject:SetActive(data.talentSkillList[i].isExc)
                v.zhuan.gameObject:SetActive(data.talentSkillList[i].isExc)
            else
                v.icon.gameObject:SetActive(false)
                v.lockObj.gameObject:SetActive(false)
                v.zhuan.gameObject:SetActive(false)
                v.frame:SetSpriteName(SpriteDefine._BG_Init)
            end
        end
        --洗练消耗
        for i, v in ipairs(self.costList) do
            if data.costList[i]~=nil then
                itemId = data.costList[i].id
                itemNum = data.costList[i].count
                v.item.gameObject:SetActive(true)
                v.frame:SetSpriteName(data.costList[i].frame)
                v.icon:SetSpriteName(data.costList[i].icon)
                v.numText:SetText(data.costList[i].num)
                v.chip.gameObject:SetActive(data.costList[i].isChip)
                v.btn:SetOnClick(function ()
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemJumpTip,itemId)
                end)
            else
                v.item.gameObject:SetActive(false)
                v.frame:SetSpriteName(SpriteDefine._BG_Init)
            end
        end
        ---洗练过之后的
        if data.isShowResultPanel then
            local sub=data.talentCacheScore - data.talentScore
            if sub > 0 then
                self.upValText:SetText("<color=#3F793F>"..data.talentCacheScore - data.talentScore.."</color>")
                self.upValImg:SetSpriteName("ui_t_c2_063")
                if not self.upValImg.gameObject.activeInHierarchy then
                    self.upValImg.gameObject:SetActive(true)
                end
            elseif sub <0 then
                self.upValText:SetText("<color=#DF4C4C>"..data.talentCacheScore - data.talentScore.."</color>")
                self.upValImg:SetSpriteName("ui_t_c2_069")
                if not self.upValImg.gameObject.activeInHierarchy then
                    self.upValImg.gameObject:SetActive(true)
                end
            else
                self.upValText:SetText("<color=#3F793F>0</color>")
                if self.upValImg.gameObject.activeInHierarchy then
                    self.upValImg.gameObject:SetActive(false)
                end
            end
            if self.canbtn then
                self.cacheTalentTitleScore:SetText(data.talentCacheScore)
            else
                self.cacheTalentTitleScore:SetText(data.talentCacheScore,true)
            end
            --self.cacheTalentTitle:SetText(string.format("天赋评分: %s",data.talentCacheScore) )
            --缓存天赋效果
            for i, v in ipairs(self.cacheTalentEffectList) do
                if data.cacheTalentEffectList[i]~=nil then
                    local num=data.cacheTalentEffectList[i].prc/data.cacheTalentEffectList[i].max
                    v.talentNameText:SetText(data.cacheTalentEffectList[i].name);
                    if self.canbtn then
                        v.sliderImg:SetValue(num);
                    else
                        --刷新
                        v.sliderImg:SetValue(num,true);
                    end

                    v.prcText:SetText(math.floor(data.cacheTalentEffectList[i].prc).."%<color=#3F793F>（上限"..math.floor(data.cacheTalentEffectList[i].max).."%）</color>");
                    local sub=   math.floor((data.cacheTalentEffectList[i].prc-data.talentEffectList[i].prc))
                    if sub>0 then
                        v.stateImg:SetSpriteName("ui_t_c2_063");
                        if not v.stateImg .gameObject.activeInHierarchy then
                            v.stateImg.gameObject:SetActive(true)
                        end

                        v.stateText:SetText("<color=#3F793F>"..sub.."%</color>" );
                    elseif  sub<0 then
                        v.stateImg:SetSpriteName("ui_t_c2_069");
                        if not v.stateImg .gameObject.activeInHierarchy then
                            v.stateImg.gameObject:SetActive(true)
                        end

                        v.stateText:SetText("<color=#3F793F>"..sub.."%</color>" );
                    else
                        if v.stateImg .gameObject.activeInHierarchy then
                            v.stateImg.gameObject:SetActive(false)
                        end
                        v.stateText:SetText("<color=#3F793F>0%</color>");
                    end

                end
            end
            --缓存天赋技能
            for i, v in ipairs(self.cacheTalentSkillList) do
                if data.cacheTalentSkillList[i]~=nil then
                    v.icon.gameObject:SetActive(true)
                    v.icon:SetSpriteName(data.cacheTalentSkillList[i].icon)
                    v.lockObj.gameObject:SetActive(false)
                    v.frame:SetSpriteName(data.cacheTalentSkillList[i].frame)
                    --v.emptyObj.gameObject:SetActive(data.cacheTalentSkillList[i].isEmpty)
                    v.zhuan.gameObject:SetActive(data.cacheTalentSkillList[i].isExc)
                else
                    v.icon.gameObject:SetActive(false)
                    v.lockObj.gameObject:SetActive(false)
                    v.zhuan.gameObject:SetActive(false)
                    v.frame:SetSpriteName(SpriteDefine._BG_Init)
                end
            end

            ---洗练右侧效果数据
            self.talentTitleOld:SetText(string.format("天赋评分: %s",data.talentScore) );
            --天赋效果
            for i, v in ipairs(self.talentEffectListOld) do
                if data.talentEffectList[i]~=nil then
                    local num=data.talentEffectList[i].prc/data.talentEffectList[i].max
                    v.talentName:SetText(data.talentEffectList[i].name);
                    v.sliderImg:SetValue(num);
                    v.prcText:SetText(math.floor(data.talentEffectList[i].prc).."%<color=#3F793F>（上限"..math.floor(data.talentEffectList[i].max).."%）</color>");
                    v.stateImg:SetSpriteName(data.talentEffectList[i].state);
                end
            end
            --天赋技能
            for i, v in ipairs(self.skillListOld) do
                if data.talentSkillList[i]~=nil then
                    v.icon.gameObject:SetActive(true)
                    v.icon:SetSpriteName(data.talentSkillList[i].icon)
                    v.lockObj.gameObject:SetActive(false)
                    v.frame:SetSpriteName(data.talentSkillList[i].frame)
                    --v.emptyObj.gameObject:SetActive(data.talentSkillList[i].isExc)
                    v.zhuan.gameObject:SetActive(data.talentSkillList[i].isExc)
                else
                    v.icon.gameObject:SetActive(false)
                    v.lockObj.gameObject:SetActive(false)
                    v.zhuan.gameObject:SetActive(false)
                    v.frame:SetSpriteName(SpriteDefine._BG_Init)
                end
            end
            --洗练消耗
            for i, v in ipairs(self.costListOld) do
                if data.costList[i]~=nil then
                    itemId = data.costList[i].id
                    itemNum = data.costList[i].count
                    v.item.gameObject:SetActive(true)
                    v.frame:SetSpriteName(data.costList[i].frame)
                    v.icon:SetSpriteName(data.costList[i].icon)
                    v.numText:SetText(data.costList[i].num)
                    v.chip.gameObject:SetActive(data.costList[i].isChip)
                else
                    v.item.gameObject:SetActive(false)
                    v.frame:SetSpriteName(SpriteDefine._BG_Init)
                end
            end
        end
    end
    self.canbtn=true
end
local function OnDisable(self)

end
local function OnDestroy(self)
    --主界面DesTory 触发

end
UICardTalentComponent.OnDestroy= OnDestroy
UICardTalentComponent.OnDisable=OnDisable
UICardTalentComponent.SendSaveOrWaiveCardTalentRequest = SendSaveOrWaiveCardTalentRequest
UICardTalentComponent.SendCardTalentRequest = SendCardTalentRequest
UICardTalentComponent.OnCreate = OnCreate
UICardTalentComponent.OnRefresh = OnRefresh
return UICardTalentComponent