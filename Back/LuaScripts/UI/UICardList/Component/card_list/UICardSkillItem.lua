---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019/5/9 14:57
local UICardSkillItem = BaseClass(" UICardSkillItem", UIBaseContainer);
local base = UIBaseContainer
local skill_data=DataUtil.GetData("skill")
local allCardData = DataUtil.GetData("card")
local function FilterSkillList(self, _crystalType)
    local tempData
    self.withoutSortList = {}
    for i, v in ipairs(SkillData:GetInstance().skills) do
        print("SkillData:GetInstance().skills..111")
    end

    for _, v in pairs(SkillData:GetInstance().skills) do
        if v.skillType == 2 then--插槽技能
            for i = 1, #v.wearRange do
                if v.wearRange[i] == _crystalType then
                    table.insert(self.withoutSortList, v)
                    break
                end
            end
        end
    end
    table.sort(self.withoutSortList,function (a,b)
        if a.id==self.skillID or b.id==self.skillID then
            return a.id==self.skillID
        else
            if  a.cardId>0 and  b.cardId>0 then
                --if a.level==b.level then
                if a.quality==b.quality then
                    return a.templateId>b.templateId
                else
                    return a.quality>b.quality
                end
                --else
                --  return a.level>b.level
                --end
                return a.CardId >b.CardId
            else
                if a.cardId>0 then
                    return false
                elseif b.cardId >0 then
                    return true
                else
                    --都没有穿在身上
                    if a.quality==b.quality then
                        return a.templateId>b.templateId
                    else
                        return a.quality>b.quality
                    end
                end
            end
        end
    end)

    self.alreadySortList = { {}, {}, {}, {} }
    for i = 1, #self.withoutSortList do
        if SkillData:GetInstance():CheckSkillIsShow(self.withoutSortList[i].id) then
            table.insert(self.alreadySortList[self.withoutSortList[i].skillEffectType], self.withoutSortList[i])
        end
    end
end
--检测是否拥有技能
local function CheckHaveSkill(self,_cardId,_blankPosition)
    print("检测技能")
    local cardData = CardData:GetInstance().cards[_cardId]
    local isHaveSkill=true;
    if cardData ~= nil then
        FilterSkillList(self,cardData.crystalType)
        print(#self.alreadySortList[_blankPosition])
        if _blankPosition>0 and #self.alreadySortList[_blankPosition]==0 then
            UISpecial:GetInstance():UITipText("没有该类型技能")
            isHaveSkill=false;
        end
    end
    return isHaveSkill;
end

local function OnCreate(self,parent)
    base.OnCreate(self);
    self.parent=parent
    self.cry_img=self:AddComponent(UIImage,"icon/crystal",AtlasConfig.DynamicTex)
    self.cry_num=self:AddComponent(UIText,"icon/num")
    self.lock=UIUtil.FindTrans(self.transform,"lock")
    self.add=UIUtil.FindTrans(self.transform,"add")
    self.effectObj = self:AddComponent(UIEffect, "", 1, EffectConfig.UICardIconShow,function ()
        if  self.effectObj ~= nil then
            self.effectObj.effect.gameObject:SetActive(false)
        end
    end)
    self.red=UIUtil.FindTrans(self.transform,"redpoint")
    self.skilltype=self:AddComponent(UIImage,"icon/Image",AtlasConfig.Language)
    self.frame=self:AddComponent(UIImage,"",AtlasConfig.DynamicTex)
    self.icon=self:AddComponent(UIImage,"icon",AtlasConfig.DynamicTex )
    self.btn=self:AddComponent(UIButton,"")
    self.btn:SetOnClick(function ()
        if self.skillData then
            if self.skillData.skillType==1 and self.skillData.havedata then
                --天赋技能  转到技能列表
                DataManager:GetInstance():Broadcast(DataMessageNames.ON_NEWUICARD_CLICKVIEW_SKILL,self.index)
            elseif self.skillData.skillType == 2 and  self.skillData.id==0 then
                --武灵技替换列表界面
                if CheckHaveSkill(self,self.cardID, self.skillData.blankPosition) then
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UILearnSkill, self.cardID, self.skillData.blankPosition)
                end

            elseif self.skillData.skillType == 2 and  self.skillData.id~=0 then
                --武灵技替换列表界面
                if CheckHaveSkill(self,self.cardID, self.skillData.blankPosition) then
                    UIManager:GetInstance():OpenWindow(UIWindowNames.UILearnSkill, self.cardID, self.skillData.blankPosition)
                end

                --UIManager:GetInstance():OpenWindow(UIWindowNames.UISkillInfo, self.skillData.id, self.skillData.blankPosition, self.cardID)
            elseif self.skillData.skillType == 2 and  not self.skillData.unlock then
                --武灵技替换列表界面
            end
        end
    end)
    self.gray=self.icon:GetMat()
end
local function SetFrameImage(self,selfSkill)
    if selfSkill == nil then
        if self.index == 2 then
            self.frame:SetSpriteName(SpriteDefine._BG_SKill_Yin)
        elseif self.index == 3 then
            self.frame:SetSpriteName(SpriteDefine._BG_Skill_Yang)
        else
            self.frame:SetSpriteName(SpriteDefine._BG_Init)
        end
    else
        self.frame:SetSpriteName(SpriteDefine:GetItemQualityFrameByType(selfSkill.quality))
    end

end
local function OnRefresh(self,skilldata,index,_id)
   -- { havedata=false,id = cardStaticData.Skill[i], unlock = false, skillType = 1, unlockLevel = _unlockLevel, blankPosition = -1 ,cardType=cardStaticData.Type
    self.index=index
    self.skillData=skilldata
    self.cardID=  self.parent.model.select_card_id
    if index==1 then

        self.red.gameObject:SetActive(RedPointData:GetInstance():GetRedState(tostring(self.cardID).."_2"))
    elseif index==2 then

        self.red.gameObject:SetActive(RedPointData:GetInstance():GetRedState(tostring(self.cardID).."_2_1"))
    elseif index==3then

        self.red.gameObject:SetActive(RedPointData:GetInstance():GetRedState(tostring(self.cardID).."_2_2"))
    end
    if skilldata then
        if skilldata .unlock then
            ---已解
            local selfSkill = SkillData:GetInstance().skills[skilldata.id]
            if selfSkill ~= nil then
                self.icon:SetMat(nil)
                if selfSkill.skillType == 2 and skilldata.id == _id then --插槽技能
                    if self.effectObj ~= nil then
                        self.effectObj.effect.gameObject:SetActive(true)
                    end
                    TimerManager:GetInstance():SimpleTimerArgs(0.5,function()
                        self.effectObj.effect.gameObject:SetActive(false)
                    end,nil,true)
                else
                    if self.effectObj ~= nil and self.effectObj.effect.gameObject ~= nil then
                        self.effectObj.effect.transform.gameObject:SetActive(false)
                    end
                end
                if skilldata.skillType == 1 then
                    if selfSkill.crystalCost>0 and selfSkill.fireType ~= 2 then
                        self.cry_img.gameObject:SetActive(true)
                        self.cry_num.gameObject:SetActive(true)
                        local cardData = allCardData[self.cardID]
                        self.cry_img:SetMat(nil)
                        self.cry_img:SetSpriteName(SpriteDefine:GetCrystalIconByType(cardData.CrystalType))
                        self.cry_num:SetText(math.floor(selfSkill.crystalCost))
                    else
                        self.cry_img.gameObject:SetActive(false)
                        self.cry_num.gameObject:SetActive(false)
                    end
                end
                self.icon.gameObject:SetActive(true)
                self.lock.gameObject:SetActive(false)
                self.add.gameObject:SetActive(false)
                self.icon:SetSpriteName(selfSkill.icon)
                --self.frame:SetSpriteName(SpriteDefine:GetItemQualityFrameByType(selfSkill.quality))
                self:SetFrameImage(selfSkill)
                if selfSkill.showFireType==2 or selfSkill.showFireType==3 or selfSkill.doubleHit>0 then
                    self.skilltype.gameObject:SetActive(true)
                    self.skilltype:SetSpriteName(SpriteDefine:GetSkillFireByFireType(selfSkill.showFireType))
                else
                    self.skilltype.gameObject:SetActive(false)
                end
            else
                if skilldata.skillType == 2 then
                    ---已解锁插槽，但没有装备技能
                    self.icon.gameObject:SetActive(false)
                    self.lock.gameObject:SetActive(false)
                    self.add.gameObject:SetActive(true)
                    if  self.effectObj ~= nil and self.effectObj.effect.gameObject~=nil then
                        self.effectObj.effect.gameObject:SetActive(false)
                    end

                end
                self:SetFrameImage(nil)
            end
        else
            ---未解锁
            if skilldata.skillType == 1 then
                --是自身技能
                self.icon:SetMat(self.gray)
                self.icon.gameObject:SetActive(true)
                local selfSkill = DataUtil.GetData("skill")[skilldata.id]
                if selfSkill ~= nil then
                    self.icon:SetSpriteName(selfSkill.Icon)
                    self:SetFrameImage(selfSkill)
                    --self.frame:SetSpriteName(SpriteDefine:GetItemQualityFrameByType(selfSkill.Quality))
                end
            else
                --是插槽技能
                    self.icon.gameObject:SetActive(false)
                    self.lock.gameObject:SetActive(true)
                    self.add.gameObject:SetActive(false)
                    self:SetFrameImage(nil)
                --self.frame:SetSpriteName(SpriteDefine._BG_Init)
            end
        end
    else
        self.lock.gameObject:SetActive(true)
        self.add.gameObject:SetActive(false)
        self.icon.gameObject:SetActive(false)
        self:SetFrameImage(nil)
        --self.frame:SetSpriteName(SpriteDefine._BG_Init)
    end

end
UICardSkillItem.OnCreate = OnCreate;
UICardSkillItem.OnRefresh = OnRefresh;
UICardSkillItem.SetFrameImage = SetFrameImage;
return UICardSkillItem