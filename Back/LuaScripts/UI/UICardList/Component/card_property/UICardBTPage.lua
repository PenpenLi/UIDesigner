---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aaa.
--- DateTime: 2019/5/6 20:34
---
local UICardBTPage = BaseClass("UICardBTPage", UIBaseContainer)
local base = UIBaseContainer
local all_hell_name_data =  DataUtil.GetData("hell_name")
local all_hell_name=DataUtil.GetData("master_hell")
local property = DataUtil.GetData("property")
local UIMatButton = require "UI.UIComm.Component.UIMatButton"
local UICardLvPage = require "UI.UICardList.Component.card_property.UICardBTWrapItem"
local function OnCreate(self,holder)
    base.OnCreate(self)
    self.holder=holder
    self:AddComponent(UIText,"propertyPanel/tip/baseTip"):SetText("突破效果")
    self.maxObj=self:AddComponent(UIText,"contnet")--UIUtil.FindTrans(self.transform,"contnet");
    self.maxObj:SetText("已达上限")

    self:AddComponent(UIText,"propertyPanel/lv"):SetText("等级上限")
    self.lvNowNum = self:AddComponent(UIText, "propertyPanel/lv/lvNowNum")
    self.lvArrow=UIUtil.FindTrans(self.transform,"propertyPanel/lv/green arrow")
    self.lvAfterNum = self:AddComponent(UIText, "propertyPanel/lv/lvArrow/lvAfterNum")

    self.hpName = self:AddComponent(UIText, "propertyPanel/hp/hpName")
    self.hpNowNum = self:AddComponent(UIText, "propertyPanel/hp/hpNowNum")
   -- self.hpArrow=UIUtil.FindComponent(self.transform,typeof(CS.UnityEngine.RectTransform),"propertyPanel/base/hp/hpArrow");
    self.hpAfterNum = self:AddComponent(UIText, "propertyPanel/hp/hpArrow/hpAfterNum")

    self.atkName = self:AddComponent(UIText, "propertyPanel/atk/atkName")
    --self.atkArrow=UIUtil.FindComponent(self.transform,typeof(CS.UnityEngine.RectTransform),"propertyPanel/base/atk/atkArrow");
    self.atkNowNum = self:AddComponent(UIText, "propertyPanel/atk/atkNowNum")
    self.atkAfterNum = self:AddComponent(UIText, "propertyPanel/atk/atkArrow/atkAfterNum")

    self.defName = self:AddComponent(UIText, "propertyPanel/defence/defName")
  --  self.defArrow=UIUtil.FindComponent(self.transform,typeof(CS.UnityEngine.RectTransform),"propertyPanel/base/defence/defArrow");
    self.defNowNum = self:AddComponent(UIText, "propertyPanel/defence/defNowNum")
    self.defAfterNum = self:AddComponent(UIText, "propertyPanel/defence/defArrow/defAfterNum")
    self.hpName:SetText(property[103].CnName)
    self.atkName:SetText(property[101].CnName)
    self.defName:SetText(property[102].CnName)
    self:AddComponent(UIText,"ghost_img/title"):SetText("突破阶段")
    self:AddComponent(UIText,"tp_img/tp_name"):SetText("等级突破")
    self.breakBtn = UIMatButton.New(self,"hellUpPanel/breakBtn")
    self.breakBtn:OnCreate()
    self.ghost_img_list={}


    self.gray=self:AddComponent(UIImage,"ghostPanel/ghost_UIWrapGroup3D/Image/Image/Image (1)"):GetMat()
    self.ghost_group= self:AddComponent(UIBaseContainer,"ghostPanel/ghost_UIWrapGroup3D");
    local count=self.ghost_group.transform.childCount;
    self.teamCompList={};
    for i = 0, count-1 do
        local tempItem=self.ghost_group:AddComponent(UIBaseContainer,i);
        local Img=tempItem:AddComponent(UIImage,"Image/Image (1)",AtlasConfig.DynamicTex);
        local bg_Img=tempItem:AddComponent(UIImage,"Image",AtlasConfig.DynamicTex);
        table.insert(self.teamCompList,{obj=tempItem,img=Img,bg_img=bg_Img});
    end
    self.need_items={}
    for i = 1, 4 do
        self.need_items[i] = UICardLvPage.New(self,"hellUpPanel/cost_UIWrapGroup3D/Item"..i)
        self.need_items[i]:OnCreate()
    end
    self.canBtn=true
end

local function OnHellUpBtnClick(self)

    LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
    self:OnHellUpBtnFun()
end
local function OnRefresh(self,data)
    if self.canBtn then
        --直接刷数据
        if self.base_eff~=nil then
            self.base_eff.effect.gameObject:SetActive(false)
        end
        if self.fight_eff~=nil then
            self.fight_eff.effect.gameObject:SetActive(false)
        end
    else
        if data.maxLevelByHell > data.level then
            --self.holder:SwitchPage(1)
        end
        self.canBtn=true

        --加动画
    end
    --点火
    for i = 1, #self.teamCompList do
        local all_num= all_hell_name_data[data.type][data.hellLevel + 1]~=nil and  data.maxghost+1 or data.maxghost
        if i<=all_num then
            self.teamCompList[i].obj.gameObject:SetActive(true)
            if i<=data.maxghost then
                self.teamCompList[i].bg_img:SetSpriteName("ui_t_c2_425",true)
                self.teamCompList[i].bg_img.transform.localScale=Vector3.New(0.4,0.4,1)
                self.teamCompList[i].img:SetSpriteName("ui_t_c2_207",true)
                self.teamCompList[i].img.transform.localScale=Vector3.New(2.1,2.1,1)
                self.teamCompList[i].img.transform.localPosition=Vector3.New(0,28,0)
                if i<=data.ghost then
                    self.teamCompList[i].img:SetMat(nil)
                else
                    self.teamCompList[i].img:SetMat(self.gray)
                end
            else
                self.teamCompList[i].bg_img:SetSpriteName("ui_t_c2_424",true)
                self.teamCompList[i].bg_img.transform.localScale=Vector3.New(0.4,0.4,1)
                self.teamCompList[i].img:SetSpriteName("ui_t_c2_646",true)
                self.teamCompList[i].img.transform.localScale=Vector3.New(2.8,2.8,1)
                self.teamCompList[i].img.transform.localPosition=Vector3.New(0,18,0)
                self.teamCompList[i].img:SetMat(self.gray)
            end
        else
            self.teamCompList[i].obj.gameObject:SetActive(false)
        end
    end
    self.maxObj.gameObject:SetActive(false)
    --self.lvNowNum:SetText( tostring(math.floor(data.level)) .. "/" .. tostring(math.floor(data.maxLevelByHell)))
    self.lvNowNum:SetText(tostring(math.floor(data.maxLevelByHell)))
    local nextvalue= CardData:GetInstance():GetNextBreakGFX(data.id)
    self.hpNowNum:SetText(math.floor(data.lvandstarproperty[103]+data.ghostproperty[103]))
    self.atkNowNum:SetText(math.floor(data.lvandstarproperty[101]+data.ghostproperty[101]))
    self.defNowNum:SetText(math.floor(data.lvandstarproperty[102]+data.ghostproperty[102]))
    if type(nextvalue[103])~="string" then
        local next_hp=Mathf.Floor(nextvalue[103])+Mathf.Floor(data.lvandstarproperty[103]+data.ghostproperty[103])
        local next_atk=Mathf.Floor(nextvalue[101])+Mathf.Floor(data.lvandstarproperty[101]+data.ghostproperty[101])
        local next_def=Mathf.Floor(nextvalue[102]) +Mathf.Floor(data.lvandstarproperty[102]+data.ghostproperty[102])
        nextvalue[103]=next_hp.."(+"..Mathf.Floor(nextvalue[103])..")"
        nextvalue[101]=next_atk.."(+"..Mathf.Floor(nextvalue[101])..")"
        nextvalue[102]=next_def.."(+"..Mathf.Floor(nextvalue[102])..")"
        self.proData={
            {name="等级上限",before=data.maxLevelByHell,after=data.maxLevelByNextHell},
            {name=property[103].CnName,before=data.finalProperty[103],after=next_hp},
            {name=property[101].CnName,before=data.finalProperty[101],after=next_atk},
            {name=property[102].CnName,before=data.finalProperty[102],after=next_def}
        }
    end


    if data.ghost<data.maxghost then
        self.lvAfterNum:SetText("")
        self.lvArrow.gameObject:SetActive(false)
        self.hpAfterNum:SetText(nextvalue[103])
        self.atkAfterNum:SetText(nextvalue[101])
        self.defAfterNum:SetText(nextvalue[102])

    else
        self.lvArrow.gameObject:SetActive(true)
        if data.maxLevelByHell == data.maxLevel then
            self.lvAfterNum:SetText("已满")
            self.hpAfterNum:SetText("已满")
            self.atkAfterNum:SetText("已满")
            self.defAfterNum:SetText("已满")
        else
            self.lvAfterNum:SetText(tostring(math.floor(data.maxLevelByNextHell)))
            self.hpAfterNum:SetText(nextvalue[103])
            self.atkAfterNum:SetText(nextvalue[101])
            self.defAfterNum:SetText(nextvalue[102])
        end
    end


    self.cur_lv = data.level
    self.card_id = data.id
   --print(data.maxLevelByHell.."/"..data.maxLevelByNextHell)


    local hellUpSubMoney={}
    if  data.maxLevelByHell < data.maxLevel or  data.ghost_info then
        for i = 1,#data.hellUpCostGroup do
            if i ~= 1 then
                hellUpSubMoney[i-1]=data.hellUpCostGroup[i]
            end
        end
    end

    local mat_enough = true
    for i = 1, #self.need_items do
        if i<=#hellUpSubMoney then
            self.need_items[i].gameObject:SetActive(true)
           local cur_meet = self.need_items[i]:SetData(hellUpSubMoney[i])
            if mat_enough and not cur_meet then
                mat_enough = false
            end
        else
            self.need_items[i].gameObject:SetActive(false)
        end
    end
    local hellUpCostMoney =data.hellUpCostGroup[1]
    local cost_val = 0
    local id = -1
    if hellUpCostMoney ~= nil then
        id = hellUpCostMoney.Id
        cost_val = hellUpCostMoney.Val
    end

    if data.maxLevelByHell == data.maxLevel and not data.ghost_info then --已达上限
        self.maxObj.gameObject:SetActive(true)
        self.breakBtn.gameObject:SetActive(false)
    else
       local btn_tip = DataUtil.GetData("button_tip")
        self.breakBtn.gameObject:SetActive(true)
        self.breakBtn:OnInitBtn(btn_tip[3].ButtonDes,Bind(self,OnHellUpBtnClick),id,cost_val)
        self.breakBtn:UpdateCurrency()
        if mat_enough then
            if all_hell_name_data[data.type][data.hellLevel + 1] then
                if all_hell_name_data[data.type][data.hellLevel + 1].HellLevel <= UserData:GetInstance().hellLevel  then
                    self.breakBtn:UpdateButtonState(1)
                else
                    if not data.ghost_info  then
                        local limited_hell=all_hell_name_data[data.type][data.hellLevel + 1].HellLevel
                        local str=all_hell_name[limited_hell].SubLv==0 and all_hell_name[limited_hell].Name or (all_hell_name[limited_hell].Name.."+"..all_hell_name[limited_hell].SubLv)
                        self.breakBtn:UpdateButtonState(0,string.format(btn_tip[1].Dse, str))
                    end
                end
            end
        else
            self.breakBtn:UpdateButtonState(0,btn_tip[3].Dse)
        end
        if (data.ghost_info  and data.level < data.ghost_info.LvLimit)  then
            self.breakBtn:UpdateButtonState(0,data.name.."需达到"..data.ghost_info.LvLimit.."级")
        elseif  not data.ghost_info and  data.level < data.maxLevelByHell then
            self.breakBtn:UpdateButtonState(0,data.name.."需达到"..data.maxLevelByHell.."级")
        end
    end

end
--突破
local function OnHellUpBtnFun(self)
    self.canBtn=false
    local RequestMsg_id = MsgIDDefine.PBCARD_HELL_UP_LEVEL_REQUEST
    local RequestMsg = MsgIDMap[RequestMsg_id]()
    RequestMsg.cardId = self.card_id
    GuideManager:GetInstance():SetGuideServerStep(RequestMsg)
    self.holder.parent:ChangeMaskState(true)
    NetManager:GetInstance():SendMessage(RequestMsg_id, RequestMsg,function(msg_obj)
        if msg_obj.OpCode ~= 0 then
            UISpecial:GetInstance():UITipText(msg_obj.Packages.msg)
            return
        end
        LJAudioManger:GetInstance():PlayVoice("UI_LevelUp_01")
        if self.base_eff~=nil then
            self.base_eff.effect.gameObject:SetActive(false)
            self.base_eff.effect.gameObject:SetActive(true)
        else
            self.base_eff = self:AddComponent(UIEffect, "propertyPanel/tip", 1, EffectConfig.UICardUpLightHandler)
        end
        if self.fight_eff~=nil then
            self.fight_eff.effect.gameObject:SetActive(false)
            self.fight_eff.effect.gameObject:SetActive(true)
        else
            self.fight_eff = self:AddComponent(UIEffect, "ghost_img", 1, EffectConfig.UICardUpLightHandler)
        end
        local showCardData = CardData:GetInstance().cards[self.card_id]
        if showCardData.ghost<showCardData.maxghost then
            --生火
            --TimerManager:GetInstance():SimpleTimerArgs(0.5,function()
                self:UpdateData()
                self.holder.parent:ChangeMaskState(false)
            --end,nil,true)
            --]]
        else
            --self.holder:SwitchPage(1)
            --UIManager:GetInstance():OpenWindow(UIWindowNames.UICardUpTip,1,self.card_id,self.proData);
            --self:UpdateData()
            --self.holder.parent:ChangeMaskState(false)
            --TimerManager:GetInstance():SimpleTimerArgs(1,function()
                --UIManager:GetInstance():OpenWindow(UIWindowNames.UICardUpTip,1,self.card_id,self.proData);
                self:UpdateData()
                self.holder.parent:ChangeMaskState(false)
                self.holder:SwitchPage(1)
           -- end,nil,true)
            --]]
        end
    end)
end
local function UpdateData(self)
    local showCardData = CardData:GetInstance().cards[self.card_id]
    if showCardData.hellUpCostGroup then
        for i = 1, #showCardData.hellUpCostGroup do
            BackpackData:GetInstance():UpdateItemData(showCardData.hellUpCostGroup[i].Id, -showCardData.hellUpCostGroup[i].Val)
        end
    end
    --更新材料消耗
    CardData:GetInstance():UpdateCardDataByHellLevel(showCardData.id, showCardData.hellLevel + 1)
    --刷新View
    --UIManager:GetInstance():Broadcast(UIMessageNames.UI_NEWCARD_BREAK_SUCCESS,1)
    UIManager:GetInstance():Broadcast(UIMessageNames.UI_NEWCARD_HEROEFFECT)
    DataManager:GetInstance():Broadcast(DataMessageNames.ON_NEWUICARD_GET_NEW_CARD,self.card_id)
end
UICardBTPage.OnHellUpBtnFun = OnHellUpBtnFun
UICardBTPage.UpdateData = UpdateData
UICardBTPage.OnRefresh = OnRefresh
UICardBTPage.OnCreate = OnCreate
return UICardBTPage