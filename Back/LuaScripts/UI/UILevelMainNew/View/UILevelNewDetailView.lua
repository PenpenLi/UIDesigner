---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LJ095.
--- DateTime: 2019/5/22 11:10
---

local UILevelNewDetailView = BaseClass("UILevelNewDetailView", UIBaseView)
local base = UIBaseView
local BattleFieldManager = require "GameLogic.BattleNew.Logic.Manager.BattleFieldManager"
local star_score_parent_layout_path="RightLayout/UICardBackAniRoot/PassStarLayout/StarEffect";
local item_parent_layout_path="RightLayout/UICardBackAniRoot/RewardsLayout/ItemGroup";
local has_taken_path="RightLayout/UICardBackAniRoot/RewardsLayout/hasTaken";
local tip_text_path="RightLayout/UICardBackAniRoot/RewardsLayout/starUpBtn/tip";
local begin_btn_path="RightLayout/UICardBackAniRoot/RewardsLayout/starUpBtn";
local story_obj_path="RightLayout/UICardBackAniRoot/storyLayout";
local story_text_path="RightLayout/UICardBackAniRoot/storyLayout/storyText";
local anim_path="RightLayout";
local mask_btn_path="mask";
local array_btn_path="RightLayout/UICardBackAniRoot/RewardsLayout/arrayBtn";

local function OnCreate(self)
    base.OnCreate(self)
    local maskBtn=self:AddComponent(UIButton,mask_btn_path);
    maskBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_Cancel")
        UIManager:GetInstance():CloseWindow(UIWindowNames.UILevelNewDetail);
        UIManager:GetInstance():Broadcast(UIMessageNames.UI_SHOW_LEVEL_MAIN);
    end);
    self.arrayBtn=self:AddComponent(UIButton,array_btn_path);
    self.arrayBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
        if self.model.playLv>=self.model.data._data.NeedLv then
            if self.model.data._data.FormType==0 then
                self.ctrl:SendEnterFightRequest(self.model.data,false,self.model.isRebindScene);
            else
                self.ctrl:SendEnterStoryRequest(self.model.data);
            end
        else
            UISpecial:GetInstance():UITipText("等级不足")
        end
    end);
    local closeComParent=UIUtil.FindTrans(self.transform,"");
    UIUtil.CreatCloseBtnComponent(self,closeComParent,function(go) self.closeComponent=go end,function()
        LJAudioManger:GetInstance():PlayVoice("UI_Cancel")
        UIManager:GetInstance():CloseWindow(UIWindowNames.UILevelNewDetail);
        UIManager:GetInstance():Broadcast(UIMessageNames.UI_SHOW_LEVEL_MAIN);
    end,function()
        LJAudioManger:GetInstance():PlayVoice("UI_Cancel")
        UIManager:GetInstance():Broadcast(UIMessageNames.UIMAINCITY_BACK_SCENE,"UILevelMain")
        UIManager:GetInstance():Broadcast(UIMessageNames.UILEVELMAIN_BACK_MIANCITY);
    end ,DataUtil.GetClientText(100129),false,2);
    self.ainm=UIUtil.FindComponent(self.transform,typeof(CS.UnityEngine.Animator),anim_path);
    self.starScoreParent=self:AddComponent(UIBaseContainer,star_score_parent_layout_path);
    self.scoreList={};
    local count=self.starScoreParent.transform.childCount;
    for i = 0, count-1 do
        local tempItem=self.starScoreParent:AddComponent(UIBaseContainer,i);
        local nameText=tempItem:AddComponent(UIText,"addName");
        local starImg=tempItem:AddComponent(UIImage,"Image",AtlasConfig.DynamicTex);
        table.insert(self.scoreList,{nameTxt=nameText,starImage=starImg});
    end
    self.rewardParent=self:AddComponent(UIBaseContainer,item_parent_layout_path);
    count=self.rewardParent.transform.childCount;
    self.rewardList={};
    for i = 0, count-1 do
        local tempItem=self.rewardParent:AddComponent(UIBaseContainer,i);
        local tempFrame=tempItem:AddComponent(UIImage,"",AtlasConfig.DynamicTex);
        local tempIcon=tempItem:AddComponent(UIImage,"Icon",AtlasConfig.DynamicTex);
        local tempNumText=tempItem:AddComponent(UIText,"chipNum");
        local tempMaskImg=UIUtil.FindTrans(tempItem.transform,"mask");
        local tempSuiImg=UIUtil.FindTrans(tempItem.transform,"chipImg");

        local info_iconPress=tempItem:AddComponent(UIEventTrigger,"Icon");
        info_iconPress:SetOnLongPress(function()
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIItemTips, self.model.itemList[i+1].xlsxData.id);
        end,(function()
            UIManager:GetInstance():CloseWindow(UIWindowNames.UIItemTips)
        end),true)
        table.insert(self.rewardList,{itemObj=tempItem,frame=tempFrame,icon=tempIcon,numTxt=tempNumText,maskImg=tempMaskImg,suiImg=tempSuiImg});
    end
    self.hasTakenObj=UIUtil.FindTrans(self.transform,has_taken_path);
    self.tipText=self:AddComponent(UIText,tip_text_path);
    self.beginBtn=self:AddComponent(UIButton,begin_btn_path);
    self.beginBtnImg=self:AddComponent(UIImage,begin_btn_path,AtlasConfig.DynamicTex);
    self.mat=self.beginBtnImg:GetMat();
    self.storyObj=UIUtil.FindTrans(self.transform,story_obj_path);
    self.storyText=self:AddComponent(UIText,story_text_path);
    self.beginBtn:SetOnClick(function()
        LJAudioManger:GetInstance():PlayVoice("UI_CommonClick")
        if self.model.playLv>=self.model.data._data.NeedLv then
            if self.model.data._data.FormType==0 then
                self.ctrl:SendEnterFightRequest(self.model.data,true,self.model.isRebindScene);
            else
                self.ctrl:SendEnterStoryRequest(self.model.data,true);
            end
        else
            UISpecial:GetInstance():UITipText("等级不足")
        end
    end)
end

local function CheckBattleTip()

    local jlr=UserData:GetInstance():GetBattleHeroNum(UIUtil.GetKeyByBattleType(BattleFieldManager:GetInstance().battleType, BattleFieldManager:GetInstance().sceneConfigId),true)
    local shl=UserData:GetInstance():GetBattleHeroNum(UIUtil.GetKeyByBattleType(BattleFieldManager:GetInstance().battleType, BattleFieldManager:GetInstance().sceneConfigId),false)

    if (jlr<3 and #CardData:GetInstance().JLRData>jlr)  then
        return true
    else
        if shl< jlr and #CardData:GetInstance().SHLData>shl then
            return true
        end
    end
    return false
end
local function OnEnable(self)
    base.OnEnable(self)
    self.ainm:Play("FX_UICardList_back");
    --动画播完检测若引导
    local animInfo = self.ainm:GetCurrentAnimatorStateInfo(0)
    coroutine.start(function()
        local until_func = function()
            if self.ainm.isActiveAndEnabled then
                animInfo = self.ainm:GetCurrentAnimatorStateInfo(0)
                if animInfo.normalizedTime >= 1.0 then
                    return true
                else
                    return false
                end
            else
                return false
            end
        end
        coroutine.waituntil(until_func)
        if GuideGroup:GetInstance().Runing  then
            DataManager:GetInstance():Broadcast(DataMessageNames.UI_Guide_NeedEvent)
        end
    end)
    if self.model.data._data.FormType == 0 and self.model.data._data.DrillLv == nil  then
        if  self:CheckBattleTip() then
            GuideWeakCheckManager:GetInstance().canWeakGuide=true
            GuideWeakCheckManager:GetInstance():EnterGameCheck(50)
        else
            if  UserData:GetInstance():GetNorBattleCanMove() and  self.model.data._id==10110 then
                GuideWeakCheckManager:GetInstance().canWeakGuide=true
                GuideWeakCheckManager:GetInstance():EnterGameCheck(50)
            end
        end
    end
    LJAudioManger:GetInstance():PlayVoice("UI_Panel_02")
    self.storyObj.gameObject:SetActive(self.model.data._data.FormType ~= 0);
    self.starScoreParent.transform.gameObject:SetActive(self.model.data._data.FormType == 0);
    self.arrayBtn.transform.gameObject:SetActive(self.model.data._data.FormType == 0 and self.model.data._data.DrillLv == nil);
    if self.model.data._data.FormType == 0  then
        for i, v in ipairs(self.scoreList) do
            local singleRewardData=self.model.starList[i];
            local value1 =math.modf(singleRewardData[2].Mul*singleRewardData[2].Param[1])
            local index = string.find(singleRewardData[2].Des,"%s",1,true)
            local str = ""
            if index ~= nil and index > 0 then
                str = string.format(singleRewardData[2].Des,tostring(value1))
            else
                str = singleRewardData[2].Des
            end
            v.nameTxt:SetText(str);
            if singleRewardData[1] == 0 then --未達到
                v.starImage:SetSpriteName("ui_t_c2_100")
            else
                v.starImage:SetSpriteName("ui_t_c2_099")
            end
        end
    else
        self.storyText:SetText(self.model.data._data.StoryDes);
    end

    local isPass=MapData:GetInstance():CheckPassLevel(self.model.data._id)
    self.hasTakenObj.gameObject:SetActive(isPass);
    for i, v in ipairs(self.rewardList) do
        v.itemObj.transform.gameObject:SetActive(self.model.itemList~=nil and self.model.itemList[i]~=nil);
        if self.model.itemList~=nil and self.model.itemList[i]~=nil then
            local itemXlsxData= self.model.itemList[i].xlsxData;
            v.frame:SetSpriteName(SpriteDefine:GetItemQualityFrameByType(itemXlsxData.quality))
            v.icon:SetSpriteName(itemXlsxData.icon);
            local num=self.model.itemList[i].val;
            v.numTxt:SetText(num);
            v.numTxt.gameObject:SetActive(num>0);
            v.suiImg.gameObject:SetActive(itemXlsxData.itemType==17);
            v.maskImg.gameObject:SetActive(isPass);

        end
    end
    if self.model.playLv>=self.model.data._data.NeedLv then
        self.tipText.gameObject:SetActive(false);
        self.beginBtnImg:SetMat(nil);
    else
        self.tipText.gameObject:SetActive(true);
        self.tipText:SetText(string.format("等级%s开启",self.model.data._data.NeedLv));
        self.beginBtnImg:SetMat(self.mat);
    end
end

local function OnAddListener(self)
    base.OnAddListener(self)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
end

local function OnDestroy(self)
    -- 销毁
    base.OnDestroy(self)
end
local function OnDisable(self)
    base.OnDisable(self)
end


UILevelNewDetailView.OnCreate = OnCreate
UILevelNewDetailView.OnEnable = OnEnable
UILevelNewDetailView.OnAddListener = OnAddListener
UILevelNewDetailView.OnRemoveListener = OnRemoveListener
UILevelNewDetailView.OnDestroy = OnDestroy
UILevelNewDetailView.OnDisable = OnDisable
UILevelNewDetailView.CheckBattleTip=CheckBattleTip
return UILevelNewDetailView;